{"version":3,"file":"gl-ng-frontend.js","sources":["../../../projects/gl-ng-frontend/src/lib/core/directives/autofocus/core-directives-autofocus.directive.ts","../../../projects/gl-ng-frontend/src/lib/core/directives/drag-and-drop/core-directives-drag-and-drop.directive.ts","../../../projects/gl-ng-frontend/src/lib/core/gl-core.module.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/attachment/item/gl-shared-component-attachment-item.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/alert/gl-shared-component-modal-alert.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/attachment/image/preview/gl-shared-component-attachment-image-preview.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/attachment/image/preview/gl-shared-component-attachment-image-preview.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/attachment/file/gl-shared-component-button-attachment-file.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/attachment/file/gl-shared-component-button-attachment-file.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/attachment/link/gl-shared-component-modal-attachment-link.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/attachment/link/gl-shared-component-button-attachment-link.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/image/simple/gl-shared-component-button-image-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/image/tooltip/gl-shared-component-button-image-tooltip.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/interface/gl-shared-component-button-interface.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/menu/simple/gl-shared-component-button-menu-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/menu/tooltip/gl-shared-component-button-menu-tooltip.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/error-message/gl-shared-component-error-message.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/filter/gl-shared-component-filter.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/filter/gl-shared-component-filter.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/filter/container/gl-shared-component-filter-container.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/footer/container/gl-shared-component-footer-container.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/footer/simple/gl-shared-component-footer-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/header/default/gl-shared-component-header-default.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/autocomplete/label/gl-shared-component-input-autocomplete-label.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/autocomplete/simple/gl-shared-component-input-autocomplete-simple.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/autocomplete/simple/gl-shared-component-input-autocomplete-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/button/simple/gl-shared-component-input-button-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/button/hyperlink/gl-shared-component-input-button-hyperlink.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/option/simple/gl-shared-component-input-option-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text/simple/gl-shared-component-input-text-simple.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text/simple/gl-shared-component-input-text-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text/label/button/container/gl-shared-component-input-text-label-button-container.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text/label/simple/gl-shared-component-input-text-label-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text-area/label/gl-shared-component-input-text-area-label.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text-area/simple/gl-shared-component-input-text-area-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/logo/square/gl-shared-component-logo-square.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/attachment/link/gl-shared-component-modal-attachment-link.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/alert/gl-shared-component-modal-alert.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/loading/gl-shared-component-modal-loading.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/loading/gl-shared-component-modal-loading.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/header/gl-shared-component-modal-header.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/menu/background/gl-shared-component-menu-background.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/menu/gl-shared-component-menu.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/menu/item/gl-shared-component-menu-item.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/menu/gl-shared-component-menu.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/navigation/tab/simple/gl-shared-component-navigation-tab-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/navigation/tab/container/gl-shared-component-navigation-tab-container.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/title/label/simple/gl-shared-component-title-label-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/title/label/button/simple/gl-shared-component-title-label-button-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/title/label/button/container/gl-shared-component-title-label-button-container.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/title/page/gl-shared-component-title-page.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/datepicker/simple/day-month-year/gl-shared-component-input-datepicker-simple-day-month-year.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/paging/gl-shared-component-paging.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/datepicker/simple/month-year/gl-shared-component-input-datepicker-simple-month-year.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/datepicker/label/gl-shared-component-input-datepicker-label.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/switch/gl-shared-component-input-switch.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text/simple/with-step/gl-shared-component-input-text-simple-with-step.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/list/item-remove/gl-shared-component-input-list-item-remove.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/list/item-up-down/gl-shared-component-input-list-item-up-down.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/check-box/simple/gl-shared-component-input-check-box-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/check-box/label/gl-shared-component-input-check-box-label.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/drag-and-drop/simple/gl-shared-component-input-drag-and-drop-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/gl-component.module.ts","../../../projects/gl-ng-frontend/src/lib/shared/gl-shared.module.ts","../../../projects/gl-ng-frontend/src/lib/gl-ng-frontend.module.ts","../../../projects/gl-ng-frontend/src/lib/shared/view/error-message/gl-shared-view-error-message.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/view/gl-shared-view.module.ts","../../../projects/gl-ng-frontend/src/public-api.ts","../../../projects/gl-ng-frontend/src/gl-ng-frontend.ts"],"sourcesContent":["import { Directive, ElementRef, OnInit } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[glAutoFocus]'\r\n})\r\nexport class CoreDirectivesAutofocusDirective implements OnInit {\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.elementRef.nativeElement.focus();\r\n  }\r\n}\r\n","import { Directive, EventEmitter, HostBinding, HostListener, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[glCoreDirectivesDragAndDrop]'\r\n})\r\nexport class CoreDirectivesDragAndDropDirective {\r\n  @HostBinding('class.file-over') fileOver: boolean;\r\n  @HostBinding('class.file-not-over') fileNotOver: boolean;\r\n  @Output() fileDropped: EventEmitter<any> = new EventEmitter();\r\n\r\n  private static isReadOnly(event): boolean {\r\n    return event.target.classList.contains('readonly');\r\n  }\r\n\r\n  @HostListener('dragover', ['$event']) onDragOver(event: DragEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const readonly = CoreDirectivesDragAndDropDirective.isReadOnly(event);\r\n\r\n    if (!readonly) {\r\n      this.fileOver = true;\r\n      this.fileNotOver = false;\r\n    } else {\r\n      this.fileOver = false;\r\n      this.fileNotOver = true;\r\n    }\r\n  }\r\n  @HostListener('dragleave', ['$event']) public onDragLeader(event: DragEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const readonly = CoreDirectivesDragAndDropDirective.isReadOnly(event);\r\n\r\n    if (!readonly) {\r\n      this.fileOver = false;\r\n      this.fileNotOver = true;\r\n    } else {\r\n      this.fileOver = false;\r\n      this.fileNotOver = true;\r\n    }\r\n  }\r\n  @HostListener('drop', ['$event']) public onDrop(event: DragEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const readonly = CoreDirectivesDragAndDropDirective.isReadOnly(event);\r\n\r\n    if (!readonly) {\r\n      this.fileOver = false;\r\n      this.fileNotOver = true;\r\n      const files = event.dataTransfer.files;\r\n\r\n      if (files.length > 0) {\r\n        // Do some stuff here\r\n        this.fileDropped.emit(files);\r\n        console.log(`You dropped ${files.length} files.`);\r\n      }\r\n    } else {\r\n      this.fileOver = false;\r\n      this.fileNotOver = true;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CoreDirectivesAutofocusDirective } from './directives/autofocus/core-directives-autofocus.directive';\r\nimport { CoreDirectivesDragAndDropDirective } from './directives/drag-and-drop/core-directives-drag-and-drop.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CoreDirectivesAutofocusDirective,\r\n    CoreDirectivesDragAndDropDirective\r\n  ],\r\n    exports: [\r\n        CoreDirectivesAutofocusDirective,\r\n        CoreDirectivesDragAndDropDirective\r\n    ],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class GlCoreModule { }\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-attachment-item',\r\n  templateUrl: './gl-shared-component-attachment-item.component.html',\r\n  styleUrls: ['./gl-shared-component-attachment-item.component.scss']\r\n})\r\nexport class GlSharedComponentAttachmentItemComponent {\r\n  @Input() disabled = false;\r\n  @Input() attachmentUrl: string;\r\n  @Input() fileName: string;\r\n  @Input() fileIcon: string;\r\n  @Input() id: number;\r\n  @Input() type: string;\r\n  @Input() addingSmooth: boolean;\r\n\r\n  @Output('onClick') onItemClick: EventEmitter<void> = new EventEmitter();\r\n  @Output() removeCurrentItem: EventEmitter<{ id: number }> = new EventEmitter();\r\n  @Output() editCurrentItem: EventEmitter<{ id: number }> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  removeItem(id: number) { this.removeCurrentItem.emit({ id }); }\r\n  editItem(id: number) { this.editCurrentItem.emit({ id }); }\r\n\r\n  onButtonClick(e: Event) {\r\n    e.preventDefault();\r\n    this.onItemClick.emit();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentModalAlertService {\r\n  message: string;\r\n  isOK = true;\r\n\r\n  showModal: boolean;\r\n  modalClass: string;\r\n  currentValue: Subject<boolean> = new Subject<boolean>();\r\n  resolvePromise;\r\n\r\n  customYes: string;\r\n  customNo: string;\r\n\r\n  constructor() {}\r\n\r\n  show(message) {\r\n    return this.modal(true, true, message);\r\n  }\r\n  showYesNo(message, customYes?: string, customNo?: string) {\r\n    this.customYes = customYes;\r\n    this.customNo = customNo;\r\n\r\n    return this.modal(true, false, message);\r\n  }\r\n\r\n  hide() {\r\n    this.modal(false, this.isOK, this.message);\r\n  }\r\n\r\n  onNo() {\r\n    this.currentValue.next(false);\r\n    this.resolvePromise(false);\r\n    this.hide();\r\n  }\r\n  onYes() {\r\n    this.currentValue.next(true);\r\n    this.resolvePromise(true);\r\n    this.hide();\r\n  }\r\n  onOk() {\r\n    this.currentValue.next(true);\r\n    this.resolvePromise(true);\r\n    this.hide();\r\n  }\r\n\r\n  private modal(show: boolean, isOK: boolean = true, message: string = '') {\r\n    return new Promise(resolve => {\r\n      this.resolvePromise = resolve;\r\n      this.isOK = isOK;\r\n      this.message = message;\r\n\r\n      if (show) {\r\n        this.modalClass = 'hide-modal';\r\n        this.showModal = show;\r\n        this.modalClass = 'show-modal';\r\n      } else {\r\n        this.modalClass = 'hide-modal';\r\n        setTimeout(() => {\r\n          this.showModal = false;\r\n          this.message = '';\r\n          this.customYes = null;\r\n          this.customNo = null;\r\n        }, 300);\r\n      }\r\n    });\r\n  }\r\n\r\n  onModalKeyUp(e: KeyboardEvent) {\r\n    if (e.key === 'Enter') {\r\n      if (this.isOK) { this.onOk(); } else { this.onYes(); }\r\n    } else if (e.key === 'Escape') {\r\n      if (this.isOK) { this.onOk(); } else { this.onNo(); }\r\n    }\r\n  }\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { AttachmentConvert, AttachmentParser, AttachmentValidate, ImageResize, StringConverter } from 'gl-w-frontend';\r\n\r\nimport { IImageButtonTooltip } from '../../../button/image/tooltip/gl-shared-component-button-image-tooltip.interface';\r\nimport { GlSharedComponentModalAlertService } from '../../../modal/alert/gl-shared-component-modal-alert.service';\r\nimport { IImageString, IImageUpdate } from './gl-shared-component-attachment-image-preview.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentAttachmentImagePreviewService {\r\n  private readonly image = '../assets/img/icon/image/image-template.svg';\r\n\r\n  retrieveUpdate: Subject<IImageUpdate> = new Subject();\r\n  labelIcons = '../assets/img/icon/label/';\r\n\r\n  buttons: IImageButtonTooltip[] = [\r\n    {\r\n      src: `${this.labelIcons}image.svg`,\r\n      id: 'add-image-from-label',\r\n      alt: 'Add image',\r\n      show: true, callback: () => {\r\n        this.addImage();\r\n      }\r\n    },\r\n    {\r\n      src: `${this.labelIcons}remove-image.svg`,\r\n      id: 'clear-image-from-label',\r\n      alt: 'Remove image',\r\n      show: false,\r\n      callback: () => {\r\n        this.removeImage();\r\n      }\r\n    },\r\n  ];\r\n\r\n  private _accepts: string[];\r\n  private _input: HTMLInputElement;\r\n  private _userImage: HTMLDivElement;\r\n  private _currentValue: EventEmitter<IImageString>;\r\n\r\n  constructor(private _alert: GlSharedComponentModalAlertService) {\r\n    this.retrieveUpdate.subscribe((data) => {\r\n      if (data.image != null && data.image.trim().length > 0) {\r\n        this.setImage(data);\r\n        this.updateButtons(true);\r\n      } else {\r\n        this.setImage({ image: '' });\r\n        this.updateButtons(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  initialize(input: HTMLInputElement, userImage: HTMLDivElement, currentValue: EventEmitter<IImageString>,\r\n             invalidSizeDescription: string, invalidFormatDescription: string, addImageButtonDescription: string, removeImageButtonDescription: string) {\r\n    this._input = input;\r\n    this._accepts = AttachmentParser.parseAcceptFiles((input.attributes as any).accept.value);\r\n    this._userImage = userImage;\r\n    this._currentValue = currentValue;\r\n\r\n    setTimeout(() => {\r\n      this.buttons[0].alt = addImageButtonDescription;\r\n      this.buttons[1].alt = removeImageButtonDescription;\r\n    }, 100);\r\n\r\n    this._input.oninput = () => { this.onChange(invalidSizeDescription, invalidFormatDescription); };\r\n    this.removeImage(true);\r\n  }\r\n\r\n  onChange(invalidSizeDescription: string, invalidFormatDescription: string) {\r\n    const isValid = AttachmentValidate.file(this._input, this._accepts);\r\n    const sizeValid = AttachmentValidate.fileSize(this._input);\r\n\r\n    if (!sizeValid) {\r\n      const maxSize: number = AttachmentValidate.maxSize(this._input);\r\n      const maxSizeStr = StringConverter.formatNumber(maxSize);\r\n      this._alert.show(`${invalidSizeDescription} ${maxSizeStr}KB`).then(() => {});\r\n      return;\r\n    }\r\n\r\n    if (isValid) {\r\n      AttachmentConvert.textFileToUrlImage(this._input.files[0]).then((image: string) => {\r\n        this.setImage({ image });\r\n        this._currentValue.emit({ value: image });\r\n        this.updateButtons(true);\r\n        this.clearInput();\r\n      });\r\n    } else {\r\n      this.clearInput();\r\n      this._alert.show(invalidFormatDescription).then(() => {});\r\n    }\r\n  }\r\n\r\n  clearInput() {\r\n    this._input.value = null;\r\n  }\r\n\r\n  updateButtons(hasValue: boolean) {\r\n    this.buttons[0].show = !hasValue;\r\n    this.buttons[1].show = hasValue;\r\n  }\r\n\r\n  setImage(data: IImageUpdate) {\r\n    const img = data.resize ? ImageResize.base64(data) : data.image;\r\n\r\n    this._userImage.style.backgroundImage = `url(\"${img}\")`;\r\n    this._userImage.classList.remove('required-fill');\r\n  }\r\n\r\n  addImage() {\r\n    this._input.click();\r\n  }\r\n\r\n  removeImage(init?: boolean) {\r\n    this.clearInput();\r\n    this.setImage({ image: this.image });\r\n\r\n    if (!init) {\r\n      this._currentValue.emit({ value: null });\r\n      this.updateButtons(false);\r\n    }\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { GlSharedComponentAttachmentImagePreviewService } from './gl-shared-component-attachment-image-preview.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-attachment-image-preview',\r\n  templateUrl: './gl-shared-component-attachment-image-preview.component.html',\r\n  styleUrls: ['./gl-shared-component-attachment-image-preview.component.scss']\r\n})\r\nexport class GlSharedComponentAttachmentImagePreviewComponent implements AfterViewInit{\r\n  @ViewChild('fileInputImage', { read: ElementRef, static: true }) fileInputImage: ElementRef<HTMLInputElement>;\r\n  @ViewChild('userImage', { read: ElementRef, static: true }) userImage: ElementRef<HTMLDivElement>;\r\n\r\n  @Input() disabled = false;\r\n  @Input() currentImage;\r\n  @Input() required = false;\r\n  @Input() type: 'light' | 'dark' | '' = '';\r\n  @Input() showLabel: boolean = true;\r\n  @Input() requiredFieldDescription: string = 'Required field';\r\n  @Input() addImageDescription: string = 'Click to add an image';\r\n  @Input() maxImageSize: string = '10240';\r\n  @Input() invalidSizeDescription: string = 'Invalid file size. The max allowed size is';\r\n  @Input() invalidFormatDescription: string = 'Invalid file format!';\r\n  @Input() addImageButtonDescription: string = 'Add image';\r\n  @Input() removeImageButtonDescription: string = 'Remove image';\r\n\r\n  @Output() currentValue$ = new EventEmitter();\r\n\r\n  constructor(public service: GlSharedComponentAttachmentImagePreviewService) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.service.initialize(\r\n      this.fileInputImage.nativeElement,\r\n      this.userImage.nativeElement,\r\n      this.currentValue$,\r\n      this.invalidSizeDescription,\r\n      this.invalidFormatDescription,\r\n      this.addImageButtonDescription,\r\n      this.removeImageButtonDescription\r\n    );\r\n\r\n    this.updateImage();\r\n  }\r\n\r\n  updateImage() {\r\n    if (this.currentImage != null && this.currentImage.length > 0) {\r\n      this.service.setImage(this.currentImage);\r\n    }\r\n  }\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { GlSharedComponentModalAlertService } from '../../../modal/alert/gl-shared-component-modal-alert.service';\r\nimport { AttachmentIcon, AttachmentParser, AttachmentValidate, StringConverter } from 'gl-w-frontend';\r\nimport { IAttachmentData } from 'gl-sp-frontend';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentButtonAttachmentFileService {\r\n  private _input: HTMLInputElement;\r\n  private _accepts: string[];\r\n  private _currentValue: EventEmitter<IAttachmentData>;\r\n  private _attachments: IAttachmentData[];\r\n\r\n  constructor(\r\n    public _alert: GlSharedComponentModalAlertService\r\n  ) { }\r\n\r\n  initialize(input: HTMLInputElement, currentValue: EventEmitter<IAttachmentData>, attachments: IAttachmentData[],\r\n             duplicatedDescription: string, invalidSizeDescription: string, invalidFormatDescription: string, attachmentIconSrc: string) {\r\n    this._input = input;\r\n    this._currentValue = currentValue;\r\n    this._attachments = attachments;\r\n\r\n    // Todo Block specif files\r\n    const accept = (input.attributes as any).accept.value;\r\n    // tslint:disable-next-line:triple-equals\r\n    this._accepts = accept == null || accept == 'undefined' || accept === '' ? ['*'] : AttachmentParser.parseAcceptFiles((input.attributes as any).accept.value);\r\n    this._input.oninput = () => { this.onChange(duplicatedDescription, invalidSizeDescription, invalidFormatDescription, attachmentIconSrc); };\r\n  }\r\n\r\n  addAttachment() {\r\n    this._input.click();\r\n  }\r\n  onChange(duplicatedDescription: string, invalidSizeDescription: string, invalidFormatDescription: string, attachmentIconSrc: string) {\r\n    const isValid = AttachmentValidate.file(this._input, this._accepts);\r\n    const sizeValid = AttachmentValidate.fileSize(this._input);\r\n    const duplicated = AttachmentValidate.duplicated(this._input.files[0].name, this._attachments);\r\n\r\n    if (duplicated) {\r\n      this.clearInput();\r\n      this._alert.show(duplicatedDescription).then(() => {});\r\n      return;\r\n    } else if (!sizeValid) {\r\n      const maxSize: number = AttachmentValidate.maxSize(this._input);\r\n      const maxSizeStr: string = StringConverter.formatNumber(maxSize);\r\n      this.clearInput();\r\n      this._alert.show(`${invalidSizeDescription}: ${maxSizeStr}KB`).then(() => {});\r\n      return;\r\n    } else if (!isValid) {\r\n      this.clearInput();\r\n      this._alert.show(invalidFormatDescription).then(() => {});\r\n    } else {\r\n      const file: IAttachmentData = {\r\n        name: this._input.files[0].name,\r\n        file: this._input.files[0],\r\n        icon: AttachmentIcon.get(this._input.files[0].name, attachmentIconSrc),\r\n        new: true,\r\n        url: '',\r\n        remove: false,\r\n        id: this._attachments.length\r\n      };\r\n\r\n      this.clearInput();\r\n      this._currentValue.emit(file);\r\n    }\r\n  }\r\n\r\n  clearInput() {\r\n    this._input.value = null;\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { GlSharedComponentButtonAttachmentFileService } from './gl-shared-component-button-attachment-file.service';\r\nimport { IAttachmentData } from \"gl-sp-frontend\";\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-attachment-file',\r\n  templateUrl: './gl-shared-component-button-attachment-file.component.html',\r\n  styleUrls: ['./gl-shared-component-button-attachment-file.component.scss']\r\n})\r\nexport class GlSharedComponentButtonAttachmentFileComponent implements AfterViewInit {\r\n  @ViewChild('fileInput', { read: ElementRef, static: true }) fileInput: ElementRef<HTMLInputElement>;\r\n\r\n  /**\r\n   * @param maxFileSize Size in KB.\r\n   * @param attachmentIconSrc (Optional) In case the source is not informed, the default path will be the one in gl-w-frontend package.\r\n   */\r\n  @Input() maxFileSize: string = '46080';\r\n  @Input() accept: string[];\r\n  @Input() title: string = 'Click to add an attachment';\r\n  @Input() icon: string = '../assets/img/icon/attachment/attachment.svg';\r\n  @Input() attachmentIconSrc: string;\r\n  @Input() description: string = 'Add attachment';\r\n  @Input() attachments: IAttachmentData[] = [];\r\n  @Input() duplicatedDescription: string = 'File duplicated. Please, add another file!';\r\n  @Input() invalidSizeDescription: string = 'Invalid file size. The max allowed size is';\r\n  @Input() invalidFormatDescription: string = 'Invalid file format!';\r\n\r\n  @Output() currentValue$: EventEmitter<IAttachmentData> = new EventEmitter();\r\n\r\n  constructor(public service: GlSharedComponentButtonAttachmentFileService) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.service.initialize(\r\n      this.fileInput.nativeElement,\r\n      this.currentValue$,\r\n      this.attachments,\r\n      this.duplicatedDescription,\r\n      this.invalidSizeDescription,\r\n      this.invalidFormatDescription,\r\n      this.attachmentIconSrc\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { GlSharedComponentModalAlertService } from '../../alert/gl-shared-component-modal-alert.service';\r\nimport { IAttachmentLink } from './gl-shared-component-modal-attachment-link.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentModalAttachmentLinkService {\r\n  name: HTMLInputElement;\r\n  url: HTMLInputElement;\r\n  linkIcon = '../assets/img/icon/attachment/link.svg';\r\n\r\n  showModal = false;\r\n  modalClass: string;\r\n  currentValue: Subject<IAttachmentLink> = new Subject();\r\n\r\n  editing: boolean;\r\n  editId: number;\r\n\r\n  private _name: string;\r\n  private _url: string;\r\n\r\n  constructor(private _alert: GlSharedComponentModalAlertService) { }\r\n\r\n  setup(name: HTMLInputElement, url: HTMLInputElement) {\r\n    this.name = name;\r\n    this.url = url;\r\n  }\r\n\r\n  onCancel() {\r\n    this.modal(false);\r\n  }\r\n\r\n  async onConfirm() {\r\n    if (await this.validData()) {\r\n      const values = {\r\n        name: this._name,\r\n        url: this._url,\r\n        icon: this.linkIcon,\r\n        editing: this.editing,\r\n        editId: this.editId\r\n      };\r\n\r\n      this.currentValue.next(values);\r\n      this.modal(false);\r\n    }\r\n  }\r\n\r\n  onName(e: Event) {\r\n    this._name = (e.currentTarget as HTMLInputElement).value;\r\n  }\r\n\r\n  onUrl(e: Event) {\r\n    this._url = (e.currentTarget as HTMLInputElement).value;\r\n  }\r\n\r\n  async validData() {\r\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\n    const tempUrl = this._url != null && !this._url.includes('http://') && !this._url.includes('https://') ? `http://${this._url}` : this._url;\r\n    const validUrl = new RegExp(urlRegex).test(tempUrl);\r\n\r\n    if (this._name == null || this._name.trim().length === 0) {\r\n      await this._alert.show('Por favor, informe o nome do arquivo!');\r\n      return false;\r\n    } else if (this._url == null || this._url.trim().length === 0) {\r\n      await this._alert.show('Por favor, informe o url do arquivo!');\r\n      return false;\r\n    } else if (!validUrl) {\r\n      await this._alert.show('Por favor, informe um url válido!');\r\n    } else {\r\n      this._url = tempUrl;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  modal(show) {\r\n    this.editing = false;\r\n    this.editId = null;\r\n\r\n    if (show) {\r\n      this.modalClass = 'hide-modal';\r\n      this.showModal = true;\r\n      this.modalClass = 'show-modal';\r\n\r\n    } else {\r\n      this.modalClass = 'hide-modal';\r\n      setTimeout(() => {\r\n        this.showModal = false;\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  edit(name: string, url: string, editId: number) {\r\n    this.modal(true);\r\n    this.editing = true;\r\n    this.editId = editId;\r\n\r\n    setTimeout(() => {\r\n      this.name = document.querySelector('#attachment-link-name');\r\n      this.url = document.querySelector('#attachment-link-value');\r\n\r\n      this._name = name;\r\n      this.name.value = name;\r\n      this._url = url;\r\n      this.url.value = url;\r\n    }, 100);\r\n  }\r\n\r\n  onModalKeyUp(e: KeyboardEvent) {\r\n    if (e.key === 'Enter') {\r\n      return this.onConfirm();\r\n    } else if (e.key === 'Escape') {\r\n      this.onCancel();\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { GlSharedComponentModalAttachmentLinkService } from '../../../modal/attachment/link/gl-shared-component-modal-attachment-link.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-attachment-link',\r\n  templateUrl: './gl-shared-component-button-attachment-link.component.html',\r\n  styleUrls: ['./gl-shared-component-button-attachment-link.component.scss']\r\n})\r\nexport class GlSharedComponentButtonAttachmentLinkComponent {\r\n\r\n  constructor(public service: GlSharedComponentModalAttachmentLinkService) { }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-image-simple',\r\n  templateUrl: './gl-shared-component-button-image-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-button-image-simple.component.scss']\r\n})\r\nexport class GlSharedComponentButtonImageSimpleComponent {\r\n  @Input() id;\r\n  @Input() alt;\r\n  @Input() src;\r\n  @Input() callback: () => void;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport {\r\n  TButtonToolTipBorder,\r\n  TButtonToolTipHorizontalPosition,\r\n  TButtonToolTipVerticalPosition, TButtonToolTipWidth\r\n} from './gl-shared-component-button-image-tooltip.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-image-tooltip',\r\n  templateUrl: './gl-shared-component-button-image-tooltip.component.html',\r\n  styleUrls: ['./gl-shared-component-button-image-tooltip.component.scss']\r\n})\r\nexport class GlSharedComponentButtonImageTooltipComponent {\r\n  @Input() id;\r\n  @Input() alt;\r\n  @Input() src;\r\n  @Input() show = true;\r\n  @Input() callback: () => void;\r\n\r\n  @Input() verticalPosition: TButtonToolTipVerticalPosition = 'top';\r\n  @Input() horizontalPosition: TButtonToolTipHorizontalPosition = 'center';\r\n  @Input() fullwidth: TButtonToolTipWidth = 'default';\r\n  @Input() borderRadius: TButtonToolTipBorder = 'default';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-interface',\r\n  templateUrl: './gl-shared-component-button-interface.component.html',\r\n  styleUrls: ['./gl-shared-component-button-interface.component.scss']\r\n})\r\nexport class GlSharedComponentButtonInterfaceComponent implements OnInit {\r\n  @Input() innerHtml: string;\r\n  @Input() buttonClick: () => void;\r\n  @Input() imageSrc: string;\r\n  @Input() imageAlt: string;\r\n  @Input() id: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-menu-simple',\r\n  templateUrl: './gl-shared-component-button-menu-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-button-menu-simple.component.scss']\r\n})\r\nexport class GlSharedComponentButtonMenuSimpleComponent {\r\n  @Input() disabled = false;\r\n  @Input() hide = false;\r\n  @Input() src: string;\r\n  @Input() id: string;\r\n  @Input() alt: string;\r\n  @Input() callback: () => {};\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-menu-tooltip',\r\n  templateUrl: './gl-shared-component-button-menu-tooltip.component.html',\r\n  styleUrls: ['./gl-shared-component-button-menu-tooltip.component.scss']\r\n})\r\nexport class GlSharedComponentButtonMenuTooltipComponent {\r\n  @Input() disabled = false;\r\n  @Input() hide = false;\r\n  @Input() tooltip: string;\r\n  @Input() src: string;\r\n  @Input() id: string;\r\n  @Input() alt: string;\r\n  @Input() callback;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-error-message',\r\n  templateUrl: './gl-shared-component-error-message.component.html',\r\n  styleUrls: ['./gl-shared-component-error-message.component.scss']\r\n})\r\nexport class GlSharedComponentErrorMessageComponent {\r\n  @Input() position: 'left' | 'right' = 'left';\r\n  @Input() errorCode: string | number;\r\n  @Input() errorMessage: string;\r\n  @Input() buttonLabel: string;\r\n  @Output() buttonAction$: EventEmitter<void> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  buttonAction(): void {\r\n    this.buttonAction$.emit();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentFilterService {\r\n  container: HTMLDivElement;\r\n  background: HTMLDivElement;\r\n  menuNavContainer: HTMLDivElement;\r\n  opened: boolean = false;\r\n\r\n  menuHidden$: Subject<boolean> = new Subject();\r\n  router: Router;\r\n\r\n  isIE: boolean;\r\n  applyPartialResult: () => Promise<void>;\r\n\r\n\r\n  constructor() { }\r\n\r\n  initialize(\r\n    container: HTMLDivElement,\r\n    background: HTMLDivElement,\r\n    menuNavContainer: HTMLDivElement,\r\n    router: Router,\r\n  ) {\r\n    this.container = container;\r\n    this.background = background;\r\n    this.menuNavContainer = menuNavContainer;\r\n    this.router = router;\r\n    this.menuHidden$.next(true);\r\n  }\r\n\r\n  backgroundClick(event) {\r\n    if (this.opened) { this.close(event); }\r\n  }\r\n  open(event: Event) {\r\n    event.preventDefault();\r\n    this.applyPartialResult;\r\n    this.container.classList.add('menu-active');\r\n    this.background.classList.add('visible-background');\r\n\r\n    setTimeout(() => {\r\n      if (this.isIE) {\r\n        this.menuNavContainer.scrollTop = 0;\r\n      } else {\r\n        this.menuNavContainer.scrollTo({ top: 0, behavior: 'smooth' });\r\n      }\r\n    }, 100);\r\n\r\n    this.menuHidden$.next(false);\r\n    this.opened = true;\r\n    return true;\r\n  }\r\n  close(event: Event) {\r\n    event.preventDefault();\r\n    this.container.classList.remove('menu-active');\r\n    this.background.classList.remove('visible-background');\r\n\r\n    this.menuHidden$.next(true);\r\n    this.opened = false;\r\n    return false;\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { GlSharedComponentFilterService } from './gl-shared-component-filter.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-filter',\r\n  templateUrl: './gl-shared-component-filter.component.html',\r\n  styleUrls: ['./gl-shared-component-filter.component.scss']\r\n})\r\nexport class GlSharedComponentFilterComponent implements AfterViewInit {\r\n  @ViewChild('container', { static: true, read: ElementRef }) container: ElementRef<HTMLDivElement>;\r\n  @ViewChild('background', { static: true, read: ElementRef }) background: ElementRef<HTMLDivElement>;\r\n  @ViewChild('menuNavContainer') menuNavContainer: ElementRef<HTMLDivElement>;\r\n\r\n  @Input() title: string;\r\n  @Input() subtitle: string = 'Filter';\r\n  @Input() type: 'translucid' | '' = '';\r\n  @Input() closeButton: string = '../assets/img/icon/menu/close.svg';\r\n  @Input() partialResult: number;\r\n  @Input() partialResultDescription: string = 'Partial results with these filters:';\r\n  @Input() itemSingularDescription: string = 'item';\r\n  @Input() itemPluralDescription: string = 'items';\r\n  @Input() applyButtonDescription: string = 'Apply filter';\r\n  @Input() clearButtonDescription: string = 'Clear filter';\r\n  @Input() buttonClass: 'light-translucid' | '' = 'light-translucid';\r\n\r\n  @Input() isIE: boolean = false;\r\n  @Input() applyPartialResult: () => Promise<void>;\r\n\r\n  @Output() applyFilter$: EventEmitter<void> = new EventEmitter();\r\n  @Output() clearFilter$: EventEmitter<void> = new EventEmitter();\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public service: GlSharedComponentFilterService\r\n  ) {\r\n    service.applyPartialResult = this.applyPartialResult;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.service.initialize(\r\n      this.container.nativeElement,\r\n      this.background.nativeElement,\r\n      this.menuNavContainer.nativeElement,\r\n      this.router\r\n    );\r\n  }\r\n\r\n  onApply() {\r\n    this.applyFilter$.emit();\r\n  }\r\n\r\n  onClear() {\r\n    this.clearFilter$.emit();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-filter-container',\r\n  templateUrl: './gl-shared-component-filter-container.component.html',\r\n  styleUrls: ['./gl-shared-component-filter-container.component.scss']\r\n})\r\nexport class GlSharedComponentFilterContainerComponent {\r\n  @Input() label: string;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-footer-container',\r\n  templateUrl: './gl-shared-component-footer-container.component.html',\r\n  styleUrls: ['./gl-shared-component-footer-container.component.scss']\r\n})\r\nexport class GlSharedComponentFooterContainerComponent {\r\n  @Input() description: string;\r\n  @Input() imageLogo: string;\r\n  @Input() imageDescription: string = 'Image logo';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-footer-simple',\r\n  templateUrl: './gl-shared-component-footer-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-footer-simple.component.scss']\r\n})\r\nexport class GlSharedComponentFooterSimpleComponent {\r\n  @Input() description: string;\r\n  @Input() imageLogo: string;\r\n  @Input() imageDescription: string = 'Image logo';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { IMenuButton } from '../../button/menu/simple/gl-shared-component-button-menu-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-header-default',\r\n  templateUrl: './gl-shared-component-header-default.component.html',\r\n  styleUrls: ['./gl-shared-component-header-default.component.scss']\r\n})\r\nexport class GlSharedComponentHeaderDefaultComponent {\r\n  @Input() systemLogo: boolean = false;\r\n  @Input() labelModel: string;\r\n  @Input() labelId: number;\r\n  @Input() labelArea: string;\r\n  @Input() type: 'only-buttons' | 'light' | 'inverted' | 'dark-translucid' | 'light-translucid' | '';\r\n  @Input() title: string;\r\n  @Input() subtitle: string;\r\n  @Input() menuButtons: IMenuButton[];\r\n  @Output() keyDown: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Input() readonly: boolean;\r\n\r\n  constructor() { }\r\n\r\n  onKeyDown(event) {\r\n    this.keyDown.emit(event);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { IComboBoxData } from \"gl-w-frontend\";\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-autocomplete-label',\r\n  templateUrl: './gl-shared-component-input-autocomplete-label.component.html',\r\n  styleUrls: ['./gl-shared-component-input-autocomplete-label.component.scss']\r\n})\r\nexport class GlSharedComponentInputAutocompleteLabelComponent {\r\n\r\n  @Output() currentValue = new EventEmitter();\r\n  @Input() listItems: IComboBoxData[] = [];\r\n\r\n  @Input() disabled = false;\r\n  @Input() listName: string;\r\n  @Input() id: string;\r\n  @Input() labelValue: string;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment | '';\r\n  @Input() class: string;\r\n  @Input() value;\r\n  @Input() required: boolean;\r\n\r\n  @Input() custom: boolean;\r\n  @Input() baseUrl: string;\r\n\r\n  @Input() valueField: string;\r\n  @Input() textField: string;\r\n  @Input() requiredField = 'Required field';\r\n\r\n  constructor() {}\r\n\r\n  onCurrentValue(value) { this.currentValue.emit(value); }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { IResetAutocompleteValue, ISetAutocompleteValue, IUpdateOptionList\r\n} from './gl-shared-component-input-autocomplete-simple.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentInputAutocompleteSimpleService implements OnDestroy {\r\n  autocompleteList$: Subject<IUpdateOptionList> = new Subject();\r\n  autocompleteReset$: Subject<IResetAutocompleteValue> = new Subject();\r\n  autocompleteLoaded$: Subject<boolean> = new Subject();\r\n  autocompleteUpdateValue$: Subject<ISetAutocompleteValue> = new Subject();\r\n\r\n  constructor() {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.autocompleteList$.observers.map(x => x.complete());\r\n    this.autocompleteLoaded$.observers.map(x => x.complete());\r\n    this.autocompleteReset$.observers.map(x => x.complete());\r\n    this.autocompleteUpdateValue$.observers.map(x => x.complete());\r\n  }\r\n}\r\n","import { Overlay } from '@angular/cdk/overlay';\r\nimport { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MatAutocomplete } from '@angular/material/autocomplete';\r\nimport { IComboBoxData } from 'gl-w-frontend';\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { GlSharedComponentInputAutocompleteSimpleService } from './gl-shared-component-input-autocomplete-simple.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-autocomplete-simple',\r\n  templateUrl: './gl-shared-component-input-autocomplete-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-autocomplete-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputAutocompleteSimpleComponent implements OnInit, OnDestroy, OnChanges {\r\n  @ViewChild('input') input: ElementRef<HTMLInputElement>;\r\n\r\n  @Output() currentValue = new EventEmitter<IComboBoxData>();\r\n  @Input() listItems: IComboBoxData[] = [];\r\n\r\n  @Input() disabled: boolean;\r\n  @Input() listName: string;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment | '';\r\n  @Input() class = '';\r\n  @Input() value: string;\r\n  @Input() maxLength = '255';\r\n\r\n  @Input() custom: boolean;\r\n  @Input() baseUrl: string;\r\n\r\n  @Input() valueField: string;\r\n  @Input() textField: string;\r\n\r\n  @Input() labelValue: string;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() required: boolean;\r\n  @Input() requiredField: string;\r\n\r\n  private _loaded = false;\r\n  readonly imageSource = '../assets/img/icon/drop-down/arrow-down.svg';\r\n  readonly clearSource = '../assets/img/icon/drop-down/clear.svg';\r\n  autocompleteInput = new FormControl();\r\n  filteredOptions: Observable<IComboBoxData[]>;\r\n\r\n  constructor(private _service: GlSharedComponentInputAutocompleteSimpleService, public overlay: Overlay) {\r\n    _service.autocompleteList$.subscribe(update => {\r\n      if (this.listName === update.listName) {\r\n        this.listItems = update.options;\r\n        this.setup();\r\n      }\r\n    });\r\n    _service.autocompleteReset$.subscribe(update => {\r\n      if (this.id === update.comboboxId) {\r\n        this.input.nativeElement.value = '';\r\n        this.validate();\r\n      }\r\n    });\r\n    _service.autocompleteLoaded$.subscribe(loaded => {\r\n      this._loaded = loaded;\r\n      _service.autocompleteLoaded$.observers.map(x => x.complete());\r\n    });\r\n    _service.autocompleteUpdateValue$.subscribe(update => {\r\n      if (this.id === update.comboboxId) {\r\n        this.listItems = update.options;\r\n        const value = update.options.filter(x => x.value === update.value);\r\n        const input = this.input.nativeElement;\r\n\r\n        if (value != null && value.length > 0) {\r\n          input.value = value[0].text;\r\n          this.autocompleteInput.setValue(value[0].text);\r\n          this.value = value[0].value;\r\n          this.setup();\r\n        } else {\r\n          input.value = '';\r\n          this.autocompleteInput.setValue('');\r\n          this.value = '';\r\n          this.setup();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.setup();\r\n  }\r\n\r\n  private setup() {\r\n    this.filteredOptions = this.autocompleteInput.valueChanges.pipe(\r\n      startWith(''),\r\n      // startWith(this.value),\r\n      map(value => this.filter(value))\r\n    );\r\n\r\n    // if (!this._loaded) { this.autocompleteInput.setValue(this.value); }\r\n    // this.autocompleteInput.setValue(this.value);\r\n    setTimeout(() => { this.validate(); });\r\n  }\r\n  private filter(value: string): IComboBoxData[] {\r\n    if (value == null) { value = ''; }\r\n\r\n    const filterValue = value.toLowerCase();\r\n    return this.listItems.filter(option => option.text?.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  validate() {\r\n    const input: HTMLInputElement = this.input.nativeElement;\r\n    const value: string = input.value;\r\n    const filteredData = this.filter(value);\r\n\r\n    if (value != null && value.trim().length > 0 && filteredData.length > 0) {\r\n      input.value = filteredData[0].text;\r\n      this.autocompleteInput.setValue(filteredData[0].text);\r\n      this.currentValue.emit({ text: filteredData[0].text, value: filteredData[0].value });\r\n    } else {\r\n      input.value = '';\r\n      this.autocompleteInput.setValue('');\r\n      this.currentValue.emit({ text: null, value: null });\r\n    }\r\n  }\r\n\r\n  reset(auto: MatAutocomplete, event: Event) {\r\n    if (auto.options != null) { auto.options.map(option => option.deselect()); }\r\n    (event.currentTarget as HTMLInputElement).select();\r\n  }\r\n\r\n  clearItems(input: HTMLInputElement) {\r\n    input.value = null;\r\n    this.autocompleteInput.setValue(null);\r\n    this.currentValue.emit({ text: null, value: null });\r\n    setTimeout(() => {\r\n      input.click();\r\n    }, 100);\r\n  }\r\n\r\n  arrowClick() {\r\n    this.autocompleteInput.reset();\r\n    this.autocompleteInput.setValue('');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._service.autocompleteList$.observers.map(x => x.complete());\r\n    this._service.autocompleteReset$.observers.map(x => x.complete());\r\n    this._service.autocompleteLoaded$.observers.map(x => x.complete());\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const prevList = changes.listItems?.previousValue;\r\n    const currList = changes.listItems?.currentValue;\r\n\r\n    const prevValue = changes.value?.previousValue;\r\n    const currValue = changes.value?.currentValue;\r\n\r\n    // tslint:disable-next-line:triple-equals\r\n    if (prevList != currList) { this.setup(); }\r\n    // tslint:disable-next-line:triple-equals\r\n    if (prevValue != currValue) { this.setup(); }\r\n\r\n    this.overlay.position().global().dispose();\r\n\r\n    // if (prevList != currList || prevValue != currValue) { this.setup(); }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-button-simple',\r\n  templateUrl: './gl-shared-component-input-button-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-button-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputButtonSimpleComponent {\r\n  @Input() value: string;\r\n  @Input() class: string;\r\n  @Input() innerValue: string;\r\n  @Input() readonly = false;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-button-hyperlink',\r\n  templateUrl: './gl-shared-component-input-button-hyperlink.component.html',\r\n  styleUrls: ['./gl-shared-component-input-button-hyperlink.component.scss']\r\n})\r\nexport class GlSharedComponentInputButtonHyperlinkComponent {\r\n  @Input() imageSrc: string;\r\n  @Input() imageDescription: string;\r\n  @Input() description: string;\r\n  @Input() link: string;\r\n  @Input() readonly = false;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-option-simple',\r\n  templateUrl: './gl-shared-component-input-option-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-option-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputOptionSimpleComponent {\r\n  @Input() value: string;\r\n  @Input() id: string;\r\n  @Input() label: string;\r\n  @Input() name: string;\r\n  @Input() checked: boolean;\r\n\r\n  @Output() itemSelected: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  onCheck(value: string, input: HTMLInputElement) {\r\n    input.checked = true;\r\n    this.itemSelected.emit(value);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentInputTextSimpleService {\r\n\r\n  updateInputMask$: Subject<undefined> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  updateInputMask(): void {\r\n    this.updateInputMask$.next();\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild } from '@angular/core';\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { ISimpleTextResult, TInputTextMask } from './gl-shared-component-input-text-simple.interface';\r\nimport { InputMask, TCurrencySymbolTypes, TCurrencyTypes, TDecimalSeparators } from 'gl-w-frontend';\r\nimport { GlSharedComponentInputTextSimpleService } from './gl-shared-component-input-text-simple.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-text-simple',\r\n  templateUrl: './gl-shared-component-input-text-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-text-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputTextSimpleComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('inputElement', { read: ElementRef, static: true }) inputElement: ElementRef<HTMLInputElement>;\r\n\r\n  private _input: HTMLInputElement;\r\n\r\n  @Input() disabled = false;\r\n  @Input() autocomplete = false;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment;\r\n  @Input() class: string;\r\n  @Input() value: string = null;\r\n\r\n  @Input() mask: TInputTextMask;\r\n  @Input() decimalSeparator: TDecimalSeparators = ',';\r\n  @Input() allowMinus = true;\r\n  @Input() rightAlign = true;\r\n  @Input() step = 5;\r\n\r\n  @Input() maskSymbol: TCurrencySymbolTypes;\r\n  @Input() maxLength = 255;\r\n\r\n  @Output() currentValue: EventEmitter<ISimpleTextResult> = new EventEmitter();\r\n  @Output() onKeyUp(args) {\r\n    if (args.target.value.trim().length > 0) { args.target.classList.remove('required-fill'); }\r\n    this.currentValue.emit({ value: args.target.value });\r\n  }\r\n\r\n  constructor(public service: GlSharedComponentInputTextSimpleService) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._input = this.inputElement.nativeElement;\r\n    this.applyInputMask();\r\n\r\n    this.service.updateInputMask$.subscribe(() => {\r\n      this.applyInputMask();\r\n    });\r\n  }\r\n\r\n  applyInputMask(): void {\r\n    setTimeout(() => {\r\n      if (this.mask != null && this._input != null) {\r\n        if (this.mask.includes('currency')) {\r\n          this.inputElement.nativeElement.placeholder = InputMask.currency(\r\n            this.inputElement.nativeElement,\r\n            this.mask as TCurrencyTypes,\r\n            this.maskSymbol\r\n          );\r\n        } else if (this.mask === 'percentage' || this.mask === 'numeric') {\r\n          this.placeholder = InputMask[this.mask](\r\n            this._input,\r\n            this.allowMinus,\r\n            this.decimalSeparator,\r\n            this.rightAlign,\r\n            this.step\r\n          );\r\n        } else if (this.mask === 'integer') {\r\n          this.placeholder = InputMask.integer(\r\n            this._input,\r\n            this.allowMinus,\r\n            this.rightAlign,\r\n            this.step\r\n          );\r\n        } else if (this.mask === 'custom') {\r\n          InputMask.customNumberPhone(\r\n            this.placeholder,\r\n            this._input,\r\n            this.rightAlign\r\n          );\r\n        }\r\n      } else if (this._input != null) {\r\n        InputMask.remove(this._input);\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.service.updateInputMask$.observers.map(x => x.complete);\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport { TCurrencySymbolTypes, TDecimalSeparators } from 'gl-w-frontend';\r\nimport { THorizontalAlignment } from '../../../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { TInputTextMask } from '../../../simple/gl-shared-component-input-text-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-text-label-button-container',\r\n  templateUrl: './gl-shared-component-input-text-label-button-container.component.html',\r\n  styleUrls: ['./gl-shared-component-input-text-label-button-container.component.scss']\r\n})\r\nexport class GlSharedComponentInputTextLabelButtonContainerComponent {\r\n  @Input() disabled = false;\r\n  @Input() autocomplete = false;\r\n  @Input() id: string;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() labelValue: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment;\r\n  @Input() class: string;\r\n  @Input() value: string = null;\r\n\r\n  @Input() mask: TInputTextMask;\r\n  @Input() decimalSeparator: TDecimalSeparators = ',';\r\n  @Input() maskSymbol: TCurrencySymbolTypes;\r\n  @Input() allowMinus = true;\r\n  @Input() rightAlign = true;\r\n  @Input() step = 5;\r\n\r\n  @Input() maxLength = 255;\r\n  @Input() required: boolean;\r\n\r\n  @Input() requiredLabel = 'Required field';\r\n\r\n  @Output() currentValue = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  onKeyUp(values) { this.currentValue.emit(values); }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TCurrencySymbolTypes, TDecimalSeparators } from 'gl-w-frontend';\r\nimport { THorizontalAlignment } from '../../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { TInputTextMask } from '../../simple/gl-shared-component-input-text-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-text-label-simple',\r\n  templateUrl: './gl-shared-component-input-text-label-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-text-label-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputTextLabelSimpleComponent {\r\n  @Input() disabled = false;\r\n  @Input() autocomplete = false;\r\n  @Input() id: string;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() labelValue: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment;\r\n  @Input() class: string;\r\n  @Input() value: string = null;\r\n\r\n  @Input() allowMinus = true;\r\n  @Input() rightAlign = true;\r\n  @Input() step = 5;\r\n\r\n  @Input() mask: TInputTextMask;\r\n  @Input() decimalSeparator: TDecimalSeparators = ',';\r\n  @Input() maskSymbol: TCurrencySymbolTypes;\r\n  @Input() maxLength = 255;\r\n  @Input() required: boolean;\r\n\r\n  @Input() requiredLabel = 'Required field';\r\n\r\n  @Output() currentValue = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  onKeyUp(values) { this.currentValue.emit(values); }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-text-area-label',\r\n  templateUrl: './gl-shared-component-input-text-area-label.component.html',\r\n  styleUrls: ['./gl-shared-component-input-text-area-label.component.scss']\r\n})\r\nexport class GlSharedComponentInputTextAreaLabelComponent {\r\n  @Input() disabled = false;\r\n  @Input() id: string;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() labelValue: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment;\r\n  @Input() class: string;\r\n\r\n  @Input() value = '';\r\n  @Input() maxLength: number;\r\n  @Input() required: boolean;\r\n  @Input() requiredLabel = 'Required label';\r\n\r\n  @Output() currentValue = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  onKeyUp(values) {\r\n    this.currentValue.emit(values);\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-text-area-simple',\r\n  templateUrl: './gl-shared-component-input-text-area-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-text-area-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputTextAreaSimpleComponent {\r\n  @ViewChild('textArea', { read: ElementRef, static: true }) textArea: ElementRef<HTMLTextAreaElement>;\r\n\r\n  @Input() disabled = false;\r\n  @Input() id: string;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() labelValue: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment;\r\n  @Input() class: string;\r\n\r\n  @Input() value = '';\r\n  @Input() maxLength: number;\r\n  @Output() currentValue = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  onKeyUp(args) {\r\n    const value = args.target.value;\r\n\r\n    if (value.trim().length > 0) {\r\n      this.textArea.nativeElement.classList.remove('required-fill');\r\n    }\r\n\r\n    this.currentValue.emit({ value });\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-logo-square',\r\n  templateUrl: './gl-shared-component-logo-square.component.html',\r\n  styleUrls: ['./gl-shared-component-logo-square.component.scss']\r\n})\r\nexport class GlSharedComponentLogoSquareComponent {\r\n  @Input() imageScr: string;\r\n  @Input() imageAlt: string;\r\n  @Input() horizontalPosition: 'left' | 'right' = 'left';\r\n  @Input() verticalPosition: 'top' | 'bottom' = 'top';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GlSharedComponentModalAttachmentLinkService } from './gl-shared-component-modal-attachment-link.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-modal-attachment-link',\r\n  templateUrl: './gl-shared-component-modal-attachment-link.component.html',\r\n  styleUrls: ['./gl-shared-component-modal-attachment-link.component.scss']\r\n})\r\nexport class GlSharedComponentModalAttachmentLinkComponent {\r\n  @Input() title: string;\r\n  @Input() subtitle: string = ': link';\r\n  @Input() modalLogo: string;\r\n  @Input() fileNameLabel: string = 'File name';\r\n  @Input() fileNamePlaceholder: string = 'Type the file name';\r\n  @Input() linkPlaceholder: string = 'Type the file link';\r\n  @Input() cancelInnerValue: string = 'Cancel';\r\n\r\n  constructor(public service: GlSharedComponentModalAttachmentLinkService) { }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GlSharedComponentModalAlertService } from './gl-shared-component-modal-alert.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-modal-alert',\r\n  templateUrl: './gl-shared-component-modal-alert.component.html',\r\n  styleUrls: ['./gl-shared-component-modal-alert.component.scss']\r\n})\r\nexport class GlSharedComponentModalAlertComponent {\r\n  @Input() title: string;\r\n  @Input() subtitle: string;\r\n  @Input() modalLogo: string;\r\n  @Input() innerValueNo = 'No';\r\n  @Input() innerValueYes= 'Yes';\r\n  @Input() innerValueOK= 'OK';\r\n\r\n  @Input() noValue = 'no';\r\n  @Input() yesValue= 'yes';\r\n  @Input() okValue= 'ok';\r\n\r\n  constructor(public service: GlSharedComponentModalAlertService) { }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentModalLoadingService {\r\n  private _defaultMessage = 'Loading... please wait...';\r\n  defaultMessage = 'Loading... please wait...';\r\n  _loadingStatus = this.defaultMessage;\r\n  _showLoading = true;\r\n  _mainLoading: HTMLDivElement;\r\n\r\n  constructor() { }\r\n\r\n  checkElement() {\r\n    return new Promise(resolve => {\r\n      if (this._mainLoading == null) {\r\n        const loadingInterval = setInterval(() => {\r\n          this._mainLoading = document.querySelector('.main-loading');\r\n          if (this._mainLoading != null) {\r\n            clearInterval(loadingInterval);\r\n            resolve();\r\n          }\r\n        }, 1);\r\n      } else {\r\n        resolve();\r\n      }\r\n    });\r\n  }\r\n\r\n  setup(mainLoading: HTMLDivElement) {\r\n    this._mainLoading = mainLoading;\r\n  }\r\n\r\n  hide() {\r\n    this.checkElement().then(() => {\r\n      this._mainLoading.classList.add('hide-loading');\r\n      setTimeout(() => {\r\n        this._showLoading = false;\r\n        this.status(null);\r\n      }, 1100);\r\n    });\r\n  }\r\n  show(status?: string) {\r\n    this.checkElement().then(() => {\r\n      if (status != null) { this.status(status); } else { this.status(null); }\r\n      this._mainLoading.classList.remove('hide-loading');\r\n      this._showLoading = true;\r\n    });\r\n  }\r\n  status(message) {\r\n    this.checkElement().then(() => {\r\n      setTimeout(() => {\r\n\r\n        if (message == null || message.trim().length === 0) {\r\n          if (this.defaultMessage != null && this.defaultMessage.length === 0) { this.defaultMessage = this._defaultMessage; }\r\n          this._loadingStatus = this.defaultMessage;\r\n        } else {\r\n          this._loadingStatus = message;\r\n        }\r\n      }, 10);\r\n    });\r\n  }\r\n}\r\n","import { AfterViewChecked, Component, ElementRef, Input, ViewChild } from '@angular/core';\r\nimport { GlSharedComponentModalLoadingService } from './gl-shared-component-modal-loading.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-modal-loading',\r\n  templateUrl: './gl-shared-component-modal-loading.component.html',\r\n  styleUrls: ['./gl-shared-component-modal-loading.component.scss']\r\n})\r\nexport class GlSharedComponentModalLoadingComponent implements AfterViewChecked {\r\n  @ViewChild('mainLoading', { read: ElementRef, static: true }) mainLoading: ElementRef<HTMLDivElement>;\r\n\r\n  @Input() defaultMessage: string;\r\n\r\n  loaded = false;\r\n\r\n  constructor(public service: GlSharedComponentModalLoadingService) {\r\n    service.defaultMessage = this.defaultMessage;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    const container = document.querySelector('.main-loading') as HTMLDivElement;\r\n\r\n    if (container != null && !this.loaded) {\r\n      this.service.setup(container);\r\n      this.loaded = true;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-modal-header',\r\n  templateUrl: './gl-shared-component-modal-header.component.html',\r\n  styleUrls: ['./gl-shared-component-modal-header.component.scss']\r\n})\r\nexport class GlSharedComponentModalHeaderComponent {\r\n  @Input() title: string;\r\n  @Input() subtitle: string;\r\n  @Input() modalLogo: string;\r\n  constructor() { }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-menu-background',\r\n  templateUrl: './gl-shared-component-menu-background.component.html',\r\n  styleUrls: ['./gl-shared-component-menu-background.component.scss']\r\n})\r\nexport class GlSharedComponentMenuBackgroundComponent {\r\n\r\n  constructor() { }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n  export class GlSharedComponentMenuService implements OnDestroy {\r\n\r\n  container: HTMLDivElement;\r\n  background: HTMLDivElement;\r\n\r\n  router: Router;\r\n\r\n  menuHidden: Subject<boolean> = new Subject();\r\n  opened = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.menuHidden.observers.map(x => x.complete());\r\n  }\r\n\r\n  initialize(container: HTMLDivElement, background: HTMLDivElement, router: Router) {\r\n    this.container = container;\r\n    this.background = background;\r\n    this.router = router;\r\n\r\n    this.menuHidden.next(true);\r\n  }\r\n\r\n  close(event: Event) {\r\n    event.preventDefault();\r\n    this.container.classList.remove('menu-active');\r\n    this.background.classList.remove('visible-background');\r\n\r\n    this.menuHidden.next(true);\r\n    this.opened = false;\r\n    return false;\r\n  }\r\n  open(event: Event) {\r\n    event.preventDefault();\r\n    this.container.classList.add('menu-active');\r\n    this.background.classList.add('visible-background');\r\n\r\n    this.menuHidden.next(false);\r\n    this.opened = true;\r\n    return true;\r\n  }\r\n\r\n  goToSettings(url: string, target: string = '_blank') {\r\n    window.open(url, target);\r\n  }\r\n\r\n  backgroundClick(event) {\r\n    if (this.opened) { this.close(event); }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IMenuItem, TUrlTarget } from './gl-shared-component-menu-item.interface';\r\nimport {style, state, animate, transition, trigger} from '@angular/animations';\r\nimport {GlSharedComponentMenuService} from '../gl-shared-component-menu.service';\r\nimport * as SmoothScroll from 'smooth-scroll';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-menu-item',\r\n  templateUrl: './gl-shared-component-menu-item.component.html',\r\n  styleUrls: ['./gl-shared-component-menu-item.component.scss'],\r\n  animations: [\r\n    trigger('fadeInOut', [\r\n      state('', style({\r\n        opacity: 0,\r\n        height: 0,\r\n        transform: 'scaleY(0)'\r\n      })),\r\n      transition(':enter', [   // :enter is alias to 'void => *'\r\n        style({\r\n          opacity: 0,\r\n          height: 0,\r\n          transform: 'scaleY(0)'\r\n        }),\r\n        animate('0.3s ease-in', style({\r\n          opacity: 1,\r\n          height: '*',\r\n          transform: 'scaleY(1)'\r\n        }))\r\n      ]),\r\n      transition(':leave', [   // :leave is alias to '* => void'\r\n        animate(250, style({\r\n          opacity: 0,\r\n          height: 0,\r\n          transform: 'scaleY(0)'\r\n        }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class GlSharedComponentMenuItemComponent {\r\n  @Input() itemClass: 'translucid' | 'dark' | '' = 'dark';\r\n  @Input() absolute: boolean;\r\n  @Input() menuLogo = '../assets/img/logo/glaucio-logo-colored.svg';\r\n  @Input() src = this.menuLogo;\r\n  @Input() href: string;\r\n  @Input() fragment: string;\r\n  @Input() alt;\r\n  @Input() content;\r\n  @Input() target: TUrlTarget = '_self';\r\n\r\n  @Input() hasSubitem: boolean;\r\n  @Input() active: boolean;\r\n  @Input() subItems: IMenuItem[];\r\n\r\n  @Output() $click: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _menu: GlSharedComponentMenuService\r\n  ) {\r\n\r\n  }\r\n\r\n  openAbsoluteLink(event, href, target: TUrlTarget = '_self') {\r\n    this._router.navigate(['/externalRedirect', { externalUrl: href, target}], {\r\n      skipLocationChange: true,\r\n    }).then(() => {\r\n      console.log(`Redirected to: ${href}`);\r\n    });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  toggleActive() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  onClick(event) {\r\n    if (this.fragment != null) {\r\n      this._menu.close(event);\r\n\r\n      const element: HTMLElement = document.querySelector(`#${this.fragment}`);\r\n      const scroll = new SmoothScroll(`#${this.fragment}`, {\r\n        speed: 1000,\r\n        speedAsDuration: true,\r\n        easing: 'easeInOutQuad',\r\n        updateURL: true,\r\n        popstate: true\r\n      });\r\n      scroll.animateScroll(element);\r\n\r\n      this.$click.emit({ event, href: this.href, fragment: this.fragment });\r\n    }\r\n  }\r\n}\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { GlSharedComponentMenuService } from './gl-shared-component-menu.service';\r\nimport { IMenuItem, IMenuItemComplex } from './item/gl-shared-component-menu-item.interface';\r\nimport { TMenuPosition } from './gl-shared-component-menu.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-menu',\r\n  templateUrl: './gl-shared-component-menu.component.html',\r\n  styleUrls: ['./gl-shared-component-menu.component.scss']\r\n})\r\nexport class GlSharedComponentMenuComponent implements OnInit {\r\n  @ViewChild('container', { static: true, read: ElementRef }) container: ElementRef<HTMLDivElement>;\r\n  @ViewChild('background', { static: true, read: ElementRef }) background: ElementRef<HTMLDivElement>;\r\n\r\n  @Input() title: string;\r\n  @Input() subtitle: string;\r\n  @Input() systemVersion: string;\r\n  @Input() menuItems: IMenuItem[];\r\n  @Input() menuItemsComplex: IMenuItemComplex[];\r\n  @Input() showSettings: boolean;\r\n  @Input() className: string;\r\n  @Input() settingsUrl: string;\r\n  @Input() settingsTarget: string = '_blank';\r\n  @Input() menuLogo: string = '../assets/img/logo/glaucio-logo-colored.svg';\r\n  @Input() menuBottomTitle: string;\r\n  @Input() menuBottomVersion: string = '1.0.0';\r\n  @Input() menuPosition: TMenuPosition = 'right';\r\n\r\n  @Output() $click: EventEmitter<any> = new EventEmitter();\r\n\r\n  readonly closeButton = '../assets/img/icon/side-menu/close.svg';\r\n  readonly settingsButton = '../assets/img/icon/side-menu/admin-settings.svg';\r\n\r\n  constructor(\r\n    public service: GlSharedComponentMenuService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.service.initialize(this.container.nativeElement, this.background.nativeElement, this.router);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-navigation-tab-simple',\r\n  templateUrl: './gl-shared-component-navigation-tab-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-navigation-tab-simple.component.scss']\r\n})\r\nexport class GlSharedComponentNavigationTabSimpleComponent {\r\n  @Input() tabActive: boolean;\r\n  @Input() showSeparator: boolean;\r\n  @Input() tabSequence: number;\r\n  @Input() tabDescription: string;\r\n  @Input() tabIsTheFirst: boolean;\r\n  @Input() tabIsTheLast: boolean;\r\n  @Input() tabEnabled: boolean = true;\r\n\r\n  @Output() activate$: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  activate(sequence: number): void {\r\n    if (this.tabEnabled) {\r\n      this.activate$.emit(sequence);\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { INavigationTab } from '../simple/gl-shared-component-navigation-tab-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-navigation-tab-container',\r\n  templateUrl: './gl-shared-component-navigation-tab-container.component.html',\r\n  styleUrls: ['./gl-shared-component-navigation-tab-container.component.scss']\r\n})\r\nexport class GlSharedComponentNavigationTabContainerComponent {\r\n\r\n  @Input() navigationTabs: INavigationTab[];\r\n  @Output() activatedTab$: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  activate(sequence: number): void {\r\n    this.reset();\r\n    const active = this.navigationTabs.filter(x => x.sequence === sequence);\r\n    active[0].active = true;\r\n    this.activatedTab$.emit(sequence);\r\n  }\r\n\r\n  reset(): void {\r\n    for (const item of this.navigationTabs) {\r\n      item.active = false;\r\n    }\r\n  }\r\n\r\n  tabHovering(hovering: boolean, sequence: number, active: boolean): void {\r\n    const tab = document.querySelector(`#navigation-tab-${sequence}`) as HTMLDivElement;\r\n\r\n    if (!active) {\r\n      if (hovering) {\r\n        tab.style.zIndex = '990';\r\n      } else {\r\n        tab.style.zIndex = (100 - sequence).toString();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { THorizontalAlignment } from './gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-title-label-simple',\r\n  templateUrl: './gl-shared-component-title-label-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-title-label-simple.component.scss']\r\n})\r\nexport class GlSharedComponentTitleLabelSimpleComponent {\r\n\r\n  @Input() labelValue;\r\n  @Input() id;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() class = '';\r\n\r\n  @Input() required = false;\r\n  @Input() requiredLabel = 'Required field';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-title-label-button-simple',\r\n  templateUrl: './gl-shared-component-title-label-button-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-title-label-button-simple.component.scss']\r\n})\r\nexport class GlSharedComponentTitleLabelButtonSimpleComponent {\r\n\r\n  @Input() id: string;\r\n  @Input() alt: string;\r\n  @Input() src: string;\r\n  @Input() required = false;\r\n  @Input() class: string;\r\n  @Input() requiredFieldDescription: string = 'Required field';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { THorizontalAlignment } from '../../simple/gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-title-label-button-container',\r\n  templateUrl: './gl-shared-component-title-label-button-container.component.html',\r\n  styleUrls: ['./gl-shared-component-title-label-button-container.component.scss']\r\n})\r\nexport class GlSharedComponentTitleLabelButtonContainerComponent {\r\n\r\n  @Input() labelValue;\r\n  @Input() id;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() required = false;\r\n  @Input() class: string;\r\n  @Input() requiredFieldDescription: string = 'Required field';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-title-page',\r\n  templateUrl: './gl-shared-component-title-page.component.html',\r\n  styleUrls: ['./gl-shared-component-title-page.component.scss']\r\n})\r\nexport class GlSharedComponentTitlePageComponent{\r\n\r\n  @Input() title: string;\r\n  @Input() subtitle: string;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { DateGet } from 'gl-w-frontend';\r\nimport { THorizontalAlignment } from '../../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { IDatePickerOutput } from './gl-shared-component-input-datepicker-simple-day-month-year.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-datepicker-simple-day-month-year',\r\n  templateUrl: './gl-shared-component-input-datepicker-simple-day-month-year.component.html',\r\n  styleUrls: ['./gl-shared-component-input-datepicker-simple-day-month-year.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_LOCALE, useValue: 'pt-BR' },\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [ MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS ]\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: MAT_MOMENT_DATE_FORMATS\r\n    },\r\n  ],\r\n})\r\nexport class GlSharedComponentInputDatepickerSimpleDayMonthYearComponent {\r\n  @Input() disabled = false;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment = 'center';\r\n  @Input() class: string;\r\n  @Input() value: Date = null;\r\n  @Input() maxLength = 255;\r\n\r\n  @Output() currentValue: EventEmitter<IDatePickerOutput> = new EventEmitter();\r\n\r\n  readonly dateFormat: 'DD/MM/YYYY' = 'DD/MM/YYYY';\r\n\r\n  constructor() {}\r\n\r\n  clear(input: HTMLInputElement) {\r\n    this.currentValue.emit({\r\n      date: null,\r\n      dateString: null\r\n    });\r\n\r\n    input.value = null;\r\n  }\r\n\r\n  changed(event) {\r\n    this.currentValue.emit({\r\n      date: DateGet.customDateNoUTC(event.value, this.dateFormat),\r\n      dateString: DateGet.customDateNoUTCString(event.value, this.dateFormat) as 'DD/MM/YYYY'\r\n    });\r\n  }\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { IItemsPerPage, IPageButtons, IPaging, TPagingType } from './gl-shared-component-paging.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-paging',\r\n  templateUrl: './gl-shared-component-paging.component.html',\r\n  styleUrls: ['./gl-shared-component-paging.component.scss']\r\n})\r\nexport class GlSharedComponentPagingComponent implements AfterViewInit {\r\n  @Input() pageInfo: string;\r\n  @Input() hasNext: boolean;\r\n  @Input() hasPrevious: boolean;\r\n  @Input() type: 'translucid' | 'dark' | '' = 'dark';\r\n  @Input() firstPageTitle: string = 'First page';\r\n  @Input() previousPageTitle: string = 'Previous page';\r\n  @Input() nextPageTitle: string = 'Next page';\r\n  @Input() lastPageTitle: string = 'Last page';\r\n  @Input() pageDescription: string = 'Page';\r\n  @Input() pageSize: number;\r\n  @Input() itemsPerPageDescriptions: string = 'Items per page';\r\n  @Input() pageSizeValue1: number = 5;\r\n  @Input() pageSizeValue2: number = 10;\r\n  @Input() pageSizeValue3: number = 15;\r\n  @Input() pageSizeValue4: number = 20;\r\n  @Input() pageSizeValue5: number = 25;\r\n\r\n  @Input() pageButtons: IPageButtons[] = [];\r\n\r\n  @Output() onPageChange$: EventEmitter<IPaging> = new EventEmitter();\r\n  @Output() setNumberOfItems$: EventEmitter<number> = new EventEmitter();\r\n  @Output() setPage$: EventEmitter<number> = new EventEmitter();\r\n\r\n  itemsPerPage: IItemsPerPage[] = [];\r\n  readonly firstIcon: string = '../assets/img/icon/paging/first.svg';\r\n  readonly previousIcon: string = '../assets/img/icon/paging/previous.svg';\r\n  readonly nextIcon: string = '../assets/img/icon/paging/next.svg';\r\n  readonly lastIcon: string = '../assets/img/icon/paging/last.svg';\r\n\r\n  constructor() {}\r\n\r\n  ngAfterViewInit(): void {\r\n    for (let i = 1; i <= 5; i++) {\r\n      const pageSize = +this[`pageSizeValue${i}`];\r\n\r\n      this.itemsPerPage.push({\r\n        title: `${pageSize} ${this.itemsPerPageDescriptions.toLowerCase()}`,\r\n        innerValue: pageSize?.toString(),\r\n        value: pageSize?.toString(),\r\n        class: this.pageSize == pageSize ? 'active' : '',\r\n        pageSize\r\n      })\r\n    }\r\n  }\r\n\r\n  onPageChange(event: MouseEvent, type: TPagingType) {\r\n    this.onPageChange$.emit({ event, type });\r\n  }\r\n  setNumberOfItems(items: number) {\r\n    this.itemsPerPage.map(x => x.class = x.pageSize == items ? 'active' : '')\r\n    this.setNumberOfItems$.emit(items);\r\n  }\r\n  setPage(page: number) {\r\n    this.setPage$.emit(page);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { DateGet } from 'gl-w-frontend';\r\nimport { THorizontalAlignment } from '../../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { IDatePickerMonthYearOutput } from './gl-shared-component-input-datepicker-simple-month-year.interface';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\n\r\nimport { Moment } from 'moment';\r\nconst MONTH_YEAR_FORMAT = {\r\n  parse: {\r\n    dateInput: 'MM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-datepicker-simple-month-year',\r\n  templateUrl: './gl-shared-component-input-datepicker-simple-month-year.component.html',\r\n  styleUrls: ['./gl-shared-component-input-datepicker-simple-month-year.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: MAT_DATE_LOCALE,\r\n      useValue: 'pt-BR'\r\n    },\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: MONTH_YEAR_FORMAT\r\n    }\r\n  ]\r\n})\r\nexport class GlSharedComponentInputDatepickerSimpleMonthYearComponent {\r\n  @Input() disabled = false;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment = 'center';\r\n  @Input() class: string;\r\n  @Input() value: Date = DateGet.currentDate('DD/MM/YYYY');\r\n  @Input() maxLength = 255;\r\n\r\n  @Output() currentValue: EventEmitter<IDatePickerMonthYearOutput> = new EventEmitter();\r\n\r\n  readonly dateFormatString: 'MM/YYYY' = 'MM/YYYY';\r\n  readonly dateFormat = 'DD/MM/YYYY';\r\n  startDate = this.value;\r\n  date: Date = DateGet.customDateNoUTC('DD/MM/YYYY');\r\n\r\n  constructor() {}\r\n\r\n  chosenYearHandler(normalizedYear: Moment) {\r\n    const ctrlValue = this.date;\r\n    ctrlValue.setFullYear(normalizedYear.year());\r\n    this.date = ctrlValue;\r\n\r\n    const date = DateGet.customDateNoUTC(ctrlValue, this.dateFormat);\r\n\r\n    const dateString = DateGet.customDateNoUTCString(normalizedYear, this.dateFormatString, this.dateFormatString) as 'MM/YYYY';\r\n\r\n    this.currentValue.emit({ date, dateString });\r\n  }\r\n  chosenMonthHandler(normalizedMonth: Moment, datepicker: MatDatepicker<any>) {\r\n    const ctrlValue = this.date;\r\n    ctrlValue.setMonth(normalizedMonth.month());\r\n    this.date = ctrlValue;\r\n\r\n    datepicker.close();\r\n\r\n    const date = DateGet.customDateNoUTC(ctrlValue, this.dateFormat);\r\n    const dateString = DateGet.customDateString(normalizedMonth, this.dateFormatString, this.dateFormatString) as 'MM/YYYY';\r\n\r\n    this.currentValue.emit({ date, dateString });\r\n  }\r\n\r\n  clear() {\r\n    this.currentValue.emit({\r\n      date: null,\r\n      dateString: null\r\n    });\r\n  }\r\n  changed(event) {\r\n    this.currentValue.emit({\r\n      date: DateGet.customDateNoUTC(event.value, this.dateFormat),\r\n      dateString: DateGet.customDateString(event.value, this.dateFormatString, this.dateFormatString) as 'MM/YYYY'\r\n    });\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { IDatePickerOutput } from '../simple/day-month-year/gl-shared-component-input-datepicker-simple-day-month-year.interface';\r\nimport { IDatePickerMonthYearOutput } from '../simple/month-year/gl-shared-component-input-datepicker-simple-month-year.interface';\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-datepicker-label',\r\n  templateUrl: './gl-shared-component-input-datepicker-label.component.html',\r\n  styleUrls: ['./gl-shared-component-input-datepicker-label.component.scss']\r\n})\r\nexport class GlSharedComponentInputDatepickerLabelComponent implements OnInit {\r\n  @Input() disabled = false;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment = 'center';\r\n  @Input() class: string;\r\n  @Input() value: Date = null;\r\n  @Input() dateFormat: 'MM/YYYY' | 'DD/MM/YYYY' = 'DD/MM/YYYY';\r\n\r\n  @Input() maxLength = 255;\r\n  @Input() labelValue: string;\r\n  @Input() labelAlignment: THorizontalAlignment = 'center';\r\n  @Input() required: boolean;\r\n  @Input() requiredField = 'Required field';\r\n\r\n  @Output() currentValue: EventEmitter<IDatePickerOutput | IDatePickerMonthYearOutput> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onCurrentValue(event: IDatePickerOutput | IDatePickerMonthYearOutput) {\r\n    this.currentValue.emit(event);\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-switch',\r\n  templateUrl: './gl-shared-component-input-switch.component.html',\r\n  styleUrls: ['./gl-shared-component-input-switch.component.scss']\r\n})\r\nexport class GlSharedComponentInputSwitchComponent {\r\n  @Input() enabled = true;\r\n  @Input() active = false;\r\n  @Input() label: string;\r\n  @Input() labelColor: 'white' | 'black' = 'white';\r\n  @Input() showLabel = true;\r\n  @Input() showAsInputButton = false;\r\n\r\n  @Input() buttonIconSrc: string;\r\n\r\n  @Output() active$: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  activate(): void {\r\n    if (this.enabled) {\r\n      this.active = !this.active;\r\n      this.active$.emit(this.active);\r\n    }\r\n  }\r\n\r\n  onContainerClick(): void {\r\n    if (this.showAsInputButton) {\r\n      this.activate();\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { StringConverter, TCurrencySymbolTypes, TDecimalSeparators } from 'gl-w-frontend';\r\nimport { THorizontalAlignment } from '../../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { IInputTextStepButton, TStepType } from './gl-shared-component-input-text-simple-with-step.interface';\r\nimport { TInputTextMask } from '../gl-shared-component-input-text-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-text-simple-with-step',\r\n  templateUrl: './gl-shared-component-input-text-simple-with-step.component.html',\r\n  styleUrls: ['./gl-shared-component-input-text-simple-with-step.component.scss']\r\n})\r\nexport class GlSharedComponentInputTextSimpleWithStepComponent {\r\n  @Input() disabled = false;\r\n  @Input() autocomplete = false;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment;\r\n  @Input() class: string;\r\n  @Input() value = 0;\r\n\r\n  @Input() allowMinus = true;\r\n  @Input() rightAlign = true;\r\n  @Input() step = 5;\r\n\r\n  @Input() mask: TInputTextMask;\r\n  @Input() decimalSeparator: TDecimalSeparators = ',';\r\n  @Input() maskSymbol: TCurrencySymbolTypes;\r\n  @Input() maxLength = 255;\r\n\r\n  @Output() currentValue: EventEmitter<IInputTextStepButton> = new EventEmitter();\r\n\r\n  callback = () => {};\r\n\r\n  constructor() { }\r\n\r\n  convertValue(value: number): string {\r\n    if (this.mask === 'percentage') {\r\n      return StringConverter.numberToPercentage(value, false);\r\n    } else {\r\n      return this.value.toString();\r\n    }\r\n  }\r\n\r\n  processValue(type: TStepType, value: string): void {\r\n    const previousValue: number = this.value == null || Number.isNaN(this.value) ? 0 : this.value;\r\n    const step = this.mask === 'percentage' ? this.step / 100.0 : this.step;\r\n    let newValue: number;\r\n\r\n    if (type === 'increase') {\r\n      newValue = previousValue + step;\r\n\r\n      this.currentValue.emit({\r\n        type: 'increase',\r\n        previousValue: this.mask === 'percentage' ? previousValue : previousValue,\r\n        newValue: this.mask === 'percentage' ? newValue : newValue\r\n      });\r\n    } else if (type === 'decrease') {\r\n      newValue = previousValue - step;\r\n\r\n      this.currentValue.emit({\r\n        type: 'decrease',\r\n        previousValue: this.mask === 'percentage' ? previousValue : previousValue,\r\n        newValue: this.mask === 'percentage' ? newValue : newValue\r\n      });\r\n    } else {\r\n      const parsedValue: string = value == null || value.length === 0 ? '0.00%' : value;\r\n      newValue = StringConverter.percentageToNumber(parsedValue);\r\n\r\n      this.currentValue.emit({\r\n        type: 'typing',\r\n        previousValue: this.mask === 'percentage' ? previousValue : previousValue,\r\n        newValue: this.mask === 'percentage' ? newValue : newValue\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { IListRemoveItem } from './gl-shared-component-input-list-item-remove.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-list-item-remove',\r\n  templateUrl: './gl-shared-component-input-list-item-remove.component.html',\r\n  styleUrls: ['./gl-shared-component-input-list-item-remove.component.scss']\r\n})\r\nexport class GlSharedComponentInputListItemRemoveComponent {\r\n\r\n  @Input() showRemove: boolean = false;\r\n  @Input() id: number;\r\n\r\n  @Output() itemToRemove: EventEmitter<IListRemoveItem> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  removeItem(): void {\r\n    this.itemToRemove.emit({\r\n      id: +this.id\r\n    });\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TListReorder } from './gl-shared-component-input-list-item-up-down.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-list-item-up-down',\r\n  templateUrl: './gl-shared-component-input-list-item-up-down.component.html',\r\n  styleUrls: ['./gl-shared-component-input-list-item-up-down.component.scss']\r\n})\r\nexport class GlSharedComponentInputListItemUpDownComponent {\r\n  @Input() showUp = true;\r\n  @Input() showDown = true;\r\n\r\n  @Output() moveUpDown$: EventEmitter<TListReorder> = new EventEmitter();\r\n\r\n  callback = () => {};\r\n\r\n  constructor() { }\r\n  onClick(type: TListReorder) {\r\n\r\n    if (type === 'move-down') {\r\n      if (this.showDown) {\r\n        this.moveUpDown$.emit(type);\r\n      }\r\n    } else {\r\n      if (this.showUp) {\r\n        this.moveUpDown$.emit(type);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-check-box-simple',\r\n  templateUrl: './gl-shared-component-input-check-box-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-check-box-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputCheckBoxSimpleComponent {\r\n\r\n  @Input() checked = false;\r\n  @Input() showBackground = true;\r\n\r\n  @Output() checked$: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  onChecked(checked: boolean): void {\r\n    this.checked = checked;\r\n    this.checked$.emit(checked);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-check-box-label',\r\n  templateUrl: './gl-shared-component-input-check-box-label.component.html',\r\n  styleUrls: ['./gl-shared-component-input-check-box-label.component.scss']\r\n})\r\nexport class GlSharedComponentInputCheckBoxLabelComponent {\r\n\r\n  @Input() checked = false;\r\n  @Input() showBackground = true;\r\n\r\n  @Input() labelId: string;\r\n  @Input() labelAlignment: THorizontalAlignment = 'center';\r\n  @Input() required: boolean;\r\n  @Input() labelValue: string;\r\n  @Input() requiredLabelDescription: string;\r\n\r\n  @Output() checked$: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { AttachmentIcon, AttachmentValidate } from 'gl-w-frontend';\r\nimport { IAttachmentData } from 'gl-w-frontend/lib/scripts/core/services/attachment/core-services-attachment.interface';\r\nimport { GlSharedComponentModalAlertService } from '../../../modal/alert/gl-shared-component-modal-alert.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-drag-and-drop-simple',\r\n  templateUrl: './gl-shared-component-input-drag-and-drop-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-drag-and-drop-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputDragAndDropSimpleComponent {\r\n  @ViewChild('fileAttachment') input: ElementRef<HTMLInputElement>;\r\n\r\n  @Input() showContinueUpload: boolean;\r\n  @Input() continueUpload: boolean;\r\n  @Input() continueUploadLabel = 'Continue previous loading';\r\n  @Output() $continueUploadActive: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  @Input() uploadButtonValue = 'Upload files';\r\n  @Input() readOnly = false;\r\n\r\n  /**\r\n   * In case the button icon source is not passed, the icon will be hidden.\r\n   */\r\n  @Input() resumeButtonIconSrc: string;\r\n  @Input() descriptionDragAndDrop = 'Drag and drop the file';\r\n  @Input() descriptionDragAndDropOr = 'or';\r\n  @Input() descriptionDragAndDropClickHere = 'Click here';\r\n\r\n  @Input() uploadIcon = '../assets/img/icon/upload/upload.svg';\r\n\r\n  /**\r\n   * The message must contain the string $var1$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n  @Input() invalidExtensionMessageSingular = 'The invlid file has not been added to the attachment list. Accepted file extensions: $var1$';\r\n  /**\r\n   * The message must contain the string $var1$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n  @Input() invalidExtensionMessagePlural = 'The invalid files have not been added to the attachment list. Accepted file extensions: $var1$';\r\n  /**\r\n   * The message must contain the string $var1$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n\r\n  @Input() duplicatedMessageSingular = 'The duplicated file has not been added to the attachment list. Rejected files: $var1$';\r\n  /**\r\n   * The message must contain the string $var1$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n  @Input() duplicatedMessagePlural = 'The duplicated files have not been added to the attachment list. Rejected files: $var1$';\r\n  /**\r\n   * The message must contain the string $var1$ and $var2$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n\r\n  @Input() invalidSizeMessageSingular = 'The current file is over $var1$KB and has not been added to the attachment list. Rejected files: $var2$';\r\n  /**\r\n   * The message must contain the string $var1$ and $var2$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n  @Input() invalidSizeMessagePlural = 'The files with size over $var1$KB have not been added to the attachment list. Rejected files: $var2$';\r\n\r\n  /**\r\n   * The message must contain the string $var1$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n  @Input() invalidLengthMessageSingular = 'You can just add one attachment file. Rejected files: $var1$';\r\n  /**\r\n   * The message must contain the string $var1$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n  @Input() invalidLengthMessagePlural = 'You can just add $var1$ attachment file. Rejected files: $var2$';\r\n\r\n  /**\r\n   * If maxNumberOfFiles value is greater than 1 or equal to -1, multiple files are enabled.\r\n   * Default value = -1.\r\n   */\r\n  @Input() maxNumberOfFiles = -1;\r\n  /**\r\n   * If maxSize value is calculated in KB.\r\n   * Default value = 46080 (45mb).\r\n   */\r\n  @Input() maxSize = 46080;\r\n  /**\r\n   * This field does not require to include the dot extension.\r\n   * Example: [\"psd\", .xlsx\", \"zip\", \".docx\", \".pptx\"]\r\n   */\r\n  @Input() acceptFileType: string[] = [];\r\n  /**\r\n   * Returns the list of valid attachments added.\r\n   */\r\n  @Output() $attachmentItems: EventEmitter<IAttachmentData[]> = new EventEmitter();\r\n  /**\r\n   * Returns the list of valid attachments added and fires the upload button.\r\n   */\r\n  @Output() $uploadClick: EventEmitter<IAttachmentData[]> = new EventEmitter();\r\n\r\n  @Input() attachmentItems: IAttachmentData[] = [];\r\n\r\n\r\n  constructor(private _alert: GlSharedComponentModalAlertService) { }\r\n\r\n  private static fileNameList(list: string[]): string {\r\n    let listName = '\\n';\r\n    for (const [i, item] of list.entries()) {\r\n      const separator = i < (list.length - 1) ? ';\\n' : '.';\r\n      listName += `${i + 1}. ${item}${separator}`;\r\n    }\r\n\r\n    return listName;\r\n  }\r\n\r\n  async onFileDropped(fileList: FileList): Promise<void> {\r\n    const duplicatedList: string[] = [];\r\n    const invalidFileList: string[] = [];\r\n    const invalidSizeList: string[] = [];\r\n    const invalidLengthList: string[] = [];\r\n\r\n    if (this.maxNumberOfFiles === -1 || this.maxNumberOfFiles > 1) {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < fileList.length; i++) {\r\n        const file = fileList[i];\r\n        const validFile = this.acceptFileType.length > 0 ? AttachmentValidate.fileArray(file.name, this.acceptFileType) :  true;\r\n        const duplicated = AttachmentValidate.duplicated(file.name, this.attachmentItems);\r\n        const invalidSize = !AttachmentValidate.fileSizeFromArray(this.input.nativeElement, file);\r\n\r\n        if (validFile) {\r\n          if (duplicated) {\r\n            duplicatedList.push(file.name);\r\n          } else if (invalidSize) {\r\n            invalidSizeList.push(file.name);\r\n          } else {\r\n            if (this.maxNumberOfFiles === -1 || this.attachmentItems.length < this.maxNumberOfFiles) {\r\n              this.addItemToArray(file);\r\n            } else {\r\n              invalidLengthList.push(file.name);\r\n            }\r\n          }\r\n        } else {\r\n          invalidFileList.push(file.name);\r\n        }\r\n      }\r\n\r\n      await this.showErrorMessage(invalidFileList, duplicatedList, invalidSizeList, invalidLengthList);\r\n    } else {\r\n      const arrayCopy = [...this.attachmentItems];\r\n      this.attachmentItems = [];\r\n\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < fileList.length; i++) {\r\n        const file = fileList[i];\r\n        const validFile = this.acceptFileType.length > 0 ? AttachmentValidate.fileArray(file.name, this.acceptFileType) :  true;\r\n        const duplicated = AttachmentValidate.duplicated(file.name, this.attachmentItems);\r\n        const invalidSize = !AttachmentValidate.fileSizeFromArray(this.input.nativeElement, file);\r\n\r\n        if (validFile) {\r\n          if (duplicated) {\r\n            duplicatedList.push(file.name);\r\n          } else if (invalidSize) {\r\n            invalidSizeList.push(file.name);\r\n          } else {\r\n            if (this.attachmentItems.length === 0) {\r\n              this.addItemToArray(file);\r\n            } else {\r\n              invalidLengthList.push(file.name);\r\n            }\r\n          }\r\n        } else {\r\n          invalidFileList.push(file.name);\r\n        }\r\n      }\r\n\r\n      if (this.attachmentItems.length === 0) { this.attachmentItems = [...arrayCopy]; }\r\n      await this.showErrorMessage(invalidFileList, duplicatedList, invalidSizeList, invalidLengthList);\r\n    }\r\n\r\n    this.input.nativeElement.value = '';\r\n    this.$attachmentItems.emit(this.attachmentItems);\r\n  }\r\n\r\n  removeAttachment(removed): void {\r\n    const tempList = this.attachmentItems.filter(x => x.id !== removed.id);\r\n    const attachments: IAttachmentData[] = [];\r\n\r\n    for (const item of tempList) {\r\n      attachments.push({\r\n        id: attachments.length,\r\n        name: item.file.name,\r\n        icon: AttachmentIcon.get(item.file.name),\r\n        file: item.file,\r\n        new: true,\r\n        remove: false\r\n      });\r\n    }\r\n\r\n    this.attachmentItems = attachments;\r\n    this.$attachmentItems.emit(attachments);\r\n  }\r\n  async fileBrowserHandler(files: EventTarget): Promise<void> {\r\n    const fileList: FileList = (files as HTMLInputElement).files;\r\n    return this.onFileDropped(fileList);\r\n  }\r\n  parsedAcceptList(): string {\r\n    let accept = '\\n';\r\n    for (let i = 0; i < this.acceptFileType.length; i++) {\r\n      const item = this.acceptFileType[i];\r\n      const separator = i < (this.acceptFileType.length - 1) ? ', ' : '';\r\n      let tempExtension: string;\r\n\r\n      if (!item.includes('.', 0)) {\r\n        tempExtension = `.${item}`;\r\n      }\r\n\r\n      accept += `${tempExtension}${separator}`;\r\n\r\n    }\r\n\r\n    return accept;\r\n  }\r\n  click(): void {\r\n    this.input.nativeElement.click();\r\n  }\r\n\r\n  uploadClick(): void {\r\n    this.$uploadClick.emit(this.attachmentItems);\r\n  }\r\n\r\n  onContinueUpload(active: boolean) {\r\n    this.$continueUploadActive.emit(active);\r\n    this.continueUpload = active;\r\n  }\r\n\r\n  private addItemToArray(file: File): void {\r\n    this.attachmentItems.push({\r\n      id: this.attachmentItems.length,\r\n      name: file.name,\r\n      icon: AttachmentIcon.get(file.name),\r\n      file,\r\n      new: true,\r\n      remove: false\r\n    });\r\n  }\r\n  private async showErrorMessage(invalidFileList: string[], duplicatedList: string[], invalidSizeList: string[], invalidLengthList: string[] = []): Promise<void> {\r\n    const timeout = 500;\r\n\r\n    if (invalidFileList != null && invalidFileList.length > 0) {\r\n      await this.errorMessage(\r\n        this.acceptFileType,\r\n        this.invalidExtensionMessageSingular,\r\n        this.invalidExtensionMessagePlural\r\n      );\r\n    }\r\n\r\n    if (duplicatedList != null && duplicatedList.length > 0) {\r\n      setTimeout(async () => {\r\n        await this.errorMessage(\r\n          duplicatedList,\r\n          this.duplicatedMessageSingular,\r\n          this.duplicatedMessagePlural\r\n        );\r\n      }, timeout);\r\n    }\r\n\r\n    if (invalidSizeList != null && invalidSizeList.length > 0) {\r\n      setTimeout(async () => {\r\n        await this.errorMessageTwoVariables(\r\n          invalidSizeList,\r\n          this.invalidSizeMessageSingular,\r\n          this.invalidSizeMessagePlural,\r\n          this.maxSize.toString()\r\n        );\r\n      }, timeout);\r\n    }\r\n\r\n    if (invalidLengthList != null && invalidLengthList.length > 0) {\r\n      setTimeout(async () => {\r\n        const plural = this.maxNumberOfFiles > 1 ? this.invalidLengthMessagePlural : this.invalidLengthMessageSingular;\r\n        await this.errorMessageTwoVariables(\r\n          invalidLengthList,\r\n          this.invalidLengthMessageSingular,\r\n          plural,\r\n          this.maxNumberOfFiles.toString(),\r\n          this.maxNumberOfFiles > 1\r\n        );\r\n      }, timeout);\r\n    }\r\n  }\r\n  private async errorMessage(arrayList: string[], singularMessage: string, pluralMessage: string): Promise<void> {\r\n    const fileNames = GlSharedComponentInputDragAndDropSimpleComponent.fileNameList(arrayList);\r\n    const isPlural = arrayList.length > 1;\r\n    const singular = singularMessage.replace('$var1$', fileNames);\r\n    const plural = pluralMessage.replace('$var1$', fileNames);\r\n    const message = isPlural ? plural : singular;\r\n\r\n    await this._alert.show(message);\r\n  }\r\n  private async errorMessageTwoVariables(arrayList: string[], singularMessage: string, pluralMessage: string, firstVariable: string, isPluralComparator: boolean = null): Promise<void> {\r\n    const fileNames = GlSharedComponentInputDragAndDropSimpleComponent.fileNameList(arrayList);\r\n    const isPlural = isPluralComparator && arrayList.length > 1 || !isPluralComparator && arrayList.length > 1;\r\n    const singular = singularMessage.replace('$var1$', firstVariable).replace('$var2$', fileNames);\r\n    const plural = pluralMessage.replace('$var1$', firstVariable).replace('$var2$', fileNames);\r\n\r\n    const message = isPlural ? plural : singular;\r\n\r\n    await this._alert.show(message);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\nimport { GlCoreModule } from '../../core/gl-core.module';\r\nimport { GlSharedComponentAttachmentItemComponent } from './attachment/item/gl-shared-component-attachment-item.component';\r\nimport { GlSharedComponentAttachmentImagePreviewComponent } from './attachment/image/preview/gl-shared-component-attachment-image-preview.component';\r\nimport { GlSharedComponentButtonAttachmentFileComponent } from './button/attachment/file/gl-shared-component-button-attachment-file.component';\r\nimport { GlSharedComponentButtonAttachmentLinkComponent } from './button/attachment/link/gl-shared-component-button-attachment-link.component';\r\nimport { GlSharedComponentButtonImageSimpleComponent } from './button/image/simple/gl-shared-component-button-image-simple.component';\r\nimport { GlSharedComponentButtonImageTooltipComponent } from './button/image/tooltip/gl-shared-component-button-image-tooltip.component';\r\nimport { GlSharedComponentButtonInterfaceComponent } from './button/interface/gl-shared-component-button-interface.component';\r\nimport { GlSharedComponentButtonMenuSimpleComponent } from './button/menu/simple/gl-shared-component-button-menu-simple.component';\r\nimport { GlSharedComponentButtonMenuTooltipComponent } from './button/menu/tooltip/gl-shared-component-button-menu-tooltip.component';\r\nimport { GlSharedComponentErrorMessageComponent } from './error-message/gl-shared-component-error-message.component';\r\nimport { GlSharedComponentFilterComponent } from './filter/gl-shared-component-filter.component';\r\nimport { GlSharedComponentFilterContainerComponent } from './filter/container/gl-shared-component-filter-container.component';\r\nimport { GlSharedComponentFooterContainerComponent } from './footer/container/gl-shared-component-footer-container.component';\r\nimport { GlSharedComponentFooterSimpleComponent } from './footer/simple/gl-shared-component-footer-simple.component';\r\nimport { GlSharedComponentHeaderDefaultComponent } from './header/default/gl-shared-component-header-default.component';\r\nimport { GlSharedComponentInputAutocompleteLabelComponent } from './input/autocomplete/label/gl-shared-component-input-autocomplete-label.component';\r\nimport { GlSharedComponentInputAutocompleteSimpleComponent } from './input/autocomplete/simple/gl-shared-component-input-autocomplete-simple.component';\r\nimport { GlSharedComponentInputButtonSimpleComponent } from './input/button/simple/gl-shared-component-input-button-simple.component';\r\nimport { GlSharedComponentInputButtonHyperlinkComponent } from './input/button/hyperlink/gl-shared-component-input-button-hyperlink.component';\r\nimport { GlSharedComponentInputOptionSimpleComponent } from './input/option/simple/gl-shared-component-input-option-simple.component';\r\nimport { GlSharedComponentInputTextSimpleComponent } from './input/text/simple/gl-shared-component-input-text-simple.component';\r\nimport { GlSharedComponentInputTextLabelButtonContainerComponent } from './input/text/label/button/container/gl-shared-component-input-text-label-button-container.component';\r\nimport { GlSharedComponentInputTextLabelSimpleComponent } from './input/text/label/simple/gl-shared-component-input-text-label-simple.component';\r\nimport { GlSharedComponentInputTextAreaLabelComponent } from './input/text-area/label/gl-shared-component-input-text-area-label.component';\r\nimport { GlSharedComponentInputTextAreaSimpleComponent } from './input/text-area/simple/gl-shared-component-input-text-area-simple.component';\r\nimport { GlSharedComponentLogoSquareComponent } from './logo/square/gl-shared-component-logo-square.component';\r\nimport { GlSharedComponentModalAttachmentLinkComponent } from './modal/attachment/link/gl-shared-component-modal-attachment-link.component';\r\nimport { GlSharedComponentModalAlertComponent } from './modal/alert/gl-shared-component-modal-alert.component';\r\nimport { GlSharedComponentModalLoadingComponent } from './modal/loading/gl-shared-component-modal-loading.component';\r\nimport { GlSharedComponentModalHeaderComponent } from './modal/header/gl-shared-component-modal-header.component';\r\nimport { GlSharedComponentMenuBackgroundComponent } from './menu/background/gl-shared-component-menu-background.component';\r\nimport { GlSharedComponentMenuItemComponent } from './menu/item/gl-shared-component-menu-item.component';\r\nimport { GlSharedComponentMenuComponent } from './menu/gl-shared-component-menu.component';\r\nimport { GlSharedComponentNavigationTabSimpleComponent } from './navigation/tab/simple/gl-shared-component-navigation-tab-simple.component';\r\nimport { GlSharedComponentNavigationTabContainerComponent } from './navigation/tab/container/gl-shared-component-navigation-tab-container.component';\r\nimport { GlSharedComponentTitleLabelSimpleComponent } from './title/label/simple/gl-shared-component-title-label-simple.component';\r\nimport { GlSharedComponentTitleLabelButtonSimpleComponent } from './title/label/button/simple/gl-shared-component-title-label-button-simple.component';\r\nimport { GlSharedComponentTitleLabelButtonContainerComponent } from './title/label/button/container/gl-shared-component-title-label-button-container.component';\r\nimport { GlSharedComponentTitlePageComponent } from './title/page/gl-shared-component-title-page.component';\r\nimport { GlSharedComponentInputDatepickerSimpleDayMonthYearComponent } from './input/datepicker/simple/day-month-year/gl-shared-component-input-datepicker-simple-day-month-year.component';\r\nimport { GlSharedComponentPagingComponent } from './paging/gl-shared-component-paging.component';\r\nimport { GlSharedComponentInputDatepickerSimpleMonthYearComponent } from './input/datepicker/simple/month-year/gl-shared-component-input-datepicker-simple-month-year.component';\r\nimport { GlSharedComponentInputDatepickerLabelComponent } from './input/datepicker/label/gl-shared-component-input-datepicker-label.component';\r\nimport { GlSharedComponentInputSwitchComponent } from './input/switch/gl-shared-component-input-switch.component';\r\nimport { GlSharedComponentInputTextSimpleWithStepComponent } from './input/text/simple/with-step/gl-shared-component-input-text-simple-with-step.component';\r\nimport { GlSharedComponentInputListItemRemoveComponent } from './list/item-remove/gl-shared-component-input-list-item-remove.component';\r\nimport { GlSharedComponentInputListItemUpDownComponent } from './list/item-up-down/gl-shared-component-input-list-item-up-down.component';\r\nimport { GlSharedComponentInputCheckBoxSimpleComponent } from './input/check-box/simple/gl-shared-component-input-check-box-simple.component';\r\nimport { GlSharedComponentInputCheckBoxLabelComponent } from './input/check-box/label/gl-shared-component-input-check-box-label.component';\r\nimport { GlSharedComponentInputDragAndDropSimpleComponent } from './input/drag-and-drop/simple/gl-shared-component-input-drag-and-drop-simple.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GlSharedComponentAttachmentItemComponent,\r\n    GlSharedComponentAttachmentImagePreviewComponent,\r\n    GlSharedComponentButtonAttachmentFileComponent,\r\n    GlSharedComponentButtonAttachmentLinkComponent,\r\n    GlSharedComponentButtonImageSimpleComponent,\r\n    GlSharedComponentButtonImageTooltipComponent,\r\n    GlSharedComponentButtonInterfaceComponent,\r\n    GlSharedComponentButtonMenuSimpleComponent,\r\n    GlSharedComponentButtonMenuTooltipComponent,\r\n    GlSharedComponentErrorMessageComponent,\r\n    GlSharedComponentFilterComponent,\r\n    GlSharedComponentFilterContainerComponent,\r\n    GlSharedComponentFooterContainerComponent,\r\n    GlSharedComponentFooterSimpleComponent,\r\n    GlSharedComponentHeaderDefaultComponent,\r\n    GlSharedComponentInputAutocompleteLabelComponent,\r\n    GlSharedComponentInputAutocompleteSimpleComponent,\r\n    GlSharedComponentInputButtonSimpleComponent,\r\n    GlSharedComponentInputButtonHyperlinkComponent,\r\n    GlSharedComponentInputOptionSimpleComponent,\r\n    GlSharedComponentInputTextSimpleComponent,\r\n    GlSharedComponentInputTextLabelButtonContainerComponent,\r\n    GlSharedComponentInputTextLabelSimpleComponent,\r\n    GlSharedComponentInputTextAreaSimpleComponent,\r\n    GlSharedComponentInputTextAreaLabelComponent,\r\n    GlSharedComponentLogoSquareComponent,\r\n    GlSharedComponentModalAlertComponent,\r\n    GlSharedComponentModalAttachmentLinkComponent,\r\n    GlSharedComponentModalHeaderComponent,\r\n    GlSharedComponentModalLoadingComponent,\r\n    GlSharedComponentMenuBackgroundComponent,\r\n    GlSharedComponentMenuComponent,\r\n    GlSharedComponentMenuItemComponent,\r\n    GlSharedComponentNavigationTabSimpleComponent,\r\n    GlSharedComponentNavigationTabContainerComponent,\r\n    GlSharedComponentPagingComponent,\r\n    GlSharedComponentTitleLabelSimpleComponent,\r\n    GlSharedComponentTitleLabelButtonSimpleComponent,\r\n    GlSharedComponentTitleLabelButtonContainerComponent,\r\n    GlSharedComponentTitlePageComponent,\r\n    GlSharedComponentInputDatepickerSimpleDayMonthYearComponent,\r\n    GlSharedComponentInputDatepickerSimpleMonthYearComponent,\r\n    GlSharedComponentInputDatepickerLabelComponent,\r\n    GlSharedComponentInputDatepickerLabelComponent,\r\n    GlSharedComponentInputSwitchComponent,\r\n    GlSharedComponentInputTextSimpleWithStepComponent,\r\n    GlSharedComponentInputListItemRemoveComponent,\r\n    GlSharedComponentInputListItemUpDownComponent,\r\n    GlSharedComponentInputCheckBoxSimpleComponent,\r\n    GlSharedComponentInputCheckBoxLabelComponent,\r\n    GlSharedComponentInputDragAndDropSimpleComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    GlCoreModule,\r\n    RouterModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDialogModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    OverlayModule,\r\n    MatDatepickerModule\r\n  ],\r\n  exports: [\r\n    GlSharedComponentAttachmentItemComponent,\r\n    GlSharedComponentAttachmentImagePreviewComponent,\r\n    GlSharedComponentButtonImageSimpleComponent,\r\n    GlSharedComponentButtonAttachmentLinkComponent,\r\n    GlSharedComponentButtonImageTooltipComponent,\r\n    GlSharedComponentButtonInterfaceComponent,\r\n    GlSharedComponentButtonMenuSimpleComponent,\r\n    GlSharedComponentButtonMenuTooltipComponent,\r\n    GlSharedComponentErrorMessageComponent,\r\n    GlSharedComponentFilterComponent,\r\n    GlSharedComponentFilterContainerComponent,\r\n    GlSharedComponentFooterContainerComponent,\r\n    GlSharedComponentFooterSimpleComponent,\r\n    GlSharedComponentHeaderDefaultComponent,\r\n    GlSharedComponentInputAutocompleteLabelComponent,\r\n    GlSharedComponentInputAutocompleteSimpleComponent,\r\n    GlSharedComponentInputButtonSimpleComponent,\r\n    GlSharedComponentInputButtonHyperlinkComponent,\r\n    GlSharedComponentInputDragAndDropSimpleComponent,\r\n    GlSharedComponentInputOptionSimpleComponent,\r\n    GlSharedComponentInputTextAreaSimpleComponent,\r\n    GlSharedComponentInputTextAreaLabelComponent,\r\n    GlSharedComponentInputTextLabelButtonContainerComponent,\r\n    GlSharedComponentInputTextLabelSimpleComponent,\r\n    GlSharedComponentInputTextSimpleComponent,\r\n    GlSharedComponentLogoSquareComponent,\r\n    GlSharedComponentMenuBackgroundComponent,\r\n    GlSharedComponentMenuComponent,\r\n    GlSharedComponentMenuItemComponent,\r\n    GlSharedComponentModalAlertComponent,\r\n    GlSharedComponentModalAttachmentLinkComponent,\r\n    GlSharedComponentModalHeaderComponent,\r\n    GlSharedComponentModalLoadingComponent,\r\n    GlSharedComponentNavigationTabSimpleComponent,\r\n    GlSharedComponentNavigationTabContainerComponent,\r\n    GlSharedComponentPagingComponent,\r\n    GlSharedComponentTitlePageComponent,\r\n    GlSharedComponentTitleLabelButtonSimpleComponent,\r\n    GlSharedComponentTitleLabelButtonContainerComponent,\r\n    GlSharedComponentTitleLabelSimpleComponent,\r\n    GlSharedComponentButtonAttachmentFileComponent,\r\n    GlSharedComponentInputDatepickerSimpleDayMonthYearComponent,\r\n    GlSharedComponentInputDatepickerSimpleMonthYearComponent,\r\n    GlSharedComponentInputDatepickerLabelComponent,\r\n    GlSharedComponentInputSwitchComponent,\r\n    GlSharedComponentInputTextSimpleWithStepComponent,\r\n    GlSharedComponentInputListItemRemoveComponent,\r\n    GlSharedComponentInputListItemUpDownComponent,\r\n    GlSharedComponentInputCheckBoxSimpleComponent,\r\n    GlSharedComponentInputCheckBoxLabelComponent\r\n  ]\r\n})\r\nexport class GlComponentModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GlComponentModule } from './component/gl-component.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    GlComponentModule\r\n  ]\r\n})\r\nexport class GlSharedModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { GlSharedModule } from './shared/gl-shared.module';\r\nimport { GlCoreModule } from './core/gl-core.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    GlSharedModule,\r\n    GlCoreModule,\r\n  ],\r\n  exports: [],\r\n  providers: []\r\n})\r\nexport class GlNgFrontendModule {\r\n  constructor() { }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-view-error-message',\r\n  templateUrl: './gl-shared-view-error-message.component.html',\r\n  styleUrls: ['./gl-shared-view-error-message.component.scss']\r\n})\r\nexport class GlSharedViewErrorMessageComponent implements AfterViewInit {\r\n  @ViewChild('mainContainer') mainContainer: ElementRef<HTMLDivElement>;\r\n\r\n  @Input() blurBackground: string;\r\n  @Input() background: string;\r\n\r\n  @Input() logoImageScr: string;\r\n  @Input() logoImageAlt: string;\r\n  @Input() logoHorizontalPosition: 'left' | 'right' = 'left';\r\n  @Input() logoVerticalPosition: 'top' | 'bottom' = 'top';\r\n\r\n  @Input() errorPosition: 'left' | 'right' = 'left';\r\n  @Input() errorCode: string | number;\r\n  @Input() errorMessage: string;\r\n  @Input() errorButtonLabel: string;\r\n  @Output() errorButtonAction$: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Input() footerMainDescription: string;\r\n  @Input() footerShowContainer: boolean;\r\n  @Input() footerDescription: string;\r\n  @Input() footerImageDescription: string = 'Image logo';\r\n  @Input() footerImageSrc: string;\r\n  @Input() footerLink: string;\r\n\r\n  constructor() { }\r\n\r\n  ngAfterViewInit(): void {\r\n    const mainContainer: HTMLDivElement = this.mainContainer.nativeElement;\r\n    const mainContainerParent: HTMLDivElement = this.mainContainer.nativeElement.parentNode as HTMLDivElement;\r\n\r\n    mainContainer.style.backgroundImage = `url(${this.background})`;\r\n    mainContainerParent.style.backgroundImage = `url(${this.blurBackground})`;\r\n  }\r\n\r\n  errorButtonAction(): void {\r\n    this.errorButtonAction$.emit();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GlComponentModule } from '../component/gl-component.module';\r\nimport { GlSharedViewErrorMessageComponent } from './error-message/gl-shared-view-error-message.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GlSharedViewErrorMessageComponent\r\n  ],\r\n  exports: [\r\n    GlSharedViewErrorMessageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    GlComponentModule\r\n  ]\r\n})\r\nexport class GlSharedViewModule { }\r\n","/*\r\n * Public API Surface of gl-ng-frontend\r\n */\r\n\r\n// region Main\r\nexport * from './lib/gl-ng-frontend.module';\r\n//\r\n\r\n// region Shared\r\nexport * from './lib/shared/gl-shared.module';\r\n\r\n// region Component\r\nexport * from './lib/shared/component/gl-component.module';\r\n\r\nexport * from './lib/shared/component/attachment/image/preview/gl-shared-component-attachment-image-preview.component';\r\nexport * from './lib/shared/component/attachment/image/preview/gl-shared-component-attachment-image-preview.service';\r\nexport * from './lib/shared/component/attachment/image/preview/gl-shared-component-attachment-image-preview.interface';\r\n\r\nexport * from './lib/shared/component/attachment/item/gl-shared-component-attachment-item.component';\r\n\r\nexport * from './lib/shared/component/button/attachment/file/gl-shared-component-button-attachment-file.component';\r\nexport * from './lib/shared/component/button/attachment/file/gl-shared-component-button-attachment-file.service';\r\nexport * from './lib/shared/component/button/attachment/link/gl-shared-component-button-attachment-link.component';\r\n\r\nexport * from './lib/shared/component/button/image/simple/gl-shared-component-button-image-simple.component';\r\nexport * from './lib/shared/component/button/image/tooltip/gl-shared-component-button-image-tooltip.component';\r\nexport * from './lib/shared/component/button/image/tooltip/gl-shared-component-button-image-tooltip.interface';\r\n\r\nexport * from './lib/shared/component/button/interface/gl-shared-component-button-interface.component';\r\n\r\nexport * from './lib/shared/component/button/menu/simple/gl-shared-component-button-menu-simple.component';\r\nexport * from './lib/shared/component/button/menu/simple/gl-shared-component-button-menu-simple.interface';\r\nexport * from './lib/shared/component/button/menu/tooltip/gl-shared-component-button-menu-tooltip.component';\r\n\r\nexport * from './lib/shared/component/error-message/gl-shared-component-error-message.component';\r\n\r\nexport * from './lib/shared/component/filter/gl-shared-component-filter.component';\r\nexport * from './lib/shared/component/filter/gl-shared-component-filter.service';\r\nexport * from './lib/shared/component/filter/container/gl-shared-component-filter-container.component';\r\n\r\nexport * from './lib/shared/component/footer/simple/gl-shared-component-footer-simple.component';\r\nexport * from './lib/shared/component/footer/container/gl-shared-component-footer-container.component';\r\n\r\nexport * from './lib/shared/component/header/default/gl-shared-component-header-default.component';\r\n\r\nexport * from './lib/shared/component/input/autocomplete/label/gl-shared-component-input-autocomplete-label.component';\r\nexport * from './lib/shared/component/input/autocomplete/simple/gl-shared-component-input-autocomplete-simple.component';\r\nexport * from './lib/shared/component/input/autocomplete/simple/gl-shared-component-input-autocomplete-simple.service';\r\nexport * from './lib/shared/component/input/autocomplete/simple/gl-shared-component-input-autocomplete-simple.interface';\r\n\r\nexport * from './lib/shared/component/input/check-box/simple/gl-shared-component-input-check-box-simple.component';\r\nexport * from './lib/shared/component/input/check-box/label/gl-shared-component-input-check-box-label.component';\r\n\r\nexport * from './lib/shared/component/input/button/simple/gl-shared-component-input-button-simple.component';\r\nexport * from './lib/shared/component/input/option/simple/gl-shared-component-input-option-simple.component';\r\n\r\nexport * from './lib/shared/component/input/switch/gl-shared-component-input-switch.component';\r\n\r\nimport * as datePickerDayMonthYear from './lib/shared/component/input/datepicker/simple/day-month-year/gl-shared-component-input-datepicker-simple-day-month-year.component';\r\nimport * as datePickerMonthYear from './lib/shared/component/input/datepicker/simple/month-year/gl-shared-component-input-datepicker-simple-month-year.component';\r\nexport { datePickerDayMonthYear, datePickerMonthYear };\r\n\r\n// export * from './lib/shared/component/input/datepicker/simple/day-month-year/gl-shared-component-input-datepicker-simple-day-month-year.component';\r\nexport * from './lib/shared/component/input/datepicker/simple/day-month-year/gl-shared-component-input-datepicker-simple-day-month-year.interface';\r\n// export * from './lib/shared/component/input/datepicker/simple/month-year/gl-shared-component-input-datepicker-simple-month-year.component';\r\nexport * from './lib/shared/component/input/datepicker/simple/month-year/gl-shared-component-input-datepicker-simple-month-year.interface';\r\nexport * from './lib/shared/component/input/datepicker/label/gl-shared-component-input-datepicker-label.component';\r\n\r\nexport * from './lib/shared/component/input/drag-and-drop/simple/gl-shared-component-input-drag-and-drop-simple.component';\r\nexport * from './lib/shared/component/input/drag-and-drop/simple/gl-shared-component-input-drag-and-drop-simple.interface';\r\n\r\nexport * from './lib/shared/component/input/text/simple/with-step/gl-shared-component-input-text-simple-with-step.component';\r\nexport * from './lib/shared/component/input/text/simple/with-step/gl-shared-component-input-text-simple-with-step.interface';\r\nexport * from './lib/shared/component/input/text/simple/gl-shared-component-input-text-simple.component';\r\nexport * from './lib/shared/component/input/text/simple/gl-shared-component-input-text-simple.interface';\r\nexport * from './lib/shared/component/input/text/simple/gl-shared-component-input-text-simple.service';\r\nexport * from './lib/shared/component/input/text/label/button/container/gl-shared-component-input-text-label-button-container.component';\r\nexport * from './lib/shared/component/input/text/label/simple/gl-shared-component-input-text-label-simple.component';\r\nexport * from './lib/shared/component/input/text-area/simple/gl-shared-component-input-text-area-simple.component';\r\nexport * from './lib/shared/component/input/text-area/label/gl-shared-component-input-text-area-label.component';\r\n\r\nexport * from './lib/shared/component/input/button/hyperlink/gl-shared-component-input-button-hyperlink.component';\r\n\r\nexport * from './lib/shared/component/list/item-remove/gl-shared-component-input-list-item-remove.component';\r\nexport * from './lib/shared/component/list/item-remove/gl-shared-component-input-list-item-remove.interface';\r\nexport * from './lib/shared/component/list/item-up-down/gl-shared-component-input-list-item-up-down.component';\r\nexport * from './lib/shared/component/list/item-up-down/gl-shared-component-input-list-item-up-down.interface';\r\n\r\nexport * from './lib/shared/component/logo/square/gl-shared-component-logo-square.component';\r\n\r\nexport * from './lib/shared/component/menu/background/gl-shared-component-menu-background.component';\r\nexport * from './lib/shared/component/menu/item/gl-shared-component-menu-item.component';\r\nexport * from './lib/shared/component/menu/item/gl-shared-component-menu-item.interface';\r\nexport * from './lib/shared/component/menu/gl-shared-component-menu.component';\r\nexport * from './lib/shared/component/menu/gl-shared-component-menu.interface';\r\nexport * from './lib/shared/component/menu/gl-shared-component-menu.service';\r\n\r\nexport * from './lib/shared/component/modal/attachment/link/gl-shared-component-modal-attachment-link.component';\r\nexport * from './lib/shared/component/modal/attachment/link/gl-shared-component-modal-attachment-link.interface';\r\nexport * from './lib/shared/component/modal/attachment/link/gl-shared-component-modal-attachment-link.service';\r\nexport * from './lib/shared/component/modal/alert/gl-shared-component-modal-alert.component';\r\nexport * from './lib/shared/component/modal/alert/gl-shared-component-modal-alert.service';\r\nexport * from './lib/shared/component/modal/alert/gl-shared-component-modal-alert.service';\r\nexport * from './lib/shared/component/modal/header/gl-shared-component-modal-header.component';\r\nexport * from './lib/shared/component/modal/loading/gl-shared-component-modal-loading.component';\r\nexport * from './lib/shared/component/modal/loading/gl-shared-component-modal-loading.service';\r\n\r\nexport * from './lib/shared/component/navigation/tab/simple/gl-shared-component-navigation-tab-simple.component';\r\nexport * from './lib/shared/component/navigation/tab/simple/gl-shared-component-navigation-tab-simple.interface';\r\nexport * from './lib/shared/component/navigation/tab/container/gl-shared-component-navigation-tab-container.component';\r\n\r\nexport * from './lib/shared/component/paging/gl-shared-component-paging.component';\r\nexport * from './lib/shared/component/paging/gl-shared-component-paging.interface';\r\n\r\nexport * from './lib/shared/component/title/label/simple/gl-shared-component-title-label-simple.component';\r\nexport * from './lib/shared/component/title/label/simple/gl-shared-component-title-label-simple.interface';\r\nexport * from './lib/shared/component/title/page/gl-shared-component-title-page.component';\r\nexport * from './lib/shared/component/title/label/button/simple/gl-shared-component-title-label-button-simple.component';\r\nexport * from './lib/shared/component/title/label/button/container/gl-shared-component-title-label-button-container.component';\r\n// endregion\r\n// region Views\r\nexport * from './lib/shared/view/gl-shared-view.module';\r\n\r\nexport * from './lib/shared/view/error-message/gl-shared-view-error-message.component';\r\n// endregion\r\n// endregion\r\n\r\n// region Core\r\nexport * from './lib/core/gl-core.module';\r\n\r\n// region Directives\r\nexport * from './lib/core/directives/autofocus/core-directives-autofocus.directive';\r\nexport * from './lib/core/directives/drag-and-drop/core-directives-drag-and-drop.directive';\r\n// endregion\r\n\r\n// endregion\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {GlSharedComponentInputDatepickerSimpleDayMonthYearComponent as ɵa} from './lib/shared/component/input/datepicker/simple/day-month-year/gl-shared-component-input-datepicker-simple-day-month-year.component';\nexport {GlSharedComponentInputDatepickerSimpleMonthYearComponent as ɵb} from './lib/shared/component/input/datepicker/simple/month-year/gl-shared-component-input-datepicker-simple-month-year.component';"],"names":[],"mappings":"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"}