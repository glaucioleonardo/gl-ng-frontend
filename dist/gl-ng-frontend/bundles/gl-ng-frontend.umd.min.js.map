{"version":3,"sources":["../../../projects/gl-ng-frontend/src/lib/core/directives/autofocus/core-directives-autofocus.directive.ts","../../../projects/gl-ng-frontend/src/lib/core/directives/drag-and-drop/core-directives-drag-and-drop.directive.ts","../../../projects/gl-ng-frontend/src/lib/core/gl-core.module.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/attachment/item/gl-shared-component-attachment-item.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/alert/gl-shared-component-modal-alert.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/attachment/image/preview/gl-shared-component-attachment-image-preview.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/attachment/image/preview/gl-shared-component-attachment-image-preview.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/attachment/file/gl-shared-component-button-attachment-file.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/attachment/file/gl-shared-component-button-attachment-file.component.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/attachment/link/gl-shared-component-modal-attachment-link.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/attachment/link/gl-shared-component-button-attachment-link.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/image/simple/gl-shared-component-button-image-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/image/tooltip/gl-shared-component-button-image-tooltip.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/interface/gl-shared-component-button-interface.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/menu/simple/gl-shared-component-button-menu-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/button/menu/tooltip/gl-shared-component-button-menu-tooltip.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/error-message/gl-shared-component-error-message.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/filter/gl-shared-component-filter.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/filter/gl-shared-component-filter.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/filter/container/gl-shared-component-filter-container.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/footer/container/gl-shared-component-footer-container.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/footer/simple/gl-shared-component-footer-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/header/default/gl-shared-component-header-default.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/autocomplete/label/gl-shared-component-input-autocomplete-label.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/autocomplete/simple/gl-shared-component-input-autocomplete-simple.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/autocomplete/simple/gl-shared-component-input-autocomplete-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/button/simple/gl-shared-component-input-button-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/button/hyperlink/gl-shared-component-input-button-hyperlink.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/option/simple/gl-shared-component-input-option-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text/simple/gl-shared-component-input-text-simple.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text/simple/gl-shared-component-input-text-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text/label/button/container/gl-shared-component-input-text-label-button-container.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text/label/simple/gl-shared-component-input-text-label-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text-area/label/gl-shared-component-input-text-area-label.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text-area/simple/gl-shared-component-input-text-area-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/logo/square/gl-shared-component-logo-square.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/attachment/link/gl-shared-component-modal-attachment-link.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/alert/gl-shared-component-modal-alert.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/loading/gl-shared-component-modal-loading.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/loading/gl-shared-component-modal-loading.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/modal/header/gl-shared-component-modal-header.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/menu/background/gl-shared-component-menu-background.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/menu/gl-shared-component-menu.service.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/menu/item/gl-shared-component-menu-item.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/menu/gl-shared-component-menu.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/navigation/tab/simple/gl-shared-component-navigation-tab-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/navigation/tab/container/gl-shared-component-navigation-tab-container.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/title/label/simple/gl-shared-component-title-label-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/title/label/button/simple/gl-shared-component-title-label-button-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/title/label/button/container/gl-shared-component-title-label-button-container.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/title/page/gl-shared-component-title-page.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/datepicker/simple/day-month-year/gl-shared-component-input-datepicker-simple-day-month-year.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/paging/gl-shared-component-paging.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/datepicker/simple/month-year/gl-shared-component-input-datepicker-simple-month-year.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/datepicker/label/gl-shared-component-input-datepicker-label.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/switch/gl-shared-component-input-switch.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/text/simple/with-step/gl-shared-component-input-text-simple-with-step.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/list/item-remove/gl-shared-component-input-list-item-remove.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/list/item-up-down/gl-shared-component-input-list-item-up-down.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/check-box/simple/gl-shared-component-input-check-box-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/check-box/label/gl-shared-component-input-check-box-label.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/input/drag-and-drop/simple/gl-shared-component-input-drag-and-drop-simple.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/component/gl-component.module.ts","../../../projects/gl-ng-frontend/src/lib/shared/gl-shared.module.ts","../../../projects/gl-ng-frontend/src/lib/gl-ng-frontend.module.ts","../../../projects/gl-ng-frontend/src/lib/shared/view/error-message/gl-shared-view-error-message.component.ts","../../../projects/gl-ng-frontend/src/lib/shared/view/gl-shared-view.module.ts"],"names":["CoreDirectivesAutofocusDirective","elementRef","this","prototype","ngOnInit","nativeElement","focus","Directive","args","selector","ElementRef","CoreDirectivesDragAndDropDirective","fileDropped","EventEmitter","isReadOnly","event","target","classList","contains","onDragOver","preventDefault","stopPropagation","fileOver","fileNotOver","onDragLeader","onDrop","files","dataTransfer","length","emit","console","log","HostBinding","Output","HostListener","NgModule","declarations","exports","imports","CommonModule","GlSharedComponentAttachmentItemComponent","disabled","onItemClick","removeCurrentItem","editCurrentItem","removeItem","id","editItem","onButtonClick","e","Component","template","Input","GlSharedComponentModalAlertService","isOK","currentValue","Subject","show","message","modal","showYesNo","customYes","customNo","hide","onNo","next","resolvePromise","onYes","onOk","_this","Promise","resolve","modalClass","showModal","setTimeout","onModalKeyUp","key","Injectable","providedIn","GlSharedComponentAttachmentImagePreviewService","_alert","image","retrieveUpdate","labelIcons","buttons","src","alt","callback","addImage","removeImage","subscribe","data","trim","setImage","updateButtons","initialize","input","userImage","invalidSizeDescription","invalidFormatDescription","addImageButtonDescription","removeImageButtonDescription","_input","_accepts","AttachmentParser","parseAcceptFiles","attributes","accept","value","_userImage","_currentValue","oninput","onChange","isValid","AttachmentValidate","file","fileSize","AttachmentConvert","textFileToUrlImage","then","clearInput","maxSize","maxSizeStr","StringConverter","formatNumber","hasValue","img","resize","ImageResize","base64","style","backgroundImage","remove","click","init","GlSharedComponentAttachmentImagePreviewComponent","service","required","type","showLabel","requiredFieldDescription","addImageDescription","maxImageSize","currentValue$","ngAfterViewInit","fileInputImage","updateImage","currentImage","ViewChild","read","static","GlSharedComponentButtonAttachmentFileService","attachments","duplicatedDescription","attachmentIconSrc","_attachments","addAttachment","sizeValid","duplicated","name","icon","AttachmentIcon","get","new","url","GlSharedComponentButtonAttachmentFileComponent","maxFileSize","title","description","fileInput","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","rejected","result","done","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","push","Object","create","__values","o","s","m","i","__read","r","ar","error","__spread","arguments","concat","GlSharedComponentModalAttachmentLinkService","linkIcon","setup","onCancel","onConfirm","validData","_a","values","_name","_url","editing","editId","onName","currentTarget","onUrl","urlRegex","tempUrl","includes","validUrl","RegExp","test","edit","document","querySelector","verticalPosition","horizontalPosition","fullwidth","borderRadius","GlSharedComponentButtonInterfaceComponent","GlSharedComponentErrorMessageComponent","position","buttonAction$","buttonAction","GlSharedComponentFilterService","opened","menuHidden$","container","background","menuNavContainer","router","backgroundClick","close","open","applyPartialResult","add","isIE","scrollTop","scrollTo","top","behavior","GlSharedComponentFilterComponent","subtitle","closeButton","partialResultDescription","itemSingularDescription","itemPluralDescription","applyButtonDescription","clearButtonDescription","buttonClass","applyFilter$","clearFilter$","onApply","onClear","Router","imageDescription","GlSharedComponentHeaderDefaultComponent","systemLogo","keyDown","onKeyDown","GlSharedComponentInputAutocompleteLabelComponent","listItems","requiredField","onCurrentValue","GlSharedComponentInputAutocompleteSimpleService","autocompleteList$","autocompleteReset$","autocompleteLoaded$","autocompleteUpdateValue$","ngOnDestroy","observers","map","x","complete","GlSharedComponentInputAutocompleteSimpleComponent","_service","overlay","class","maxLength","_loaded","imageSource","clearSource","autocompleteInput","FormControl","update","listName","options","comboboxId","validate","loaded","filter","text","setValue","filteredOptions","valueChanges","pipe","startWith","filterValue","toLowerCase","option","filteredData","reset","auto","deselect","select","clearItems","arrowClick","ngOnChanges","changes","prevList","previousValue","currList","_b","prevValue","_c","currValue","_d","global","dispose","Overlay","readonly","GlSharedComponentInputOptionSimpleComponent","itemSelected","onCheck","checked","GlSharedComponentInputTextSimpleService","updateInputMask$","updateInputMask","GlSharedComponentInputTextSimpleComponent","autocomplete","decimalSeparator","allowMinus","rightAlign","onKeyUp","inputElement","applyInputMask","mask","placeholder","InputMask","currency","maskSymbol","integer","customNumberPhone","GlSharedComponentInputTextLabelButtonContainerComponent","requiredLabel","GlSharedComponentInputTextLabelSimpleComponent","GlSharedComponentInputTextAreaLabelComponent","GlSharedComponentInputTextAreaSimpleComponent","textArea","fileNameLabel","fileNamePlaceholder","linkPlaceholder","cancelInnerValue","innerValueNo","innerValueYes","innerValueOK","noValue","yesValue","okValue","GlSharedComponentModalLoadingService","_defaultMessage","defaultMessage","_loadingStatus","_showLoading","checkElement","_mainLoading","loadingInterval_1","setInterval","clearInterval","mainLoading","status","GlSharedComponentModalLoadingComponent","ngAfterViewChecked","GlSharedComponentMenuService","menuHidden","goToSettings","window","GlSharedComponentMenuItemComponent","_router","_menu","itemClass","menuLogo","$click","openAbsoluteLink","href","navigate","externalUrl","skipLocationChange","toggleActive","active","onClick","fragment","element","SmoothScroll","speed","speedAsDuration","easing","updateURL","popstate","animateScroll","animations","trigger","state","opacity","height","transform","transition","animate","GlSharedComponentMenuComponent","settingsTarget","menuBottomVersion","menuPosition","settingsButton","GlSharedComponentNavigationTabSimpleComponent","tabEnabled","activate$","activate","sequence","GlSharedComponentNavigationTabContainerComponent","activatedTab$","navigationTabs","tabHovering","hovering","tab","zIndex","toString","MAT_MOMENT_DATE_FORMATS","GlSharedComponentInputDatepickerSimpleDayMonthYearComponent","itemContentAlignment","dateFormat","clear","date","dateString","changed","DateGet","customDateNoUTC","customDateNoUTCString","providers","provide","MAT_DATE_LOCALE","useValue","DateAdapter","useClass","MomentDateAdapter","deps","MAT_MOMENT_DATE_ADAPTER_OPTIONS","MAT_DATE_FORMATS","ɵ0","GlSharedComponentPagingComponent","firstPageTitle","previousPageTitle","nextPageTitle","lastPageTitle","pageDescription","itemsPerPageDescriptions","pageSizeValue1","pageSizeValue2","pageSizeValue3","pageSizeValue4","pageSizeValue5","pageButtons","onPageChange$","setNumberOfItems$","setPage$","itemsPerPage","firstIcon","previousIcon","nextIcon","lastIcon","pageSize","innerValue","onPageChange","setNumberOfItems","items","setPage","page","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","GlSharedComponentInputDatepickerSimpleMonthYearComponent","currentDate","dateFormatString","startDate","chosenYearHandler","normalizedYear","ctrlValue","setFullYear","year","chosenMonthHandler","normalizedMonth","datepicker","setMonth","month","customDateString","ɵ0$1","GlSharedComponentInputDatepickerLabelComponent","labelAlignment","GlSharedComponentInputSwitchComponent","enabled","labelColor","showAsInputButton","active$","onContainerClick","GlSharedComponentInputTextSimpleWithStepComponent","convertValue","numberToPercentage","processValue","newValue","Number","isNaN","parsedValue","percentageToNumber","GlSharedComponentInputListItemRemoveComponent","showRemove","itemToRemove","GlSharedComponentInputListItemUpDownComponent","showUp","showDown","moveUpDown$","GlSharedComponentInputCheckBoxSimpleComponent","showBackground","checked$","onChecked","GlSharedComponentInputDragAndDropSimpleComponent","continueUploadLabel","$continueUploadActive","uploadButtonValue","readOnly","descriptionDragAndDrop","descriptionDragAndDropOr","descriptionDragAndDropClickHere","uploadIcon","invalidExtensionMessageSingular","invalidExtensionMessagePlural","duplicatedMessageSingular","duplicatedMessagePlural","invalidSizeMessageSingular","invalidSizeMessagePlural","invalidLengthMessageSingular","invalidLengthMessagePlural","maxNumberOfFiles","acceptFileType","$attachmentItems","$uploadClick","attachmentItems","fileNameList","list","entries","onFileDropped","fileList","duplicatedList","invalidFileList","invalidSizeList","invalidLengthList","validFile","fileArray","invalidSize","fileSizeFromArray","addItemToArray","showErrorMessage","arrayCopy","removeAttachment","removed","tempList","tempList_1","tempList_1_1","item","fileBrowserHandler","parsedAcceptList","separator","tempExtension","uploadClick","onContinueUpload","continueUpload","timeout","errorMessage","errorMessageTwoVariables","plural","arrayList","singularMessage","pluralMessage","fileNames","isPlural","singular","replace","firstVariable","isPluralComparator","GlSharedComponentButtonAttachmentLinkComponent","GlSharedComponentButtonImageSimpleComponent","GlSharedComponentButtonImageTooltipComponent","GlSharedComponentButtonMenuSimpleComponent","GlSharedComponentButtonMenuTooltipComponent","GlSharedComponentFilterContainerComponent","GlSharedComponentFooterContainerComponent","GlSharedComponentFooterSimpleComponent","GlSharedComponentInputButtonSimpleComponent","GlSharedComponentInputButtonHyperlinkComponent","GlSharedComponentLogoSquareComponent","GlSharedComponentModalAlertComponent","GlSharedComponentModalAttachmentLinkComponent","GlSharedComponentModalHeaderComponent","GlSharedComponentMenuBackgroundComponent","GlSharedComponentTitleLabelSimpleComponent","GlSharedComponentTitleLabelButtonSimpleComponent","GlSharedComponentTitleLabelButtonContainerComponent","GlSharedComponentTitlePageComponent","GlSharedComponentInputCheckBoxLabelComponent","GlCoreModule","RouterModule","MatFormFieldModule","MatInputModule","MatAutocompleteModule","MatDialogModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","OverlayModule","MatDatepickerModule","GlComponentModule","BrowserModule","HttpClientModule","GlSharedModule","GlSharedViewErrorMessageComponent","logoHorizontalPosition","logoVerticalPosition","errorPosition","errorButtonAction$","footerImageDescription","mainContainer","mainContainerParent","parentNode","blurBackground","errorButtonAction"],"mappings":"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,CAAC,CACR4B,aAAc,CACZI,EACA+F,EACA8B,EACAqc,EACAC,EACAC,EACArX,EACAsX,EACAC,EACAtX,EACAqB,EACAkW,EACAC,EACAC,EACArV,EACAI,EACAc,EACAoU,GACAC,GACAtR,GACAO,GACAe,GACAE,GACAE,GACAD,GACA8P,GACAC,GACAC,GACAC,GACAxO,GACAyO,GACApM,GACA/B,GACAoC,GACAK,GACA8B,GACA6J,GACAC,GACAC,GACAC,GACArL,GACAuD,GACAgB,GACAA,GACAE,GACAM,GACAS,GACAG,GACAI,GACAuF,GACAnF,IAEFpgB,QAAS,CACPC,EAAAA,aACAulB,EACAC,EAAAA,aACAC,EAAAA,mBACAC,EAAAA,eACAC,EAAAA,sBACAC,EAAAA,gBACAC,EAAAA,wBACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,cACAC,EAAAA,qBAEFnmB,QAAS,CACPG,EACA+F,EACAoe,EACAD,EACAE,EACArX,EACAsX,EACAC,EACAtX,EACAqB,EACAkW,EACAC,EACAC,EACArV,EACAI,EACAc,EACAoU,GACAC,GACAzE,GACA7M,GACA0B,GACAD,GACAH,GACAE,GACAjB,GACAgR,GACAI,GACApM,GACA/B,GACAgO,GACAC,GACAC,GACAxO,GACA0C,GACAK,GACA8B,GACAgK,GACAF,GACAC,GACAF,GACApd,EACAkS,GACAuD,GACAgB,GACAE,GACAM,GACAS,GACAG,GACAI,GACAuF,eC3KJ,kCAPC1lB,EAAAA,SAAQ3B,KAAA,CAAC,CACR4B,aAAc,GACdE,QAAS,CACPC,EAAAA,aACAkmB,eCaF,kCAbDtmB,EAAAA,SAAQ3B,KAAA,CAAC,CACR4B,aAAc,GACdE,QAAS,CACPomB,EAAAA,cACAC,EAAAA,iBACAL,EAAAA,oBACAM,GACAd,GAEFzlB,QAAS,GACT4a,UAAW,gECaX,SAAA4L,IAhBS3oB,KAAA4oB,uBAA2C,OAC3C5oB,KAAA6oB,qBAAyC,MAEzC7oB,KAAA8oB,cAAkC,OAIjC9oB,KAAA+oB,mBAAyC,IAAIpoB,EAAAA,aAK9CX,KAAAgpB,uBAAiC,oBAM1CL,EAAA1oB,UAAA6I,gBAAA,WACE,IAAMmgB,EAAgCjpB,KAAKipB,cAAc9oB,cACnD+oB,EAAsClpB,KAAKipB,cAAc9oB,cAAcgpB,WAE7EF,EAAcjhB,MAAMC,gBAAkB,OAAOjI,KAAK8P,WAAU,IAC5DoZ,EAAoBlhB,MAAMC,gBAAkB,OAAOjI,KAAKopB,eAAc,KAGxET,EAAA1oB,UAAAopB,kBAAA,WACErpB,KAAK+oB,mBAAmBpnB,kCAxC3BqB,EAAAA,UAAS1C,KAAA,CAAC,CACTC,SAAU,+BACV0C,SAAA,grDAICiG,EAAAA,UAAS5I,KAAA,CAAC,yCAEV4C,EAAAA,0BACAA,EAAAA,4BAEAA,EAAAA,4BACAA,EAAAA,sCACAA,EAAAA,oCACAA,EAAAA,6BAEAA,EAAAA,yBACAA,EAAAA,4BACAA,EAAAA,gCACAA,EAAAA,kCACAnB,EAAAA,sCAEAmB,EAAAA,mCACAA,EAAAA,iCACAA,EAAAA,sCACAA,EAAAA,8BACAA,EAAAA,0BACAA,EAAAA,gBCZH,kCAZCjB,EAAAA,SAAQ3B,KAAA,CAAC,CACR4B,aAAc,CACZymB,IAEFxmB,QAAS,CACPwmB,IAEFvmB,QAAS,CACPC,EAAAA,aACAkmB","sourcesContent":["import { Directive, ElementRef, OnInit } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[glAutoFocus]'\r\n})\r\nexport class CoreDirectivesAutofocusDirective implements OnInit {\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.elementRef.nativeElement.focus();\r\n  }\r\n}\r\n","import { Directive, EventEmitter, HostBinding, HostListener, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[glCoreDirectivesDragAndDrop]'\r\n})\r\nexport class CoreDirectivesDragAndDropDirective {\r\n  @HostBinding('class.file-over') fileOver: boolean;\r\n  @HostBinding('class.file-not-over') fileNotOver: boolean;\r\n  @Output() fileDropped: EventEmitter<any> = new EventEmitter();\r\n\r\n  private static isReadOnly(event): boolean {\r\n    return event.target.classList.contains('readonly');\r\n  }\r\n\r\n  @HostListener('dragover', ['$event']) onDragOver(event: DragEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const readonly = CoreDirectivesDragAndDropDirective.isReadOnly(event);\r\n\r\n    if (!readonly) {\r\n      this.fileOver = true;\r\n      this.fileNotOver = false;\r\n    } else {\r\n      this.fileOver = false;\r\n      this.fileNotOver = true;\r\n    }\r\n  }\r\n  @HostListener('dragleave', ['$event']) public onDragLeader(event: DragEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const readonly = CoreDirectivesDragAndDropDirective.isReadOnly(event);\r\n\r\n    if (!readonly) {\r\n      this.fileOver = false;\r\n      this.fileNotOver = true;\r\n    } else {\r\n      this.fileOver = false;\r\n      this.fileNotOver = true;\r\n    }\r\n  }\r\n  @HostListener('drop', ['$event']) public onDrop(event: DragEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const readonly = CoreDirectivesDragAndDropDirective.isReadOnly(event);\r\n\r\n    if (!readonly) {\r\n      this.fileOver = false;\r\n      this.fileNotOver = true;\r\n      const files = event.dataTransfer.files;\r\n\r\n      if (files.length > 0) {\r\n        // Do some stuff here\r\n        this.fileDropped.emit(files);\r\n        console.log(`You dropped ${files.length} files.`);\r\n      }\r\n    } else {\r\n      this.fileOver = false;\r\n      this.fileNotOver = true;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CoreDirectivesAutofocusDirective } from './directives/autofocus/core-directives-autofocus.directive';\r\nimport { CoreDirectivesDragAndDropDirective } from './directives/drag-and-drop/core-directives-drag-and-drop.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CoreDirectivesAutofocusDirective,\r\n    CoreDirectivesDragAndDropDirective\r\n  ],\r\n    exports: [\r\n        CoreDirectivesAutofocusDirective,\r\n        CoreDirectivesDragAndDropDirective\r\n    ],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class GlCoreModule { }\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-attachment-item',\r\n  templateUrl: './gl-shared-component-attachment-item.component.html',\r\n  styleUrls: ['./gl-shared-component-attachment-item.component.scss']\r\n})\r\nexport class GlSharedComponentAttachmentItemComponent {\r\n  @Input() disabled = false;\r\n  @Input() attachmentUrl: string;\r\n  @Input() fileName: string;\r\n  @Input() fileIcon: string;\r\n  @Input() id: number;\r\n  @Input() type: string;\r\n  @Input() addingSmooth: boolean;\r\n\r\n  @Output('onClick') onItemClick: EventEmitter<void> = new EventEmitter();\r\n  @Output() removeCurrentItem: EventEmitter<{ id: number }> = new EventEmitter();\r\n  @Output() editCurrentItem: EventEmitter<{ id: number }> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  removeItem(id: number) { this.removeCurrentItem.emit({ id }); }\r\n  editItem(id: number) { this.editCurrentItem.emit({ id }); }\r\n\r\n  onButtonClick(e: Event) {\r\n    e.preventDefault();\r\n    this.onItemClick.emit();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentModalAlertService {\r\n  message: string;\r\n  isOK = true;\r\n\r\n  showModal: boolean;\r\n  modalClass: string;\r\n  currentValue: Subject<boolean> = new Subject<boolean>();\r\n  resolvePromise;\r\n\r\n  customYes: string;\r\n  customNo: string;\r\n\r\n  constructor() {}\r\n\r\n  show(message) {\r\n    return this.modal(true, true, message);\r\n  }\r\n  showYesNo(message, customYes?: string, customNo?: string) {\r\n    this.customYes = customYes;\r\n    this.customNo = customNo;\r\n\r\n    return this.modal(true, false, message);\r\n  }\r\n\r\n  hide() {\r\n    this.modal(false, this.isOK, this.message);\r\n  }\r\n\r\n  onNo() {\r\n    this.currentValue.next(false);\r\n    this.resolvePromise(false);\r\n    this.hide();\r\n  }\r\n  onYes() {\r\n    this.currentValue.next(true);\r\n    this.resolvePromise(true);\r\n    this.hide();\r\n  }\r\n  onOk() {\r\n    this.currentValue.next(true);\r\n    this.resolvePromise(true);\r\n    this.hide();\r\n  }\r\n\r\n  private modal(show: boolean, isOK: boolean = true, message: string = '') {\r\n    return new Promise(resolve => {\r\n      this.resolvePromise = resolve;\r\n      this.isOK = isOK;\r\n      this.message = message;\r\n\r\n      if (show) {\r\n        this.modalClass = 'hide-modal';\r\n        this.showModal = show;\r\n        this.modalClass = 'show-modal';\r\n      } else {\r\n        this.modalClass = 'hide-modal';\r\n        setTimeout(() => {\r\n          this.showModal = false;\r\n          this.message = '';\r\n          this.customYes = null;\r\n          this.customNo = null;\r\n        }, 300);\r\n      }\r\n    });\r\n  }\r\n\r\n  onModalKeyUp(e: KeyboardEvent) {\r\n    if (e.key === 'Enter') {\r\n      if (this.isOK) { this.onOk(); } else { this.onYes(); }\r\n    } else if (e.key === 'Escape') {\r\n      if (this.isOK) { this.onOk(); } else { this.onNo(); }\r\n    }\r\n  }\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { AttachmentConvert, AttachmentParser, AttachmentValidate, ImageResize, StringConverter } from 'gl-w-frontend';\r\n\r\nimport { IImageButtonTooltip } from '../../../button/image/tooltip/gl-shared-component-button-image-tooltip.interface';\r\nimport { GlSharedComponentModalAlertService } from '../../../modal/alert/gl-shared-component-modal-alert.service';\r\nimport { IImageString, IImageUpdate } from './gl-shared-component-attachment-image-preview.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentAttachmentImagePreviewService {\r\n  private readonly image = '../assets/img/icon/image/image-template.svg';\r\n\r\n  retrieveUpdate: Subject<IImageUpdate> = new Subject();\r\n  labelIcons = '../assets/img/icon/label/';\r\n\r\n  buttons: IImageButtonTooltip[] = [\r\n    {\r\n      src: `${this.labelIcons}image.svg`,\r\n      id: 'add-image-from-label',\r\n      alt: 'Add image',\r\n      show: true, callback: () => {\r\n        this.addImage();\r\n      }\r\n    },\r\n    {\r\n      src: `${this.labelIcons}remove-image.svg`,\r\n      id: 'clear-image-from-label',\r\n      alt: 'Remove image',\r\n      show: false,\r\n      callback: () => {\r\n        this.removeImage();\r\n      }\r\n    },\r\n  ];\r\n\r\n  private _accepts: string[];\r\n  private _input: HTMLInputElement;\r\n  private _userImage: HTMLDivElement;\r\n  private _currentValue: EventEmitter<IImageString>;\r\n\r\n  constructor(private _alert: GlSharedComponentModalAlertService) {\r\n    this.retrieveUpdate.subscribe((data) => {\r\n      if (data.image != null && data.image.trim().length > 0) {\r\n        this.setImage(data);\r\n        this.updateButtons(true);\r\n      } else {\r\n        this.setImage({ image: '' });\r\n        this.updateButtons(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  initialize(input: HTMLInputElement, userImage: HTMLDivElement, currentValue: EventEmitter<IImageString>,\r\n             invalidSizeDescription: string, invalidFormatDescription: string, addImageButtonDescription: string, removeImageButtonDescription: string) {\r\n    this._input = input;\r\n    this._accepts = AttachmentParser.parseAcceptFiles((input.attributes as any).accept.value);\r\n    this._userImage = userImage;\r\n    this._currentValue = currentValue;\r\n\r\n    setTimeout(() => {\r\n      this.buttons[0].alt = addImageButtonDescription;\r\n      this.buttons[1].alt = removeImageButtonDescription;\r\n    }, 100);\r\n\r\n    this._input.oninput = () => { this.onChange(invalidSizeDescription, invalidFormatDescription); };\r\n    this.removeImage(true);\r\n  }\r\n\r\n  onChange(invalidSizeDescription: string, invalidFormatDescription: string) {\r\n    const isValid = AttachmentValidate.file(this._input, this._accepts);\r\n    const sizeValid = AttachmentValidate.fileSize(this._input);\r\n\r\n    if (!sizeValid) {\r\n      const maxSize: number = AttachmentValidate.maxSize(this._input);\r\n      const maxSizeStr = StringConverter.formatNumber(maxSize);\r\n      this._alert.show(`${invalidSizeDescription} ${maxSizeStr}KB`).then(() => {});\r\n      return;\r\n    }\r\n\r\n    if (isValid) {\r\n      AttachmentConvert.textFileToUrlImage(this._input.files[0]).then((image: string) => {\r\n        this.setImage({ image });\r\n        this._currentValue.emit({ value: image });\r\n        this.updateButtons(true);\r\n        this.clearInput();\r\n      });\r\n    } else {\r\n      this.clearInput();\r\n      this._alert.show(invalidFormatDescription).then(() => {});\r\n    }\r\n  }\r\n\r\n  clearInput() {\r\n    this._input.value = null;\r\n  }\r\n\r\n  updateButtons(hasValue: boolean) {\r\n    this.buttons[0].show = !hasValue;\r\n    this.buttons[1].show = hasValue;\r\n  }\r\n\r\n  setImage(data: IImageUpdate) {\r\n    const img = data.resize ? ImageResize.base64(data) : data.image;\r\n\r\n    this._userImage.style.backgroundImage = `url(\"${img}\")`;\r\n    this._userImage.classList.remove('required-fill');\r\n  }\r\n\r\n  addImage() {\r\n    this._input.click();\r\n  }\r\n\r\n  removeImage(init?: boolean) {\r\n    this.clearInput();\r\n    this.setImage({ image: this.image });\r\n\r\n    if (!init) {\r\n      this._currentValue.emit({ value: null });\r\n      this.updateButtons(false);\r\n    }\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { GlSharedComponentAttachmentImagePreviewService } from './gl-shared-component-attachment-image-preview.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-attachment-image-preview',\r\n  templateUrl: './gl-shared-component-attachment-image-preview.component.html',\r\n  styleUrls: ['./gl-shared-component-attachment-image-preview.component.scss']\r\n})\r\nexport class GlSharedComponentAttachmentImagePreviewComponent implements AfterViewInit{\r\n  @ViewChild('fileInputImage', { read: ElementRef, static: true }) fileInputImage: ElementRef<HTMLInputElement>;\r\n  @ViewChild('userImage', { read: ElementRef, static: true }) userImage: ElementRef<HTMLDivElement>;\r\n\r\n  @Input() disabled = false;\r\n  @Input() currentImage;\r\n  @Input() required = false;\r\n  @Input() type: 'light' | 'dark' | '' = '';\r\n  @Input() showLabel: boolean = true;\r\n  @Input() requiredFieldDescription: string = 'Required field';\r\n  @Input() addImageDescription: string = 'Click to add an image';\r\n  @Input() maxImageSize: string = '10240';\r\n  @Input() invalidSizeDescription: string = 'Invalid file size. The max allowed size is';\r\n  @Input() invalidFormatDescription: string = 'Invalid file format!';\r\n  @Input() addImageButtonDescription: string = 'Add image';\r\n  @Input() removeImageButtonDescription: string = 'Remove image';\r\n\r\n  @Output() currentValue$ = new EventEmitter();\r\n\r\n  constructor(public service: GlSharedComponentAttachmentImagePreviewService) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.service.initialize(\r\n      this.fileInputImage.nativeElement,\r\n      this.userImage.nativeElement,\r\n      this.currentValue$,\r\n      this.invalidSizeDescription,\r\n      this.invalidFormatDescription,\r\n      this.addImageButtonDescription,\r\n      this.removeImageButtonDescription\r\n    );\r\n\r\n    this.updateImage();\r\n  }\r\n\r\n  updateImage() {\r\n    if (this.currentImage != null && this.currentImage.length > 0) {\r\n      this.service.setImage(this.currentImage);\r\n    }\r\n  }\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { GlSharedComponentModalAlertService } from '../../../modal/alert/gl-shared-component-modal-alert.service';\r\nimport { AttachmentIcon, AttachmentParser, AttachmentValidate, StringConverter } from 'gl-w-frontend';\r\nimport { IAttachmentData } from 'gl-sp-frontend';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentButtonAttachmentFileService {\r\n  private _input: HTMLInputElement;\r\n  private _accepts: string[];\r\n  private _currentValue: EventEmitter<IAttachmentData>;\r\n  private _attachments: IAttachmentData[];\r\n\r\n  constructor(\r\n    public _alert: GlSharedComponentModalAlertService\r\n  ) { }\r\n\r\n  initialize(input: HTMLInputElement, currentValue: EventEmitter<IAttachmentData>, attachments: IAttachmentData[],\r\n             duplicatedDescription: string, invalidSizeDescription: string, invalidFormatDescription: string, attachmentIconSrc: string) {\r\n    this._input = input;\r\n    this._currentValue = currentValue;\r\n    this._attachments = attachments;\r\n\r\n    // Todo Block specif files\r\n    const accept = (input.attributes as any).accept.value;\r\n    // tslint:disable-next-line:triple-equals\r\n    this._accepts = accept == null || accept == 'undefined' || accept === '' ? ['*'] : AttachmentParser.parseAcceptFiles((input.attributes as any).accept.value);\r\n    this._input.oninput = () => { this.onChange(duplicatedDescription, invalidSizeDescription, invalidFormatDescription, attachmentIconSrc); };\r\n  }\r\n\r\n  addAttachment() {\r\n    this._input.click();\r\n  }\r\n  onChange(duplicatedDescription: string, invalidSizeDescription: string, invalidFormatDescription: string, attachmentIconSrc: string) {\r\n    const isValid = AttachmentValidate.file(this._input, this._accepts);\r\n    const sizeValid = AttachmentValidate.fileSize(this._input);\r\n    const duplicated = AttachmentValidate.duplicated(this._input.files[0].name, this._attachments);\r\n\r\n    if (duplicated) {\r\n      this.clearInput();\r\n      this._alert.show(duplicatedDescription).then(() => {});\r\n      return;\r\n    } else if (!sizeValid) {\r\n      const maxSize: number = AttachmentValidate.maxSize(this._input);\r\n      const maxSizeStr: string = StringConverter.formatNumber(maxSize);\r\n      this.clearInput();\r\n      this._alert.show(`${invalidSizeDescription}: ${maxSizeStr}KB`).then(() => {});\r\n      return;\r\n    } else if (!isValid) {\r\n      this.clearInput();\r\n      this._alert.show(invalidFormatDescription).then(() => {});\r\n    } else {\r\n      const file: IAttachmentData = {\r\n        name: this._input.files[0].name,\r\n        file: this._input.files[0],\r\n        icon: AttachmentIcon.get(this._input.files[0].name, attachmentIconSrc),\r\n        new: true,\r\n        url: '',\r\n        remove: false,\r\n        id: this._attachments.length\r\n      };\r\n\r\n      this.clearInput();\r\n      this._currentValue.emit(file);\r\n    }\r\n  }\r\n\r\n  clearInput() {\r\n    this._input.value = null;\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { GlSharedComponentButtonAttachmentFileService } from './gl-shared-component-button-attachment-file.service';\r\nimport { IAttachmentData } from \"gl-sp-frontend\";\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-attachment-file',\r\n  templateUrl: './gl-shared-component-button-attachment-file.component.html',\r\n  styleUrls: ['./gl-shared-component-button-attachment-file.component.scss']\r\n})\r\nexport class GlSharedComponentButtonAttachmentFileComponent implements AfterViewInit {\r\n  @ViewChild('fileInput', { read: ElementRef, static: true }) fileInput: ElementRef<HTMLInputElement>;\r\n\r\n  /**\r\n   * @param maxFileSize Size in KB.\r\n   * @param attachmentIconSrc (Optional) In case the source is not informed, the default path will be the one in gl-w-frontend package.\r\n   */\r\n  @Input() maxFileSize: string = '46080';\r\n  @Input() accept: string[];\r\n  @Input() title: string = 'Click to add an attachment';\r\n  @Input() icon: string = '../assets/img/icon/attachment/attachment.svg';\r\n  @Input() attachmentIconSrc: string;\r\n  @Input() description: string = 'Add attachment';\r\n  @Input() attachments: IAttachmentData[] = [];\r\n  @Input() duplicatedDescription: string = 'File duplicated. Please, add another file!';\r\n  @Input() invalidSizeDescription: string = 'Invalid file size. The max allowed size is';\r\n  @Input() invalidFormatDescription: string = 'Invalid file format!';\r\n\r\n  @Output() currentValue$: EventEmitter<IAttachmentData> = new EventEmitter();\r\n\r\n  constructor(public service: GlSharedComponentButtonAttachmentFileService) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.service.initialize(\r\n      this.fileInput.nativeElement,\r\n      this.currentValue$,\r\n      this.attachments,\r\n      this.duplicatedDescription,\r\n      this.invalidSizeDescription,\r\n      this.invalidFormatDescription,\r\n      this.attachmentIconSrc\r\n    );\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { GlSharedComponentModalAlertService } from '../../alert/gl-shared-component-modal-alert.service';\r\nimport { IAttachmentLink } from './gl-shared-component-modal-attachment-link.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentModalAttachmentLinkService {\r\n  name: HTMLInputElement;\r\n  url: HTMLInputElement;\r\n  linkIcon = '../assets/img/icon/attachment/link.svg';\r\n\r\n  showModal = false;\r\n  modalClass: string;\r\n  currentValue: Subject<IAttachmentLink> = new Subject();\r\n\r\n  editing: boolean;\r\n  editId: number;\r\n\r\n  private _name: string;\r\n  private _url: string;\r\n\r\n  constructor(private _alert: GlSharedComponentModalAlertService) { }\r\n\r\n  setup(name: HTMLInputElement, url: HTMLInputElement) {\r\n    this.name = name;\r\n    this.url = url;\r\n  }\r\n\r\n  onCancel() {\r\n    this.modal(false);\r\n  }\r\n\r\n  async onConfirm() {\r\n    if (await this.validData()) {\r\n      const values = {\r\n        name: this._name,\r\n        url: this._url,\r\n        icon: this.linkIcon,\r\n        editing: this.editing,\r\n        editId: this.editId\r\n      };\r\n\r\n      this.currentValue.next(values);\r\n      this.modal(false);\r\n    }\r\n  }\r\n\r\n  onName(e: Event) {\r\n    this._name = (e.currentTarget as HTMLInputElement).value;\r\n  }\r\n\r\n  onUrl(e: Event) {\r\n    this._url = (e.currentTarget as HTMLInputElement).value;\r\n  }\r\n\r\n  async validData() {\r\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\n    const tempUrl = this._url != null && !this._url.includes('http://') && !this._url.includes('https://') ? `http://${this._url}` : this._url;\r\n    const validUrl = new RegExp(urlRegex).test(tempUrl);\r\n\r\n    if (this._name == null || this._name.trim().length === 0) {\r\n      await this._alert.show('Por favor, informe o nome do arquivo!');\r\n      return false;\r\n    } else if (this._url == null || this._url.trim().length === 0) {\r\n      await this._alert.show('Por favor, informe o url do arquivo!');\r\n      return false;\r\n    } else if (!validUrl) {\r\n      await this._alert.show('Por favor, informe um url válido!');\r\n    } else {\r\n      this._url = tempUrl;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  modal(show) {\r\n    this.editing = false;\r\n    this.editId = null;\r\n\r\n    if (show) {\r\n      this.modalClass = 'hide-modal';\r\n      this.showModal = true;\r\n      this.modalClass = 'show-modal';\r\n\r\n    } else {\r\n      this.modalClass = 'hide-modal';\r\n      setTimeout(() => {\r\n        this.showModal = false;\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  edit(name: string, url: string, editId: number) {\r\n    this.modal(true);\r\n    this.editing = true;\r\n    this.editId = editId;\r\n\r\n    setTimeout(() => {\r\n      this.name = document.querySelector('#attachment-link-name');\r\n      this.url = document.querySelector('#attachment-link-value');\r\n\r\n      this._name = name;\r\n      this.name.value = name;\r\n      this._url = url;\r\n      this.url.value = url;\r\n    }, 100);\r\n  }\r\n\r\n  onModalKeyUp(e: KeyboardEvent) {\r\n    if (e.key === 'Enter') {\r\n      return this.onConfirm();\r\n    } else if (e.key === 'Escape') {\r\n      this.onCancel();\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { GlSharedComponentModalAttachmentLinkService } from '../../../modal/attachment/link/gl-shared-component-modal-attachment-link.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-attachment-link',\r\n  templateUrl: './gl-shared-component-button-attachment-link.component.html',\r\n  styleUrls: ['./gl-shared-component-button-attachment-link.component.scss']\r\n})\r\nexport class GlSharedComponentButtonAttachmentLinkComponent {\r\n\r\n  constructor(public service: GlSharedComponentModalAttachmentLinkService) { }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-image-simple',\r\n  templateUrl: './gl-shared-component-button-image-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-button-image-simple.component.scss']\r\n})\r\nexport class GlSharedComponentButtonImageSimpleComponent {\r\n  @Input() id;\r\n  @Input() alt;\r\n  @Input() src;\r\n  @Input() callback: () => void;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport {\r\n  TButtonToolTipBorder,\r\n  TButtonToolTipHorizontalPosition,\r\n  TButtonToolTipVerticalPosition, TButtonToolTipWidth\r\n} from './gl-shared-component-button-image-tooltip.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-image-tooltip',\r\n  templateUrl: './gl-shared-component-button-image-tooltip.component.html',\r\n  styleUrls: ['./gl-shared-component-button-image-tooltip.component.scss']\r\n})\r\nexport class GlSharedComponentButtonImageTooltipComponent {\r\n  @Input() id;\r\n  @Input() alt;\r\n  @Input() src;\r\n  @Input() show = true;\r\n  @Input() callback: () => void;\r\n\r\n  @Input() verticalPosition: TButtonToolTipVerticalPosition = 'top';\r\n  @Input() horizontalPosition: TButtonToolTipHorizontalPosition = 'center';\r\n  @Input() fullwidth: TButtonToolTipWidth = 'default';\r\n  @Input() borderRadius: TButtonToolTipBorder = 'default';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-interface',\r\n  templateUrl: './gl-shared-component-button-interface.component.html',\r\n  styleUrls: ['./gl-shared-component-button-interface.component.scss']\r\n})\r\nexport class GlSharedComponentButtonInterfaceComponent implements OnInit {\r\n  @Input() innerHtml: string;\r\n  @Input() buttonClick: () => void;\r\n  @Input() imageSrc: string;\r\n  @Input() imageAlt: string;\r\n  @Input() id: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-menu-simple',\r\n  templateUrl: './gl-shared-component-button-menu-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-button-menu-simple.component.scss']\r\n})\r\nexport class GlSharedComponentButtonMenuSimpleComponent {\r\n  @Input() disabled = false;\r\n  @Input() hide = false;\r\n  @Input() src: string;\r\n  @Input() id: string;\r\n  @Input() alt: string;\r\n  @Input() callback: () => {};\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-button-menu-tooltip',\r\n  templateUrl: './gl-shared-component-button-menu-tooltip.component.html',\r\n  styleUrls: ['./gl-shared-component-button-menu-tooltip.component.scss']\r\n})\r\nexport class GlSharedComponentButtonMenuTooltipComponent {\r\n  @Input() disabled = false;\r\n  @Input() hide = false;\r\n  @Input() tooltip: string;\r\n  @Input() src: string;\r\n  @Input() id: string;\r\n  @Input() alt: string;\r\n  @Input() callback;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-error-message',\r\n  templateUrl: './gl-shared-component-error-message.component.html',\r\n  styleUrls: ['./gl-shared-component-error-message.component.scss']\r\n})\r\nexport class GlSharedComponentErrorMessageComponent {\r\n  @Input() position: 'left' | 'right' = 'left';\r\n  @Input() errorCode: string | number;\r\n  @Input() errorMessage: string;\r\n  @Input() buttonLabel: string;\r\n  @Output() buttonAction$: EventEmitter<void> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  buttonAction(): void {\r\n    this.buttonAction$.emit();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentFilterService {\r\n  container: HTMLDivElement;\r\n  background: HTMLDivElement;\r\n  menuNavContainer: HTMLDivElement;\r\n  opened: boolean = false;\r\n\r\n  menuHidden$: Subject<boolean> = new Subject();\r\n  router: Router;\r\n\r\n  isIE: boolean;\r\n  applyPartialResult: () => Promise<void>;\r\n\r\n\r\n  constructor() { }\r\n\r\n  initialize(\r\n    container: HTMLDivElement,\r\n    background: HTMLDivElement,\r\n    menuNavContainer: HTMLDivElement,\r\n    router: Router,\r\n  ) {\r\n    this.container = container;\r\n    this.background = background;\r\n    this.menuNavContainer = menuNavContainer;\r\n    this.router = router;\r\n    this.menuHidden$.next(true);\r\n  }\r\n\r\n  backgroundClick(event) {\r\n    if (this.opened) { this.close(event); }\r\n  }\r\n  open(event: Event) {\r\n    event.preventDefault();\r\n    this.applyPartialResult;\r\n    this.container.classList.add('menu-active');\r\n    this.background.classList.add('visible-background');\r\n\r\n    setTimeout(() => {\r\n      if (this.isIE) {\r\n        this.menuNavContainer.scrollTop = 0;\r\n      } else {\r\n        this.menuNavContainer.scrollTo({ top: 0, behavior: 'smooth' });\r\n      }\r\n    }, 100);\r\n\r\n    this.menuHidden$.next(false);\r\n    this.opened = true;\r\n    return true;\r\n  }\r\n  close(event: Event) {\r\n    event.preventDefault();\r\n    this.container.classList.remove('menu-active');\r\n    this.background.classList.remove('visible-background');\r\n\r\n    this.menuHidden$.next(true);\r\n    this.opened = false;\r\n    return false;\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { GlSharedComponentFilterService } from './gl-shared-component-filter.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-filter',\r\n  templateUrl: './gl-shared-component-filter.component.html',\r\n  styleUrls: ['./gl-shared-component-filter.component.scss']\r\n})\r\nexport class GlSharedComponentFilterComponent implements AfterViewInit {\r\n  @ViewChild('container', { static: true, read: ElementRef }) container: ElementRef<HTMLDivElement>;\r\n  @ViewChild('background', { static: true, read: ElementRef }) background: ElementRef<HTMLDivElement>;\r\n  @ViewChild('menuNavContainer') menuNavContainer: ElementRef<HTMLDivElement>;\r\n\r\n  @Input() title: string;\r\n  @Input() subtitle: string = 'Filter';\r\n  @Input() type: 'translucid' | '' = '';\r\n  @Input() closeButton: string = '../assets/img/icon/menu/close.svg';\r\n  @Input() partialResult: number;\r\n  @Input() partialResultDescription: string = 'Partial results with these filters:';\r\n  @Input() itemSingularDescription: string = 'item';\r\n  @Input() itemPluralDescription: string = 'items';\r\n  @Input() applyButtonDescription: string = 'Apply filter';\r\n  @Input() clearButtonDescription: string = 'Clear filter';\r\n  @Input() buttonClass: 'light-translucid' | '' = 'light-translucid';\r\n\r\n  @Input() isIE: boolean = false;\r\n  @Input() applyPartialResult: () => Promise<void>;\r\n\r\n  @Output() applyFilter$: EventEmitter<void> = new EventEmitter();\r\n  @Output() clearFilter$: EventEmitter<void> = new EventEmitter();\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public service: GlSharedComponentFilterService\r\n  ) {\r\n    service.applyPartialResult = this.applyPartialResult;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.service.initialize(\r\n      this.container.nativeElement,\r\n      this.background.nativeElement,\r\n      this.menuNavContainer.nativeElement,\r\n      this.router\r\n    );\r\n  }\r\n\r\n  onApply() {\r\n    this.applyFilter$.emit();\r\n  }\r\n\r\n  onClear() {\r\n    this.clearFilter$.emit();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-filter-container',\r\n  templateUrl: './gl-shared-component-filter-container.component.html',\r\n  styleUrls: ['./gl-shared-component-filter-container.component.scss']\r\n})\r\nexport class GlSharedComponentFilterContainerComponent {\r\n  @Input() label: string;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-footer-container',\r\n  templateUrl: './gl-shared-component-footer-container.component.html',\r\n  styleUrls: ['./gl-shared-component-footer-container.component.scss']\r\n})\r\nexport class GlSharedComponentFooterContainerComponent {\r\n  @Input() description: string;\r\n  @Input() imageLogo: string;\r\n  @Input() imageDescription: string = 'Image logo';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-footer-simple',\r\n  templateUrl: './gl-shared-component-footer-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-footer-simple.component.scss']\r\n})\r\nexport class GlSharedComponentFooterSimpleComponent {\r\n  @Input() description: string;\r\n  @Input() imageLogo: string;\r\n  @Input() imageDescription: string = 'Image logo';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { IMenuButton } from '../../button/menu/simple/gl-shared-component-button-menu-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-header-default',\r\n  templateUrl: './gl-shared-component-header-default.component.html',\r\n  styleUrls: ['./gl-shared-component-header-default.component.scss']\r\n})\r\nexport class GlSharedComponentHeaderDefaultComponent {\r\n  @Input() systemLogo: boolean = false;\r\n  @Input() labelModel: string;\r\n  @Input() labelId: number;\r\n  @Input() labelArea: string;\r\n  @Input() type: 'only-buttons' | 'light' | 'inverted' | 'dark-translucid' | 'light-translucid' | '';\r\n  @Input() title: string;\r\n  @Input() subtitle: string;\r\n  @Input() menuButtons: IMenuButton[];\r\n  @Output() keyDown: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Input() readonly: boolean;\r\n\r\n  constructor() { }\r\n\r\n  onKeyDown(event) {\r\n    this.keyDown.emit(event);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { IComboBoxData } from \"gl-w-frontend\";\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-autocomplete-label',\r\n  templateUrl: './gl-shared-component-input-autocomplete-label.component.html',\r\n  styleUrls: ['./gl-shared-component-input-autocomplete-label.component.scss']\r\n})\r\nexport class GlSharedComponentInputAutocompleteLabelComponent {\r\n\r\n  @Output() currentValue = new EventEmitter();\r\n  @Input() listItems: IComboBoxData[] = [];\r\n\r\n  @Input() disabled = false;\r\n  @Input() listName: string;\r\n  @Input() id: string;\r\n  @Input() labelValue: string;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment | '';\r\n  @Input() class: string;\r\n  @Input() value;\r\n  @Input() required: boolean;\r\n\r\n  @Input() custom: boolean;\r\n  @Input() baseUrl: string;\r\n\r\n  @Input() valueField: string;\r\n  @Input() textField: string;\r\n  @Input() requiredField = 'Required field';\r\n\r\n  constructor() {}\r\n\r\n  onCurrentValue(value) { this.currentValue.emit(value); }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { IResetAutocompleteValue, ISetAutocompleteValue, IUpdateOptionList\r\n} from './gl-shared-component-input-autocomplete-simple.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentInputAutocompleteSimpleService implements OnDestroy {\r\n  autocompleteList$: Subject<IUpdateOptionList> = new Subject();\r\n  autocompleteReset$: Subject<IResetAutocompleteValue> = new Subject();\r\n  autocompleteLoaded$: Subject<boolean> = new Subject();\r\n  autocompleteUpdateValue$: Subject<ISetAutocompleteValue> = new Subject();\r\n\r\n  constructor() {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.autocompleteList$.observers.map(x => x.complete());\r\n    this.autocompleteLoaded$.observers.map(x => x.complete());\r\n    this.autocompleteReset$.observers.map(x => x.complete());\r\n    this.autocompleteUpdateValue$.observers.map(x => x.complete());\r\n  }\r\n}\r\n","import { Overlay } from '@angular/cdk/overlay';\r\nimport { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MatAutocomplete } from '@angular/material/autocomplete';\r\nimport { IComboBoxData } from 'gl-w-frontend';\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { GlSharedComponentInputAutocompleteSimpleService } from './gl-shared-component-input-autocomplete-simple.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-autocomplete-simple',\r\n  templateUrl: './gl-shared-component-input-autocomplete-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-autocomplete-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputAutocompleteSimpleComponent implements OnInit, OnDestroy, OnChanges {\r\n  @ViewChild('input') input: ElementRef<HTMLInputElement>;\r\n\r\n  @Output() currentValue = new EventEmitter<IComboBoxData>();\r\n  @Input() listItems: IComboBoxData[] = [];\r\n\r\n  @Input() disabled: boolean;\r\n  @Input() listName: string;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment | '';\r\n  @Input() class = '';\r\n  @Input() value: string;\r\n  @Input() maxLength = '255';\r\n\r\n  @Input() custom: boolean;\r\n  @Input() baseUrl: string;\r\n\r\n  @Input() valueField: string;\r\n  @Input() textField: string;\r\n\r\n  @Input() labelValue: string;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() required: boolean;\r\n  @Input() requiredField: string;\r\n\r\n  private _loaded = false;\r\n  readonly imageSource = '../assets/img/icon/drop-down/arrow-down.svg';\r\n  readonly clearSource = '../assets/img/icon/drop-down/clear.svg';\r\n  autocompleteInput = new FormControl();\r\n  filteredOptions: Observable<IComboBoxData[]>;\r\n\r\n  constructor(private _service: GlSharedComponentInputAutocompleteSimpleService, public overlay: Overlay) {\r\n    _service.autocompleteList$.subscribe(update => {\r\n      if (this.listName === update.listName) {\r\n        this.listItems = update.options;\r\n        this.setup();\r\n      }\r\n    });\r\n    _service.autocompleteReset$.subscribe(update => {\r\n      if (this.id === update.comboboxId) {\r\n        this.input.nativeElement.value = '';\r\n        this.validate();\r\n      }\r\n    });\r\n    _service.autocompleteLoaded$.subscribe(loaded => {\r\n      this._loaded = loaded;\r\n      _service.autocompleteLoaded$.observers.map(x => x.complete());\r\n    });\r\n    _service.autocompleteUpdateValue$.subscribe(update => {\r\n      if (this.id === update.comboboxId) {\r\n        this.listItems = update.options;\r\n        const value = update.options.filter(x => x.value === update.value);\r\n        const input = this.input.nativeElement;\r\n\r\n        if (value != null && value.length > 0) {\r\n          input.value = value[0].text;\r\n          this.autocompleteInput.setValue(value[0].text);\r\n          this.value = value[0].value;\r\n          this.setup();\r\n        } else {\r\n          input.value = '';\r\n          this.autocompleteInput.setValue('');\r\n          this.value = '';\r\n          this.setup();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.setup();\r\n  }\r\n\r\n  private setup() {\r\n    this.filteredOptions = this.autocompleteInput.valueChanges.pipe(\r\n      startWith(''),\r\n      // startWith(this.value),\r\n      map(value => this.filter(value))\r\n    );\r\n\r\n    // if (!this._loaded) { this.autocompleteInput.setValue(this.value); }\r\n    // this.autocompleteInput.setValue(this.value);\r\n    setTimeout(() => { this.validate(); });\r\n  }\r\n  private filter(value: string): IComboBoxData[] {\r\n    if (value == null) { value = ''; }\r\n\r\n    const filterValue = value.toLowerCase();\r\n    return this.listItems.filter(option => option.text?.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  validate() {\r\n    const input: HTMLInputElement = this.input.nativeElement;\r\n    const value: string = input.value;\r\n    const filteredData = this.filter(value);\r\n\r\n    if (value != null && value.trim().length > 0 && filteredData.length > 0) {\r\n      input.value = filteredData[0].text;\r\n      this.autocompleteInput.setValue(filteredData[0].text);\r\n      this.currentValue.emit({ text: filteredData[0].text, value: filteredData[0].value });\r\n    } else {\r\n      input.value = '';\r\n      this.autocompleteInput.setValue('');\r\n      this.currentValue.emit({ text: null, value: null });\r\n    }\r\n  }\r\n\r\n  reset(auto: MatAutocomplete, event: Event) {\r\n    if (auto.options != null) { auto.options.map(option => option.deselect()); }\r\n    (event.currentTarget as HTMLInputElement).select();\r\n  }\r\n\r\n  clearItems(input: HTMLInputElement) {\r\n    input.value = null;\r\n    this.autocompleteInput.setValue(null);\r\n    this.currentValue.emit({ text: null, value: null });\r\n    setTimeout(() => {\r\n      input.click();\r\n    }, 100);\r\n  }\r\n\r\n  arrowClick() {\r\n    this.autocompleteInput.reset();\r\n    this.autocompleteInput.setValue('');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._service.autocompleteList$.observers.map(x => x.complete());\r\n    this._service.autocompleteReset$.observers.map(x => x.complete());\r\n    this._service.autocompleteLoaded$.observers.map(x => x.complete());\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const prevList = changes.listItems?.previousValue;\r\n    const currList = changes.listItems?.currentValue;\r\n\r\n    const prevValue = changes.value?.previousValue;\r\n    const currValue = changes.value?.currentValue;\r\n\r\n    // tslint:disable-next-line:triple-equals\r\n    if (prevList != currList) { this.setup(); }\r\n    // tslint:disable-next-line:triple-equals\r\n    if (prevValue != currValue) { this.setup(); }\r\n\r\n    this.overlay.position().global().dispose();\r\n\r\n    // if (prevList != currList || prevValue != currValue) { this.setup(); }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-button-simple',\r\n  templateUrl: './gl-shared-component-input-button-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-button-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputButtonSimpleComponent {\r\n  @Input() value: string;\r\n  @Input() class: string;\r\n  @Input() innerValue: string;\r\n  @Input() readonly = false;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-button-hyperlink',\r\n  templateUrl: './gl-shared-component-input-button-hyperlink.component.html',\r\n  styleUrls: ['./gl-shared-component-input-button-hyperlink.component.scss']\r\n})\r\nexport class GlSharedComponentInputButtonHyperlinkComponent {\r\n  @Input() imageSrc: string;\r\n  @Input() imageDescription: string;\r\n  @Input() description: string;\r\n  @Input() link: string;\r\n  @Input() readonly = false;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-option-simple',\r\n  templateUrl: './gl-shared-component-input-option-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-option-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputOptionSimpleComponent {\r\n  @Input() value: string;\r\n  @Input() id: string;\r\n  @Input() label: string;\r\n  @Input() name: string;\r\n  @Input() checked: boolean;\r\n\r\n  @Output() itemSelected: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  onCheck(value: string, input: HTMLInputElement) {\r\n    input.checked = true;\r\n    this.itemSelected.emit(value);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentInputTextSimpleService {\r\n\r\n  updateInputMask$: Subject<undefined> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  updateInputMask(): void {\r\n    this.updateInputMask$.next();\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild } from '@angular/core';\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { ISimpleTextResult, TInputTextMask } from './gl-shared-component-input-text-simple.interface';\r\nimport { InputMask, TCurrencySymbolTypes, TCurrencyTypes, TDecimalSeparators } from 'gl-w-frontend';\r\nimport { GlSharedComponentInputTextSimpleService } from './gl-shared-component-input-text-simple.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-text-simple',\r\n  templateUrl: './gl-shared-component-input-text-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-text-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputTextSimpleComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('inputElement', { read: ElementRef, static: true }) inputElement: ElementRef<HTMLInputElement>;\r\n\r\n  private _input: HTMLInputElement;\r\n\r\n  @Input() disabled = false;\r\n  @Input() autocomplete = false;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment;\r\n  @Input() class: string;\r\n  @Input() value: string = null;\r\n\r\n  @Input() mask: TInputTextMask;\r\n  @Input() decimalSeparator: TDecimalSeparators = ',';\r\n  @Input() allowMinus = true;\r\n  @Input() rightAlign = true;\r\n  @Input() step = 5;\r\n\r\n  @Input() maskSymbol: TCurrencySymbolTypes;\r\n  @Input() maxLength = 255;\r\n\r\n  @Output() currentValue: EventEmitter<ISimpleTextResult> = new EventEmitter();\r\n  @Output() onKeyUp(args) {\r\n    if (args.target.value.trim().length > 0) { args.target.classList.remove('required-fill'); }\r\n    this.currentValue.emit({ value: args.target.value });\r\n  }\r\n\r\n  constructor(public service: GlSharedComponentInputTextSimpleService) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._input = this.inputElement.nativeElement;\r\n    this.applyInputMask();\r\n\r\n    this.service.updateInputMask$.subscribe(() => {\r\n      this.applyInputMask();\r\n    });\r\n  }\r\n\r\n  applyInputMask(): void {\r\n    setTimeout(() => {\r\n      if (this.mask != null && this._input != null) {\r\n        if (this.mask.includes('currency')) {\r\n          this.inputElement.nativeElement.placeholder = InputMask.currency(\r\n            this.inputElement.nativeElement,\r\n            this.mask as TCurrencyTypes,\r\n            this.maskSymbol\r\n          );\r\n        } else if (this.mask === 'percentage' || this.mask === 'numeric') {\r\n          this.placeholder = InputMask[this.mask](\r\n            this._input,\r\n            this.allowMinus,\r\n            this.decimalSeparator,\r\n            this.rightAlign,\r\n            this.step\r\n          );\r\n        } else if (this.mask === 'integer') {\r\n          this.placeholder = InputMask.integer(\r\n            this._input,\r\n            this.allowMinus,\r\n            this.rightAlign,\r\n            this.step\r\n          );\r\n        } else if (this.mask === 'custom') {\r\n          InputMask.customNumberPhone(\r\n            this.placeholder,\r\n            this._input,\r\n            this.rightAlign\r\n          );\r\n        }\r\n      } else if (this._input != null) {\r\n        InputMask.remove(this._input);\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.service.updateInputMask$.observers.map(x => x.complete);\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport { TCurrencySymbolTypes, TDecimalSeparators } from 'gl-w-frontend';\r\nimport { THorizontalAlignment } from '../../../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { TInputTextMask } from '../../../simple/gl-shared-component-input-text-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-text-label-button-container',\r\n  templateUrl: './gl-shared-component-input-text-label-button-container.component.html',\r\n  styleUrls: ['./gl-shared-component-input-text-label-button-container.component.scss']\r\n})\r\nexport class GlSharedComponentInputTextLabelButtonContainerComponent {\r\n  @Input() disabled = false;\r\n  @Input() autocomplete = false;\r\n  @Input() id: string;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() labelValue: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment;\r\n  @Input() class: string;\r\n  @Input() value: string = null;\r\n\r\n  @Input() mask: TInputTextMask;\r\n  @Input() decimalSeparator: TDecimalSeparators = ',';\r\n  @Input() maskSymbol: TCurrencySymbolTypes;\r\n  @Input() allowMinus = true;\r\n  @Input() rightAlign = true;\r\n  @Input() step = 5;\r\n\r\n  @Input() maxLength = 255;\r\n  @Input() required: boolean;\r\n\r\n  @Input() requiredLabel = 'Required field';\r\n\r\n  @Output() currentValue = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  onKeyUp(values) { this.currentValue.emit(values); }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TCurrencySymbolTypes, TDecimalSeparators } from 'gl-w-frontend';\r\nimport { THorizontalAlignment } from '../../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { TInputTextMask } from '../../simple/gl-shared-component-input-text-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-text-label-simple',\r\n  templateUrl: './gl-shared-component-input-text-label-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-text-label-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputTextLabelSimpleComponent {\r\n  @Input() disabled = false;\r\n  @Input() autocomplete = false;\r\n  @Input() id: string;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() labelValue: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment;\r\n  @Input() class: string;\r\n  @Input() value: string = null;\r\n\r\n  @Input() allowMinus = true;\r\n  @Input() rightAlign = true;\r\n  @Input() step = 5;\r\n\r\n  @Input() mask: TInputTextMask;\r\n  @Input() decimalSeparator: TDecimalSeparators = ',';\r\n  @Input() maskSymbol: TCurrencySymbolTypes;\r\n  @Input() maxLength = 255;\r\n  @Input() required: boolean;\r\n\r\n  @Input() requiredLabel = 'Required field';\r\n\r\n  @Output() currentValue = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  onKeyUp(values) { this.currentValue.emit(values); }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-text-area-label',\r\n  templateUrl: './gl-shared-component-input-text-area-label.component.html',\r\n  styleUrls: ['./gl-shared-component-input-text-area-label.component.scss']\r\n})\r\nexport class GlSharedComponentInputTextAreaLabelComponent {\r\n  @Input() disabled = false;\r\n  @Input() id: string;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() labelValue: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment;\r\n  @Input() class: string;\r\n\r\n  @Input() value = '';\r\n  @Input() maxLength: number;\r\n  @Input() required: boolean;\r\n  @Input() requiredLabel = 'Required label';\r\n\r\n  @Output() currentValue = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  onKeyUp(values) {\r\n    this.currentValue.emit(values);\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-text-area-simple',\r\n  templateUrl: './gl-shared-component-input-text-area-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-text-area-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputTextAreaSimpleComponent {\r\n  @ViewChild('textArea', { read: ElementRef, static: true }) textArea: ElementRef<HTMLTextAreaElement>;\r\n\r\n  @Input() disabled = false;\r\n  @Input() id: string;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() labelValue: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment;\r\n  @Input() class: string;\r\n\r\n  @Input() value = '';\r\n  @Input() maxLength: number;\r\n  @Output() currentValue = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  onKeyUp(args) {\r\n    const value = args.target.value;\r\n\r\n    if (value.trim().length > 0) {\r\n      this.textArea.nativeElement.classList.remove('required-fill');\r\n    }\r\n\r\n    this.currentValue.emit({ value });\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-logo-square',\r\n  templateUrl: './gl-shared-component-logo-square.component.html',\r\n  styleUrls: ['./gl-shared-component-logo-square.component.scss']\r\n})\r\nexport class GlSharedComponentLogoSquareComponent {\r\n  @Input() imageScr: string;\r\n  @Input() imageAlt: string;\r\n  @Input() horizontalPosition: 'left' | 'right' = 'left';\r\n  @Input() verticalPosition: 'top' | 'bottom' = 'top';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GlSharedComponentModalAttachmentLinkService } from './gl-shared-component-modal-attachment-link.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-modal-attachment-link',\r\n  templateUrl: './gl-shared-component-modal-attachment-link.component.html',\r\n  styleUrls: ['./gl-shared-component-modal-attachment-link.component.scss']\r\n})\r\nexport class GlSharedComponentModalAttachmentLinkComponent {\r\n  @Input() title: string;\r\n  @Input() subtitle: string = ': link';\r\n  @Input() modalLogo: string;\r\n  @Input() fileNameLabel: string = 'File name';\r\n  @Input() fileNamePlaceholder: string = 'Type the file name';\r\n  @Input() linkPlaceholder: string = 'Type the file link';\r\n  @Input() cancelInnerValue: string = 'Cancel';\r\n\r\n  constructor(public service: GlSharedComponentModalAttachmentLinkService) { }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GlSharedComponentModalAlertService } from './gl-shared-component-modal-alert.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-modal-alert',\r\n  templateUrl: './gl-shared-component-modal-alert.component.html',\r\n  styleUrls: ['./gl-shared-component-modal-alert.component.scss']\r\n})\r\nexport class GlSharedComponentModalAlertComponent {\r\n  @Input() title: string;\r\n  @Input() subtitle: string;\r\n  @Input() modalLogo: string;\r\n  @Input() innerValueNo = 'No';\r\n  @Input() innerValueYes= 'Yes';\r\n  @Input() innerValueOK= 'OK';\r\n\r\n  @Input() noValue = 'no';\r\n  @Input() yesValue= 'yes';\r\n  @Input() okValue= 'ok';\r\n\r\n  constructor(public service: GlSharedComponentModalAlertService) { }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlSharedComponentModalLoadingService {\r\n  private _defaultMessage = 'Loading... please wait...';\r\n  defaultMessage = 'Loading... please wait...';\r\n  _loadingStatus = this.defaultMessage;\r\n  _showLoading = true;\r\n  _mainLoading: HTMLDivElement;\r\n\r\n  constructor() { }\r\n\r\n  checkElement() {\r\n    return new Promise(resolve => {\r\n      if (this._mainLoading == null) {\r\n        const loadingInterval = setInterval(() => {\r\n          this._mainLoading = document.querySelector('.main-loading');\r\n          if (this._mainLoading != null) {\r\n            clearInterval(loadingInterval);\r\n            resolve();\r\n          }\r\n        }, 1);\r\n      } else {\r\n        resolve();\r\n      }\r\n    });\r\n  }\r\n\r\n  setup(mainLoading: HTMLDivElement) {\r\n    this._mainLoading = mainLoading;\r\n  }\r\n\r\n  hide() {\r\n    this.checkElement().then(() => {\r\n      this._mainLoading.classList.add('hide-loading');\r\n      setTimeout(() => {\r\n        this._showLoading = false;\r\n        this.status(null);\r\n      }, 1100);\r\n    });\r\n  }\r\n  show(status?: string) {\r\n    this.checkElement().then(() => {\r\n      if (status != null) { this.status(status); } else { this.status(null); }\r\n      this._mainLoading.classList.remove('hide-loading');\r\n      this._showLoading = true;\r\n    });\r\n  }\r\n  status(message) {\r\n    this.checkElement().then(() => {\r\n      setTimeout(() => {\r\n\r\n        if (message == null || message.trim().length === 0) {\r\n          if (this.defaultMessage != null && this.defaultMessage.length === 0) { this.defaultMessage = this._defaultMessage; }\r\n          this._loadingStatus = this.defaultMessage;\r\n        } else {\r\n          this._loadingStatus = message;\r\n        }\r\n      }, 10);\r\n    });\r\n  }\r\n}\r\n","import { AfterViewChecked, Component, ElementRef, Input, ViewChild } from '@angular/core';\r\nimport { GlSharedComponentModalLoadingService } from './gl-shared-component-modal-loading.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-modal-loading',\r\n  templateUrl: './gl-shared-component-modal-loading.component.html',\r\n  styleUrls: ['./gl-shared-component-modal-loading.component.scss']\r\n})\r\nexport class GlSharedComponentModalLoadingComponent implements AfterViewChecked {\r\n  @ViewChild('mainLoading', { read: ElementRef, static: true }) mainLoading: ElementRef<HTMLDivElement>;\r\n\r\n  @Input() defaultMessage: string;\r\n\r\n  loaded = false;\r\n\r\n  constructor(public service: GlSharedComponentModalLoadingService) {\r\n    service.defaultMessage = this.defaultMessage;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    const container = document.querySelector('.main-loading') as HTMLDivElement;\r\n\r\n    if (container != null && !this.loaded) {\r\n      this.service.setup(container);\r\n      this.loaded = true;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-modal-header',\r\n  templateUrl: './gl-shared-component-modal-header.component.html',\r\n  styleUrls: ['./gl-shared-component-modal-header.component.scss']\r\n})\r\nexport class GlSharedComponentModalHeaderComponent {\r\n  @Input() title: string;\r\n  @Input() subtitle: string;\r\n  @Input() modalLogo: string;\r\n  constructor() { }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-menu-background',\r\n  templateUrl: './gl-shared-component-menu-background.component.html',\r\n  styleUrls: ['./gl-shared-component-menu-background.component.scss']\r\n})\r\nexport class GlSharedComponentMenuBackgroundComponent {\r\n\r\n  constructor() { }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n  export class GlSharedComponentMenuService implements OnDestroy {\r\n\r\n  container: HTMLDivElement;\r\n  background: HTMLDivElement;\r\n\r\n  router: Router;\r\n\r\n  menuHidden: Subject<boolean> = new Subject();\r\n  opened = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.menuHidden.observers.map(x => x.complete());\r\n  }\r\n\r\n  initialize(container: HTMLDivElement, background: HTMLDivElement, router: Router) {\r\n    this.container = container;\r\n    this.background = background;\r\n    this.router = router;\r\n\r\n    this.menuHidden.next(true);\r\n  }\r\n\r\n  close(event: Event) {\r\n    event.preventDefault();\r\n    this.container.classList.remove('menu-active');\r\n    this.background.classList.remove('visible-background');\r\n\r\n    this.menuHidden.next(true);\r\n    this.opened = false;\r\n    return false;\r\n  }\r\n  open(event: Event) {\r\n    event.preventDefault();\r\n    this.container.classList.add('menu-active');\r\n    this.background.classList.add('visible-background');\r\n\r\n    this.menuHidden.next(false);\r\n    this.opened = true;\r\n    return true;\r\n  }\r\n\r\n  goToSettings(url: string, target: string = '_blank') {\r\n    window.open(url, target);\r\n  }\r\n\r\n  backgroundClick(event) {\r\n    if (this.opened) { this.close(event); }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IMenuItem, TUrlTarget } from './gl-shared-component-menu-item.interface';\r\nimport {style, state, animate, transition, trigger} from '@angular/animations';\r\nimport {GlSharedComponentMenuService} from '../gl-shared-component-menu.service';\r\nimport * as SmoothScroll from 'smooth-scroll';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-menu-item',\r\n  templateUrl: './gl-shared-component-menu-item.component.html',\r\n  styleUrls: ['./gl-shared-component-menu-item.component.scss'],\r\n  animations: [\r\n    trigger('fadeInOut', [\r\n      state('', style({\r\n        opacity: 0,\r\n        height: 0,\r\n        transform: 'scaleY(0)'\r\n      })),\r\n      transition(':enter', [   // :enter is alias to 'void => *'\r\n        style({\r\n          opacity: 0,\r\n          height: 0,\r\n          transform: 'scaleY(0)'\r\n        }),\r\n        animate('0.3s ease-in', style({\r\n          opacity: 1,\r\n          height: '*',\r\n          transform: 'scaleY(1)'\r\n        }))\r\n      ]),\r\n      transition(':leave', [   // :leave is alias to '* => void'\r\n        animate(250, style({\r\n          opacity: 0,\r\n          height: 0,\r\n          transform: 'scaleY(0)'\r\n        }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class GlSharedComponentMenuItemComponent {\r\n  @Input() itemClass: 'translucid' | 'dark' | '' = 'dark';\r\n  @Input() absolute: boolean;\r\n  @Input() menuLogo = '../assets/img/logo/glaucio-logo-colored.svg';\r\n  @Input() src = this.menuLogo;\r\n  @Input() href: string;\r\n  @Input() fragment: string;\r\n  @Input() alt;\r\n  @Input() content;\r\n  @Input() target: TUrlTarget = '_self';\r\n\r\n  @Input() hasSubitem: boolean;\r\n  @Input() active: boolean;\r\n  @Input() subItems: IMenuItem[];\r\n\r\n  @Output() $click: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _menu: GlSharedComponentMenuService\r\n  ) {\r\n\r\n  }\r\n\r\n  openAbsoluteLink(event, href, target: TUrlTarget = '_self') {\r\n    this._router.navigate(['/externalRedirect', { externalUrl: href, target}], {\r\n      skipLocationChange: true,\r\n    }).then(() => {\r\n      console.log(`Redirected to: ${href}`);\r\n    });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  toggleActive() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  onClick(event) {\r\n    if (this.fragment != null) {\r\n      this._menu.close(event);\r\n\r\n      const element: HTMLElement = document.querySelector(`#${this.fragment}`);\r\n      const scroll = new SmoothScroll(`#${this.fragment}`, {\r\n        speed: 1000,\r\n        speedAsDuration: true,\r\n        easing: 'easeInOutQuad',\r\n        updateURL: true,\r\n        popstate: true\r\n      });\r\n      scroll.animateScroll(element);\r\n\r\n      this.$click.emit({ event, href: this.href, fragment: this.fragment });\r\n    }\r\n  }\r\n}\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { GlSharedComponentMenuService } from './gl-shared-component-menu.service';\r\nimport { IMenuItem, IMenuItemComplex } from './item/gl-shared-component-menu-item.interface';\r\nimport { TMenuPosition } from './gl-shared-component-menu.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-menu',\r\n  templateUrl: './gl-shared-component-menu.component.html',\r\n  styleUrls: ['./gl-shared-component-menu.component.scss']\r\n})\r\nexport class GlSharedComponentMenuComponent implements OnInit {\r\n  @ViewChild('container', { static: true, read: ElementRef }) container: ElementRef<HTMLDivElement>;\r\n  @ViewChild('background', { static: true, read: ElementRef }) background: ElementRef<HTMLDivElement>;\r\n\r\n  @Input() title: string;\r\n  @Input() subtitle: string;\r\n  @Input() systemVersion: string;\r\n  @Input() menuItems: IMenuItem[];\r\n  @Input() menuItemsComplex: IMenuItemComplex[];\r\n  @Input() showSettings: boolean;\r\n  @Input() className: string;\r\n  @Input() settingsUrl: string;\r\n  @Input() settingsTarget: string = '_blank';\r\n  @Input() menuLogo: string = '../assets/img/logo/glaucio-logo-colored.svg';\r\n  @Input() menuBottomTitle: string;\r\n  @Input() menuBottomVersion: string = '1.0.0';\r\n  @Input() menuPosition: TMenuPosition = 'right';\r\n\r\n  @Output() $click: EventEmitter<any> = new EventEmitter();\r\n\r\n  readonly closeButton = '../assets/img/icon/side-menu/close.svg';\r\n  readonly settingsButton = '../assets/img/icon/side-menu/admin-settings.svg';\r\n\r\n  constructor(\r\n    public service: GlSharedComponentMenuService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.service.initialize(this.container.nativeElement, this.background.nativeElement, this.router);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-navigation-tab-simple',\r\n  templateUrl: './gl-shared-component-navigation-tab-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-navigation-tab-simple.component.scss']\r\n})\r\nexport class GlSharedComponentNavigationTabSimpleComponent {\r\n  @Input() tabActive: boolean;\r\n  @Input() showSeparator: boolean;\r\n  @Input() tabSequence: number;\r\n  @Input() tabDescription: string;\r\n  @Input() tabIsTheFirst: boolean;\r\n  @Input() tabIsTheLast: boolean;\r\n  @Input() tabEnabled: boolean = true;\r\n\r\n  @Output() activate$: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  activate(sequence: number): void {\r\n    if (this.tabEnabled) {\r\n      this.activate$.emit(sequence);\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { INavigationTab } from '../simple/gl-shared-component-navigation-tab-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-navigation-tab-container',\r\n  templateUrl: './gl-shared-component-navigation-tab-container.component.html',\r\n  styleUrls: ['./gl-shared-component-navigation-tab-container.component.scss']\r\n})\r\nexport class GlSharedComponentNavigationTabContainerComponent {\r\n\r\n  @Input() navigationTabs: INavigationTab[];\r\n  @Output() activatedTab$: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  activate(sequence: number): void {\r\n    this.reset();\r\n    const active = this.navigationTabs.filter(x => x.sequence === sequence);\r\n    active[0].active = true;\r\n    this.activatedTab$.emit(sequence);\r\n  }\r\n\r\n  reset(): void {\r\n    for (const item of this.navigationTabs) {\r\n      item.active = false;\r\n    }\r\n  }\r\n\r\n  tabHovering(hovering: boolean, sequence: number, active: boolean): void {\r\n    const tab = document.querySelector(`#navigation-tab-${sequence}`) as HTMLDivElement;\r\n\r\n    if (!active) {\r\n      if (hovering) {\r\n        tab.style.zIndex = '990';\r\n      } else {\r\n        tab.style.zIndex = (100 - sequence).toString();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { THorizontalAlignment } from './gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-title-label-simple',\r\n  templateUrl: './gl-shared-component-title-label-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-title-label-simple.component.scss']\r\n})\r\nexport class GlSharedComponentTitleLabelSimpleComponent {\r\n\r\n  @Input() labelValue;\r\n  @Input() id;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() class = '';\r\n\r\n  @Input() required = false;\r\n  @Input() requiredLabel = 'Required field';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-title-label-button-simple',\r\n  templateUrl: './gl-shared-component-title-label-button-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-title-label-button-simple.component.scss']\r\n})\r\nexport class GlSharedComponentTitleLabelButtonSimpleComponent {\r\n\r\n  @Input() id: string;\r\n  @Input() alt: string;\r\n  @Input() src: string;\r\n  @Input() required = false;\r\n  @Input() class: string;\r\n  @Input() requiredFieldDescription: string = 'Required field';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { THorizontalAlignment } from '../../simple/gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-title-label-button-container',\r\n  templateUrl: './gl-shared-component-title-label-button-container.component.html',\r\n  styleUrls: ['./gl-shared-component-title-label-button-container.component.scss']\r\n})\r\nexport class GlSharedComponentTitleLabelButtonContainerComponent {\r\n\r\n  @Input() labelValue;\r\n  @Input() id;\r\n  @Input() labelAlignment: THorizontalAlignment;\r\n  @Input() required = false;\r\n  @Input() class: string;\r\n  @Input() requiredFieldDescription: string = 'Required field';\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-title-page',\r\n  templateUrl: './gl-shared-component-title-page.component.html',\r\n  styleUrls: ['./gl-shared-component-title-page.component.scss']\r\n})\r\nexport class GlSharedComponentTitlePageComponent{\r\n\r\n  @Input() title: string;\r\n  @Input() subtitle: string;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { DateGet } from 'gl-w-frontend';\r\nimport { THorizontalAlignment } from '../../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { IDatePickerOutput } from './gl-shared-component-input-datepicker-simple-day-month-year.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-datepicker-simple-day-month-year',\r\n  templateUrl: './gl-shared-component-input-datepicker-simple-day-month-year.component.html',\r\n  styleUrls: ['./gl-shared-component-input-datepicker-simple-day-month-year.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_LOCALE, useValue: 'pt-BR' },\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [ MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS ]\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: MAT_MOMENT_DATE_FORMATS\r\n    },\r\n  ],\r\n})\r\nexport class GlSharedComponentInputDatepickerSimpleDayMonthYearComponent {\r\n  @Input() disabled = false;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment = 'center';\r\n  @Input() class: string;\r\n  @Input() value: Date = null;\r\n  @Input() maxLength = 255;\r\n\r\n  @Output() currentValue: EventEmitter<IDatePickerOutput> = new EventEmitter();\r\n\r\n  readonly dateFormat: 'DD/MM/YYYY' = 'DD/MM/YYYY';\r\n\r\n  constructor() {}\r\n\r\n  clear(input: HTMLInputElement) {\r\n    this.currentValue.emit({\r\n      date: null,\r\n      dateString: null\r\n    });\r\n\r\n    input.value = null;\r\n  }\r\n\r\n  changed(event) {\r\n    this.currentValue.emit({\r\n      date: DateGet.customDateNoUTC(event.value, this.dateFormat),\r\n      dateString: DateGet.customDateNoUTCString(event.value, this.dateFormat) as 'DD/MM/YYYY'\r\n    });\r\n  }\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { IItemsPerPage, IPageButtons, IPaging, TPagingType } from './gl-shared-component-paging.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-paging',\r\n  templateUrl: './gl-shared-component-paging.component.html',\r\n  styleUrls: ['./gl-shared-component-paging.component.scss']\r\n})\r\nexport class GlSharedComponentPagingComponent implements AfterViewInit {\r\n  @Input() pageInfo: string;\r\n  @Input() hasNext: boolean;\r\n  @Input() hasPrevious: boolean;\r\n  @Input() type: 'translucid' | 'dark' | '' = 'dark';\r\n  @Input() firstPageTitle: string = 'First page';\r\n  @Input() previousPageTitle: string = 'Previous page';\r\n  @Input() nextPageTitle: string = 'Next page';\r\n  @Input() lastPageTitle: string = 'Last page';\r\n  @Input() pageDescription: string = 'Page';\r\n  @Input() pageSize: number;\r\n  @Input() itemsPerPageDescriptions: string = 'Items per page';\r\n  @Input() pageSizeValue1: number = 5;\r\n  @Input() pageSizeValue2: number = 10;\r\n  @Input() pageSizeValue3: number = 15;\r\n  @Input() pageSizeValue4: number = 20;\r\n  @Input() pageSizeValue5: number = 25;\r\n\r\n  @Input() pageButtons: IPageButtons[] = [];\r\n\r\n  @Output() onPageChange$: EventEmitter<IPaging> = new EventEmitter();\r\n  @Output() setNumberOfItems$: EventEmitter<number> = new EventEmitter();\r\n  @Output() setPage$: EventEmitter<number> = new EventEmitter();\r\n\r\n  itemsPerPage: IItemsPerPage[] = [];\r\n  readonly firstIcon: string = '../assets/img/icon/paging/first.svg';\r\n  readonly previousIcon: string = '../assets/img/icon/paging/previous.svg';\r\n  readonly nextIcon: string = '../assets/img/icon/paging/next.svg';\r\n  readonly lastIcon: string = '../assets/img/icon/paging/last.svg';\r\n\r\n  constructor() {}\r\n\r\n  ngAfterViewInit(): void {\r\n    for (let i = 1; i <= 5; i++) {\r\n      const pageSize = +this[`pageSizeValue${i}`];\r\n\r\n      this.itemsPerPage.push({\r\n        title: `${pageSize} ${this.itemsPerPageDescriptions.toLowerCase()}`,\r\n        innerValue: pageSize?.toString(),\r\n        value: pageSize?.toString(),\r\n        class: this.pageSize == pageSize ? 'active' : '',\r\n        pageSize\r\n      })\r\n    }\r\n  }\r\n\r\n  onPageChange(event: MouseEvent, type: TPagingType) {\r\n    this.onPageChange$.emit({ event, type });\r\n  }\r\n  setNumberOfItems(items: number) {\r\n    this.itemsPerPage.map(x => x.class = x.pageSize == items ? 'active' : '')\r\n    this.setNumberOfItems$.emit(items);\r\n  }\r\n  setPage(page: number) {\r\n    this.setPage$.emit(page);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { DateGet } from 'gl-w-frontend';\r\nimport { THorizontalAlignment } from '../../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { IDatePickerMonthYearOutput } from './gl-shared-component-input-datepicker-simple-month-year.interface';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\n\r\nimport { Moment } from 'moment';\r\nconst MONTH_YEAR_FORMAT = {\r\n  parse: {\r\n    dateInput: 'MM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-datepicker-simple-month-year',\r\n  templateUrl: './gl-shared-component-input-datepicker-simple-month-year.component.html',\r\n  styleUrls: ['./gl-shared-component-input-datepicker-simple-month-year.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: MAT_DATE_LOCALE,\r\n      useValue: 'pt-BR'\r\n    },\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: MONTH_YEAR_FORMAT\r\n    }\r\n  ]\r\n})\r\nexport class GlSharedComponentInputDatepickerSimpleMonthYearComponent {\r\n  @Input() disabled = false;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment = 'center';\r\n  @Input() class: string;\r\n  @Input() value: Date = DateGet.currentDate('DD/MM/YYYY');\r\n  @Input() maxLength = 255;\r\n\r\n  @Output() currentValue: EventEmitter<IDatePickerMonthYearOutput> = new EventEmitter();\r\n\r\n  readonly dateFormatString: 'MM/YYYY' = 'MM/YYYY';\r\n  readonly dateFormat = 'DD/MM/YYYY';\r\n  startDate = this.value;\r\n  date: Date = DateGet.customDateNoUTC('DD/MM/YYYY');\r\n\r\n  constructor() {}\r\n\r\n  chosenYearHandler(normalizedYear: Moment) {\r\n    const ctrlValue = this.date;\r\n    ctrlValue.setFullYear(normalizedYear.year());\r\n    this.date = ctrlValue;\r\n\r\n    const date = DateGet.customDateNoUTC(ctrlValue, this.dateFormat);\r\n\r\n    const dateString = DateGet.customDateNoUTCString(normalizedYear, this.dateFormatString, this.dateFormatString) as 'MM/YYYY';\r\n\r\n    this.currentValue.emit({ date, dateString });\r\n  }\r\n  chosenMonthHandler(normalizedMonth: Moment, datepicker: MatDatepicker<any>) {\r\n    const ctrlValue = this.date;\r\n    ctrlValue.setMonth(normalizedMonth.month());\r\n    this.date = ctrlValue;\r\n\r\n    datepicker.close();\r\n\r\n    const date = DateGet.customDateNoUTC(ctrlValue, this.dateFormat);\r\n    const dateString = DateGet.customDateString(normalizedMonth, this.dateFormatString, this.dateFormatString) as 'MM/YYYY';\r\n\r\n    this.currentValue.emit({ date, dateString });\r\n  }\r\n\r\n  clear() {\r\n    this.currentValue.emit({\r\n      date: null,\r\n      dateString: null\r\n    });\r\n  }\r\n  changed(event) {\r\n    this.currentValue.emit({\r\n      date: DateGet.customDateNoUTC(event.value, this.dateFormat),\r\n      dateString: DateGet.customDateString(event.value, this.dateFormatString, this.dateFormatString) as 'MM/YYYY'\r\n    });\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { IDatePickerOutput } from '../simple/day-month-year/gl-shared-component-input-datepicker-simple-day-month-year.interface';\r\nimport { IDatePickerMonthYearOutput } from '../simple/month-year/gl-shared-component-input-datepicker-simple-month-year.interface';\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-datepicker-label',\r\n  templateUrl: './gl-shared-component-input-datepicker-label.component.html',\r\n  styleUrls: ['./gl-shared-component-input-datepicker-label.component.scss']\r\n})\r\nexport class GlSharedComponentInputDatepickerLabelComponent implements OnInit {\r\n  @Input() disabled = false;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment = 'center';\r\n  @Input() class: string;\r\n  @Input() value: Date = null;\r\n  @Input() dateFormat: 'MM/YYYY' | 'DD/MM/YYYY' = 'DD/MM/YYYY';\r\n\r\n  @Input() maxLength = 255;\r\n  @Input() labelValue: string;\r\n  @Input() labelAlignment: THorizontalAlignment = 'center';\r\n  @Input() required: boolean;\r\n  @Input() requiredField = 'Required field';\r\n\r\n  @Output() currentValue: EventEmitter<IDatePickerOutput | IDatePickerMonthYearOutput> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onCurrentValue(event: IDatePickerOutput | IDatePickerMonthYearOutput) {\r\n    this.currentValue.emit(event);\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-switch',\r\n  templateUrl: './gl-shared-component-input-switch.component.html',\r\n  styleUrls: ['./gl-shared-component-input-switch.component.scss']\r\n})\r\nexport class GlSharedComponentInputSwitchComponent {\r\n  @Input() enabled = true;\r\n  @Input() active = false;\r\n  @Input() label: string;\r\n  @Input() labelColor: 'white' | 'black' = 'white';\r\n  @Input() showLabel = true;\r\n  @Input() showAsInputButton = false;\r\n\r\n  @Input() buttonIconSrc: string;\r\n\r\n  @Output() active$: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  activate(): void {\r\n    if (this.enabled) {\r\n      this.active = !this.active;\r\n      this.active$.emit(this.active);\r\n    }\r\n  }\r\n\r\n  onContainerClick(): void {\r\n    if (this.showAsInputButton) {\r\n      this.activate();\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { StringConverter, TCurrencySymbolTypes, TDecimalSeparators } from 'gl-w-frontend';\r\nimport { THorizontalAlignment } from '../../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\nimport { IInputTextStepButton, TStepType } from './gl-shared-component-input-text-simple-with-step.interface';\r\nimport { TInputTextMask } from '../gl-shared-component-input-text-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-text-simple-with-step',\r\n  templateUrl: './gl-shared-component-input-text-simple-with-step.component.html',\r\n  styleUrls: ['./gl-shared-component-input-text-simple-with-step.component.scss']\r\n})\r\nexport class GlSharedComponentInputTextSimpleWithStepComponent {\r\n  @Input() disabled = false;\r\n  @Input() autocomplete = false;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() itemContentAlignment: THorizontalAlignment;\r\n  @Input() class: string;\r\n  @Input() value = 0;\r\n\r\n  @Input() allowMinus = true;\r\n  @Input() rightAlign = true;\r\n  @Input() step = 5;\r\n\r\n  @Input() mask: TInputTextMask;\r\n  @Input() decimalSeparator: TDecimalSeparators = ',';\r\n  @Input() maskSymbol: TCurrencySymbolTypes;\r\n  @Input() maxLength = 255;\r\n\r\n  @Output() currentValue: EventEmitter<IInputTextStepButton> = new EventEmitter();\r\n\r\n  callback = () => {};\r\n\r\n  constructor() { }\r\n\r\n  convertValue(value: number): string {\r\n    if (this.mask === 'percentage') {\r\n      return StringConverter.numberToPercentage(value, false);\r\n    } else {\r\n      return this.value.toString();\r\n    }\r\n  }\r\n\r\n  processValue(type: TStepType, value: string): void {\r\n    const previousValue: number = this.value == null || Number.isNaN(this.value) ? 0 : this.value;\r\n    const step = this.mask === 'percentage' ? this.step / 100.0 : this.step;\r\n    let newValue: number;\r\n\r\n    if (type === 'increase') {\r\n      newValue = previousValue + step;\r\n\r\n      this.currentValue.emit({\r\n        type: 'increase',\r\n        previousValue: this.mask === 'percentage' ? previousValue : previousValue,\r\n        newValue: this.mask === 'percentage' ? newValue : newValue\r\n      });\r\n    } else if (type === 'decrease') {\r\n      newValue = previousValue - step;\r\n\r\n      this.currentValue.emit({\r\n        type: 'decrease',\r\n        previousValue: this.mask === 'percentage' ? previousValue : previousValue,\r\n        newValue: this.mask === 'percentage' ? newValue : newValue\r\n      });\r\n    } else {\r\n      const parsedValue: string = value == null || value.length === 0 ? '0.00%' : value;\r\n      newValue = StringConverter.percentageToNumber(parsedValue);\r\n\r\n      this.currentValue.emit({\r\n        type: 'typing',\r\n        previousValue: this.mask === 'percentage' ? previousValue : previousValue,\r\n        newValue: this.mask === 'percentage' ? newValue : newValue\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { IListRemoveItem } from './gl-shared-component-input-list-item-remove.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-list-item-remove',\r\n  templateUrl: './gl-shared-component-input-list-item-remove.component.html',\r\n  styleUrls: ['./gl-shared-component-input-list-item-remove.component.scss']\r\n})\r\nexport class GlSharedComponentInputListItemRemoveComponent {\r\n\r\n  @Input() showRemove: boolean = false;\r\n  @Input() id: number;\r\n\r\n  @Output() itemToRemove: EventEmitter<IListRemoveItem> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  removeItem(): void {\r\n    this.itemToRemove.emit({\r\n      id: +this.id\r\n    });\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TListReorder } from './gl-shared-component-input-list-item-up-down.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-list-item-up-down',\r\n  templateUrl: './gl-shared-component-input-list-item-up-down.component.html',\r\n  styleUrls: ['./gl-shared-component-input-list-item-up-down.component.scss']\r\n})\r\nexport class GlSharedComponentInputListItemUpDownComponent {\r\n  @Input() showUp = true;\r\n  @Input() showDown = true;\r\n\r\n  @Output() moveUpDown$: EventEmitter<TListReorder> = new EventEmitter();\r\n\r\n  callback = () => {};\r\n\r\n  constructor() { }\r\n  onClick(type: TListReorder) {\r\n\r\n    if (type === 'move-down') {\r\n      if (this.showDown) {\r\n        this.moveUpDown$.emit(type);\r\n      }\r\n    } else {\r\n      if (this.showUp) {\r\n        this.moveUpDown$.emit(type);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-check-box-simple',\r\n  templateUrl: './gl-shared-component-input-check-box-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-check-box-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputCheckBoxSimpleComponent {\r\n\r\n  @Input() checked = false;\r\n  @Input() showBackground = true;\r\n\r\n  @Output() checked$: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  onChecked(checked: boolean): void {\r\n    this.checked = checked;\r\n    this.checked$.emit(checked);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { THorizontalAlignment } from '../../../title/label/simple/gl-shared-component-title-label-simple.interface';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-check-box-label',\r\n  templateUrl: './gl-shared-component-input-check-box-label.component.html',\r\n  styleUrls: ['./gl-shared-component-input-check-box-label.component.scss']\r\n})\r\nexport class GlSharedComponentInputCheckBoxLabelComponent {\r\n\r\n  @Input() checked = false;\r\n  @Input() showBackground = true;\r\n\r\n  @Input() labelId: string;\r\n  @Input() labelAlignment: THorizontalAlignment = 'center';\r\n  @Input() required: boolean;\r\n  @Input() labelValue: string;\r\n  @Input() requiredLabelDescription: string;\r\n\r\n  @Output() checked$: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { AttachmentIcon, AttachmentValidate } from 'gl-w-frontend';\r\nimport { IAttachmentData } from 'gl-w-frontend/lib/scripts/core/services/attachment/core-services-attachment.interface';\r\nimport { GlSharedComponentModalAlertService } from '../../../modal/alert/gl-shared-component-modal-alert.service';\r\n\r\n@Component({\r\n  selector: 'gl-shared-component-input-drag-and-drop-simple',\r\n  templateUrl: './gl-shared-component-input-drag-and-drop-simple.component.html',\r\n  styleUrls: ['./gl-shared-component-input-drag-and-drop-simple.component.scss']\r\n})\r\nexport class GlSharedComponentInputDragAndDropSimpleComponent {\r\n  @ViewChild('fileAttachment') input: ElementRef<HTMLInputElement>;\r\n\r\n  @Input() showContinueUpload: boolean;\r\n  @Input() continueUpload: boolean;\r\n  @Input() continueUploadLabel = 'Continue previous loading';\r\n  @Output() $continueUploadActive: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  @Input() uploadButtonValue = 'Upload files';\r\n  @Input() readOnly = false;\r\n\r\n  /**\r\n   * In case the button icon source is not passed, the icon will be hidden.\r\n   */\r\n  @Input() resumeButtonIconSrc: string;\r\n  @Input() descriptionDragAndDrop = 'Drag and drop the file';\r\n  @Input() descriptionDragAndDropOr = 'or';\r\n  @Input() descriptionDragAndDropClickHere = 'Click here';\r\n\r\n  @Input() uploadIcon = '../assets/img/icon/upload/upload.svg';\r\n\r\n  /**\r\n   * The message must contain the string $var1$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n  @Input() invalidExtensionMessageSingular = 'The invlid file has not been added to the attachment list. Accepted file extensions: $var1$';\r\n  /**\r\n   * The message must contain the string $var1$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n  @Input() invalidExtensionMessagePlural = 'The invalid files have not been added to the attachment list. Accepted file extensions: $var1$';\r\n  /**\r\n   * The message must contain the string $var1$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n\r\n  @Input() duplicatedMessageSingular = 'The duplicated file has not been added to the attachment list. Rejected files: $var1$';\r\n  /**\r\n   * The message must contain the string $var1$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n  @Input() duplicatedMessagePlural = 'The duplicated files have not been added to the attachment list. Rejected files: $var1$';\r\n  /**\r\n   * The message must contain the string $var1$ and $var2$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n\r\n  @Input() invalidSizeMessageSingular = 'The current file is over $var1$KB and has not been added to the attachment list. Rejected files: $var2$';\r\n  /**\r\n   * The message must contain the string $var1$ and $var2$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n  @Input() invalidSizeMessagePlural = 'The files with size over $var1$KB have not been added to the attachment list. Rejected files: $var2$';\r\n\r\n  /**\r\n   * The message must contain the string $var1$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n  @Input() invalidLengthMessageSingular = 'You can just add one attachment file. Rejected files: $var1$';\r\n  /**\r\n   * The message must contain the string $var1$. It'll be replaced during runtime.\r\n   * I.e.: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit: $var1$'\r\n   */\r\n  @Input() invalidLengthMessagePlural = 'You can just add $var1$ attachment file. Rejected files: $var2$';\r\n\r\n  /**\r\n   * If maxNumberOfFiles value is greater than 1 or equal to -1, multiple files are enabled.\r\n   * Default value = -1.\r\n   */\r\n  @Input() maxNumberOfFiles = -1;\r\n  /**\r\n   * If maxSize value is calculated in KB.\r\n   * Default value = 46080 (45mb).\r\n   */\r\n  @Input() maxSize = 46080;\r\n  /**\r\n   * This field does not require to include the dot extension.\r\n   * Example: [\"psd\", .xlsx\", \"zip\", \".docx\", \".pptx\"]\r\n   */\r\n  @Input() acceptFileType: string[] = [];\r\n  /**\r\n   * Returns the list of valid attachments added.\r\n   */\r\n  @Output() $attachmentItems: EventEmitter<IAttachmentData[]> = new EventEmitter();\r\n  /**\r\n   * Returns the list of valid attachments added and fires the upload button.\r\n   */\r\n  @Output() $uploadClick: EventEmitter<IAttachmentData[]> = new EventEmitter();\r\n\r\n  @Input() attachmentItems: IAttachmentData[] = [];\r\n\r\n\r\n  constructor(private _alert: GlSharedComponentModalAlertService) { }\r\n\r\n  private static fileNameList(list: string[]): string {\r\n    let listName = '\\n';\r\n    for (const [i, item] of list.entries()) {\r\n      const separator = i < (list.length - 1) ? ';\\n' : '.';\r\n      listName += `${i + 1}. ${item}${separator}`;\r\n    }\r\n\r\n    return listName;\r\n  }\r\n\r\n  async onFileDropped(fileList: FileList): Promise<void> {\r\n    const duplicatedList: string[] = [];\r\n    const invalidFileList: string[] = [];\r\n    const invalidSizeList: string[] = [];\r\n    const invalidLengthList: string[] = [];\r\n\r\n    if (this.maxNumberOfFiles === -1 || this.maxNumberOfFiles > 1) {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < fileList.length; i++) {\r\n        const file = fileList[i];\r\n        const validFile = this.acceptFileType.length > 0 ? AttachmentValidate.fileArray(file.name, this.acceptFileType) :  true;\r\n        const duplicated = AttachmentValidate.duplicated(file.name, this.attachmentItems);\r\n        const invalidSize = !AttachmentValidate.fileSizeFromArray(this.input.nativeElement, file);\r\n\r\n        if (validFile) {\r\n          if (duplicated) {\r\n            duplicatedList.push(file.name);\r\n          } else if (invalidSize) {\r\n            invalidSizeList.push(file.name);\r\n          } else {\r\n            if (this.maxNumberOfFiles === -1 || this.attachmentItems.length < this.maxNumberOfFiles) {\r\n              this.addItemToArray(file);\r\n            } else {\r\n              invalidLengthList.push(file.name);\r\n            }\r\n          }\r\n        } else {\r\n          invalidFileList.push(file.name);\r\n        }\r\n      }\r\n\r\n      await this.showErrorMessage(invalidFileList, duplicatedList, invalidSizeList, invalidLengthList);\r\n    } else {\r\n      const arrayCopy = [...this.attachmentItems];\r\n      this.attachmentItems = [];\r\n\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < fileList.length; i++) {\r\n        const file = fileList[i];\r\n        const validFile = this.acceptFileType.length > 0 ? AttachmentValidate.fileArray(file.name, this.acceptFileType) :  true;\r\n        const duplicated = AttachmentValidate.duplicated(file.name, this.attachmentItems);\r\n        const invalidSize = !AttachmentValidate.fileSizeFromArray(this.input.nativeElement, file);\r\n\r\n        if (validFile) {\r\n          if (duplicated) {\r\n            duplicatedList.push(file.name);\r\n          } else if (invalidSize) {\r\n            invalidSizeList.push(file.name);\r\n          } else {\r\n            if (this.attachmentItems.length === 0) {\r\n              this.addItemToArray(file);\r\n            } else {\r\n              invalidLengthList.push(file.name);\r\n            }\r\n          }\r\n        } else {\r\n          invalidFileList.push(file.name);\r\n        }\r\n      }\r\n\r\n      if (this.attachmentItems.length === 0) { this.attachmentItems = [...arrayCopy]; }\r\n      await this.showErrorMessage(invalidFileList, duplicatedList, invalidSizeList, invalidLengthList);\r\n    }\r\n\r\n    this.input.nativeElement.value = '';\r\n    this.$attachmentItems.emit(this.attachmentItems);\r\n  }\r\n\r\n  removeAttachment(removed): void {\r\n    const tempList = this.attachmentItems.filter(x => x.id !== removed.id);\r\n    const attachments: IAttachmentData[] = [];\r\n\r\n    for (const item of tempList) {\r\n      attachments.push({\r\n        id: attachments.length,\r\n        name: item.file.name,\r\n        icon: AttachmentIcon.get(item.file.name),\r\n        file: item.file,\r\n        new: true,\r\n        remove: false\r\n      });\r\n    }\r\n\r\n    this.attachmentItems = attachments;\r\n    this.$attachmentItems.emit(attachments);\r\n  }\r\n  async fileBrowserHandler(files: EventTarget): Promise<void> {\r\n    const fileList: FileList = (files as HTMLInputElement).files;\r\n    return this.onFileDropped(fileList);\r\n  }\r\n  parsedAcceptList(): string {\r\n    let accept = '\\n';\r\n    for (let i = 0; i < this.acceptFileType.length; i++) {\r\n      const item = this.acceptFileType[i];\r\n      const separator = i < (this.acceptFileType.length - 1) ? ', ' : '';\r\n      let tempExtension: string;\r\n\r\n      if (!item.includes('.', 0)) {\r\n        tempExtension = `.${item}`;\r\n      }\r\n\r\n      accept += `${tempExtension}${separator}`;\r\n\r\n    }\r\n\r\n    return accept;\r\n  }\r\n  click(): void {\r\n    this.input.nativeElement.click();\r\n  }\r\n\r\n  uploadClick(): void {\r\n    this.$uploadClick.emit(this.attachmentItems);\r\n  }\r\n\r\n  onContinueUpload(active: boolean) {\r\n    this.$continueUploadActive.emit(active);\r\n    this.continueUpload = active;\r\n  }\r\n\r\n  private addItemToArray(file: File): void {\r\n    this.attachmentItems.push({\r\n      id: this.attachmentItems.length,\r\n      name: file.name,\r\n      icon: AttachmentIcon.get(file.name),\r\n      file,\r\n      new: true,\r\n      remove: false\r\n    });\r\n  }\r\n  private async showErrorMessage(invalidFileList: string[], duplicatedList: string[], invalidSizeList: string[], invalidLengthList: string[] = []): Promise<void> {\r\n    const timeout = 500;\r\n\r\n    if (invalidFileList != null && invalidFileList.length > 0) {\r\n      await this.errorMessage(\r\n        this.acceptFileType,\r\n        this.invalidExtensionMessageSingular,\r\n        this.invalidExtensionMessagePlural\r\n      );\r\n    }\r\n\r\n    if (duplicatedList != null && duplicatedList.length > 0) {\r\n      setTimeout(async () => {\r\n        await this.errorMessage(\r\n          duplicatedList,\r\n          this.duplicatedMessageSingular,\r\n          this.duplicatedMessagePlural\r\n        );\r\n      }, timeout);\r\n    }\r\n\r\n    if (invalidSizeList != null && invalidSizeList.length > 0) {\r\n      setTimeout(async () => {\r\n        await this.errorMessageTwoVariables(\r\n          invalidSizeList,\r\n          this.invalidSizeMessageSingular,\r\n          this.invalidSizeMessagePlural,\r\n          this.maxSize.toString()\r\n        );\r\n      }, timeout);\r\n    }\r\n\r\n    if (invalidLengthList != null && invalidLengthList.length > 0) {\r\n      setTimeout(async () => {\r\n        const plural = this.maxNumberOfFiles > 1 ? this.invalidLengthMessagePlural : this.invalidLengthMessageSingular;\r\n        await this.errorMessageTwoVariables(\r\n          invalidLengthList,\r\n          this.invalidLengthMessageSingular,\r\n          plural,\r\n          this.maxNumberOfFiles.toString(),\r\n          this.maxNumberOfFiles > 1\r\n        );\r\n      }, timeout);\r\n    }\r\n  }\r\n  private async errorMessage(arrayList: string[], singularMessage: string, pluralMessage: string): Promise<void> {\r\n    const fileNames = GlSharedComponentInputDragAndDropSimpleComponent.fileNameList(arrayList);\r\n    const isPlural = arrayList.length > 1;\r\n    const singular = singularMessage.replace('$var1$', fileNames);\r\n    const plural = pluralMessage.replace('$var1$', fileNames);\r\n    const message = isPlural ? plural : singular;\r\n\r\n    await this._alert.show(message);\r\n  }\r\n  private async errorMessageTwoVariables(arrayList: string[], singularMessage: string, pluralMessage: string, firstVariable: string, isPluralComparator: boolean = null): Promise<void> {\r\n    const fileNames = GlSharedComponentInputDragAndDropSimpleComponent.fileNameList(arrayList);\r\n    const isPlural = isPluralComparator && arrayList.length > 1 || !isPluralComparator && arrayList.length > 1;\r\n    const singular = singularMessage.replace('$var1$', firstVariable).replace('$var2$', fileNames);\r\n    const plural = pluralMessage.replace('$var1$', firstVariable).replace('$var2$', fileNames);\r\n\r\n    const message = isPlural ? plural : singular;\r\n\r\n    await this._alert.show(message);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\nimport { GlCoreModule } from '../../core/gl-core.module';\r\nimport { GlSharedComponentAttachmentItemComponent } from './attachment/item/gl-shared-component-attachment-item.component';\r\nimport { GlSharedComponentAttachmentImagePreviewComponent } from './attachment/image/preview/gl-shared-component-attachment-image-preview.component';\r\nimport { GlSharedComponentButtonAttachmentFileComponent } from './button/attachment/file/gl-shared-component-button-attachment-file.component';\r\nimport { GlSharedComponentButtonAttachmentLinkComponent } from './button/attachment/link/gl-shared-component-button-attachment-link.component';\r\nimport { GlSharedComponentButtonImageSimpleComponent } from './button/image/simple/gl-shared-component-button-image-simple.component';\r\nimport { GlSharedComponentButtonImageTooltipComponent } from './button/image/tooltip/gl-shared-component-button-image-tooltip.component';\r\nimport { GlSharedComponentButtonInterfaceComponent } from './button/interface/gl-shared-component-button-interface.component';\r\nimport { GlSharedComponentButtonMenuSimpleComponent } from './button/menu/simple/gl-shared-component-button-menu-simple.component';\r\nimport { GlSharedComponentButtonMenuTooltipComponent } from './button/menu/tooltip/gl-shared-component-button-menu-tooltip.component';\r\nimport { GlSharedComponentErrorMessageComponent } from './error-message/gl-shared-component-error-message.component';\r\nimport { GlSharedComponentFilterComponent } from './filter/gl-shared-component-filter.component';\r\nimport { GlSharedComponentFilterContainerComponent } from './filter/container/gl-shared-component-filter-container.component';\r\nimport { GlSharedComponentFooterContainerComponent } from './footer/container/gl-shared-component-footer-container.component';\r\nimport { GlSharedComponentFooterSimpleComponent } from './footer/simple/gl-shared-component-footer-simple.component';\r\nimport { GlSharedComponentHeaderDefaultComponent } from './header/default/gl-shared-component-header-default.component';\r\nimport { GlSharedComponentInputAutocompleteLabelComponent } from './input/autocomplete/label/gl-shared-component-input-autocomplete-label.component';\r\nimport { GlSharedComponentInputAutocompleteSimpleComponent } from './input/autocomplete/simple/gl-shared-component-input-autocomplete-simple.component';\r\nimport { GlSharedComponentInputButtonSimpleComponent } from './input/button/simple/gl-shared-component-input-button-simple.component';\r\nimport { GlSharedComponentInputButtonHyperlinkComponent } from './input/button/hyperlink/gl-shared-component-input-button-hyperlink.component';\r\nimport { GlSharedComponentInputOptionSimpleComponent } from './input/option/simple/gl-shared-component-input-option-simple.component';\r\nimport { GlSharedComponentInputTextSimpleComponent } from './input/text/simple/gl-shared-component-input-text-simple.component';\r\nimport { GlSharedComponentInputTextLabelButtonContainerComponent } from './input/text/label/button/container/gl-shared-component-input-text-label-button-container.component';\r\nimport { GlSharedComponentInputTextLabelSimpleComponent } from './input/text/label/simple/gl-shared-component-input-text-label-simple.component';\r\nimport { GlSharedComponentInputTextAreaLabelComponent } from './input/text-area/label/gl-shared-component-input-text-area-label.component';\r\nimport { GlSharedComponentInputTextAreaSimpleComponent } from './input/text-area/simple/gl-shared-component-input-text-area-simple.component';\r\nimport { GlSharedComponentLogoSquareComponent } from './logo/square/gl-shared-component-logo-square.component';\r\nimport { GlSharedComponentModalAttachmentLinkComponent } from './modal/attachment/link/gl-shared-component-modal-attachment-link.component';\r\nimport { GlSharedComponentModalAlertComponent } from './modal/alert/gl-shared-component-modal-alert.component';\r\nimport { GlSharedComponentModalLoadingComponent } from './modal/loading/gl-shared-component-modal-loading.component';\r\nimport { GlSharedComponentModalHeaderComponent } from './modal/header/gl-shared-component-modal-header.component';\r\nimport { GlSharedComponentMenuBackgroundComponent } from './menu/background/gl-shared-component-menu-background.component';\r\nimport { GlSharedComponentMenuItemComponent } from './menu/item/gl-shared-component-menu-item.component';\r\nimport { GlSharedComponentMenuComponent } from './menu/gl-shared-component-menu.component';\r\nimport { GlSharedComponentNavigationTabSimpleComponent } from './navigation/tab/simple/gl-shared-component-navigation-tab-simple.component';\r\nimport { GlSharedComponentNavigationTabContainerComponent } from './navigation/tab/container/gl-shared-component-navigation-tab-container.component';\r\nimport { GlSharedComponentTitleLabelSimpleComponent } from './title/label/simple/gl-shared-component-title-label-simple.component';\r\nimport { GlSharedComponentTitleLabelButtonSimpleComponent } from './title/label/button/simple/gl-shared-component-title-label-button-simple.component';\r\nimport { GlSharedComponentTitleLabelButtonContainerComponent } from './title/label/button/container/gl-shared-component-title-label-button-container.component';\r\nimport { GlSharedComponentTitlePageComponent } from './title/page/gl-shared-component-title-page.component';\r\nimport { GlSharedComponentInputDatepickerSimpleDayMonthYearComponent } from './input/datepicker/simple/day-month-year/gl-shared-component-input-datepicker-simple-day-month-year.component';\r\nimport { GlSharedComponentPagingComponent } from './paging/gl-shared-component-paging.component';\r\nimport { GlSharedComponentInputDatepickerSimpleMonthYearComponent } from './input/datepicker/simple/month-year/gl-shared-component-input-datepicker-simple-month-year.component';\r\nimport { GlSharedComponentInputDatepickerLabelComponent } from './input/datepicker/label/gl-shared-component-input-datepicker-label.component';\r\nimport { GlSharedComponentInputSwitchComponent } from './input/switch/gl-shared-component-input-switch.component';\r\nimport { GlSharedComponentInputTextSimpleWithStepComponent } from './input/text/simple/with-step/gl-shared-component-input-text-simple-with-step.component';\r\nimport { GlSharedComponentInputListItemRemoveComponent } from './list/item-remove/gl-shared-component-input-list-item-remove.component';\r\nimport { GlSharedComponentInputListItemUpDownComponent } from './list/item-up-down/gl-shared-component-input-list-item-up-down.component';\r\nimport { GlSharedComponentInputCheckBoxSimpleComponent } from './input/check-box/simple/gl-shared-component-input-check-box-simple.component';\r\nimport { GlSharedComponentInputCheckBoxLabelComponent } from './input/check-box/label/gl-shared-component-input-check-box-label.component';\r\nimport { GlSharedComponentInputDragAndDropSimpleComponent } from './input/drag-and-drop/simple/gl-shared-component-input-drag-and-drop-simple.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GlSharedComponentAttachmentItemComponent,\r\n    GlSharedComponentAttachmentImagePreviewComponent,\r\n    GlSharedComponentButtonAttachmentFileComponent,\r\n    GlSharedComponentButtonAttachmentLinkComponent,\r\n    GlSharedComponentButtonImageSimpleComponent,\r\n    GlSharedComponentButtonImageTooltipComponent,\r\n    GlSharedComponentButtonInterfaceComponent,\r\n    GlSharedComponentButtonMenuSimpleComponent,\r\n    GlSharedComponentButtonMenuTooltipComponent,\r\n    GlSharedComponentErrorMessageComponent,\r\n    GlSharedComponentFilterComponent,\r\n    GlSharedComponentFilterContainerComponent,\r\n    GlSharedComponentFooterContainerComponent,\r\n    GlSharedComponentFooterSimpleComponent,\r\n    GlSharedComponentHeaderDefaultComponent,\r\n    GlSharedComponentInputAutocompleteLabelComponent,\r\n    GlSharedComponentInputAutocompleteSimpleComponent,\r\n    GlSharedComponentInputButtonSimpleComponent,\r\n    GlSharedComponentInputButtonHyperlinkComponent,\r\n    GlSharedComponentInputOptionSimpleComponent,\r\n    GlSharedComponentInputTextSimpleComponent,\r\n    GlSharedComponentInputTextLabelButtonContainerComponent,\r\n    GlSharedComponentInputTextLabelSimpleComponent,\r\n    GlSharedComponentInputTextAreaSimpleComponent,\r\n    GlSharedComponentInputTextAreaLabelComponent,\r\n    GlSharedComponentLogoSquareComponent,\r\n    GlSharedComponentModalAlertComponent,\r\n    GlSharedComponentModalAttachmentLinkComponent,\r\n    GlSharedComponentModalHeaderComponent,\r\n    GlSharedComponentModalLoadingComponent,\r\n    GlSharedComponentMenuBackgroundComponent,\r\n    GlSharedComponentMenuComponent,\r\n    GlSharedComponentMenuItemComponent,\r\n    GlSharedComponentNavigationTabSimpleComponent,\r\n    GlSharedComponentNavigationTabContainerComponent,\r\n    GlSharedComponentPagingComponent,\r\n    GlSharedComponentTitleLabelSimpleComponent,\r\n    GlSharedComponentTitleLabelButtonSimpleComponent,\r\n    GlSharedComponentTitleLabelButtonContainerComponent,\r\n    GlSharedComponentTitlePageComponent,\r\n    GlSharedComponentInputDatepickerSimpleDayMonthYearComponent,\r\n    GlSharedComponentInputDatepickerSimpleMonthYearComponent,\r\n    GlSharedComponentInputDatepickerLabelComponent,\r\n    GlSharedComponentInputDatepickerLabelComponent,\r\n    GlSharedComponentInputSwitchComponent,\r\n    GlSharedComponentInputTextSimpleWithStepComponent,\r\n    GlSharedComponentInputListItemRemoveComponent,\r\n    GlSharedComponentInputListItemUpDownComponent,\r\n    GlSharedComponentInputCheckBoxSimpleComponent,\r\n    GlSharedComponentInputCheckBoxLabelComponent,\r\n    GlSharedComponentInputDragAndDropSimpleComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    GlCoreModule,\r\n    RouterModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDialogModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    OverlayModule,\r\n    MatDatepickerModule\r\n  ],\r\n  exports: [\r\n    GlSharedComponentAttachmentItemComponent,\r\n    GlSharedComponentAttachmentImagePreviewComponent,\r\n    GlSharedComponentButtonImageSimpleComponent,\r\n    GlSharedComponentButtonAttachmentLinkComponent,\r\n    GlSharedComponentButtonImageTooltipComponent,\r\n    GlSharedComponentButtonInterfaceComponent,\r\n    GlSharedComponentButtonMenuSimpleComponent,\r\n    GlSharedComponentButtonMenuTooltipComponent,\r\n    GlSharedComponentErrorMessageComponent,\r\n    GlSharedComponentFilterComponent,\r\n    GlSharedComponentFilterContainerComponent,\r\n    GlSharedComponentFooterContainerComponent,\r\n    GlSharedComponentFooterSimpleComponent,\r\n    GlSharedComponentHeaderDefaultComponent,\r\n    GlSharedComponentInputAutocompleteLabelComponent,\r\n    GlSharedComponentInputAutocompleteSimpleComponent,\r\n    GlSharedComponentInputButtonSimpleComponent,\r\n    GlSharedComponentInputButtonHyperlinkComponent,\r\n    GlSharedComponentInputDragAndDropSimpleComponent,\r\n    GlSharedComponentInputOptionSimpleComponent,\r\n    GlSharedComponentInputTextAreaSimpleComponent,\r\n    GlSharedComponentInputTextAreaLabelComponent,\r\n    GlSharedComponentInputTextLabelButtonContainerComponent,\r\n    GlSharedComponentInputTextLabelSimpleComponent,\r\n    GlSharedComponentInputTextSimpleComponent,\r\n    GlSharedComponentLogoSquareComponent,\r\n    GlSharedComponentMenuBackgroundComponent,\r\n    GlSharedComponentMenuComponent,\r\n    GlSharedComponentMenuItemComponent,\r\n    GlSharedComponentModalAlertComponent,\r\n    GlSharedComponentModalAttachmentLinkComponent,\r\n    GlSharedComponentModalHeaderComponent,\r\n    GlSharedComponentModalLoadingComponent,\r\n    GlSharedComponentNavigationTabSimpleComponent,\r\n    GlSharedComponentNavigationTabContainerComponent,\r\n    GlSharedComponentPagingComponent,\r\n    GlSharedComponentTitlePageComponent,\r\n    GlSharedComponentTitleLabelButtonSimpleComponent,\r\n    GlSharedComponentTitleLabelButtonContainerComponent,\r\n    GlSharedComponentTitleLabelSimpleComponent,\r\n    GlSharedComponentButtonAttachmentFileComponent,\r\n    GlSharedComponentInputDatepickerSimpleDayMonthYearComponent,\r\n    GlSharedComponentInputDatepickerSimpleMonthYearComponent,\r\n    GlSharedComponentInputDatepickerLabelComponent,\r\n    GlSharedComponentInputSwitchComponent,\r\n    GlSharedComponentInputTextSimpleWithStepComponent,\r\n    GlSharedComponentInputListItemRemoveComponent,\r\n    GlSharedComponentInputListItemUpDownComponent,\r\n    GlSharedComponentInputCheckBoxSimpleComponent,\r\n    GlSharedComponentInputCheckBoxLabelComponent\r\n  ]\r\n})\r\nexport class GlComponentModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GlComponentModule } from './component/gl-component.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    GlComponentModule\r\n  ]\r\n})\r\nexport class GlSharedModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { GlSharedModule } from './shared/gl-shared.module';\r\nimport { GlCoreModule } from './core/gl-core.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    GlSharedModule,\r\n    GlCoreModule,\r\n  ],\r\n  exports: [],\r\n  providers: []\r\n})\r\nexport class GlNgFrontendModule {\r\n  constructor() { }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-shared-view-error-message',\r\n  templateUrl: './gl-shared-view-error-message.component.html',\r\n  styleUrls: ['./gl-shared-view-error-message.component.scss']\r\n})\r\nexport class GlSharedViewErrorMessageComponent implements AfterViewInit {\r\n  @ViewChild('mainContainer') mainContainer: ElementRef<HTMLDivElement>;\r\n\r\n  @Input() blurBackground: string;\r\n  @Input() background: string;\r\n\r\n  @Input() logoImageScr: string;\r\n  @Input() logoImageAlt: string;\r\n  @Input() logoHorizontalPosition: 'left' | 'right' = 'left';\r\n  @Input() logoVerticalPosition: 'top' | 'bottom' = 'top';\r\n\r\n  @Input() errorPosition: 'left' | 'right' = 'left';\r\n  @Input() errorCode: string | number;\r\n  @Input() errorMessage: string;\r\n  @Input() errorButtonLabel: string;\r\n  @Output() errorButtonAction$: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Input() footerMainDescription: string;\r\n  @Input() footerShowContainer: boolean;\r\n  @Input() footerDescription: string;\r\n  @Input() footerImageDescription: string = 'Image logo';\r\n  @Input() footerImageSrc: string;\r\n  @Input() footerLink: string;\r\n\r\n  constructor() { }\r\n\r\n  ngAfterViewInit(): void {\r\n    const mainContainer: HTMLDivElement = this.mainContainer.nativeElement;\r\n    const mainContainerParent: HTMLDivElement = this.mainContainer.nativeElement.parentNode as HTMLDivElement;\r\n\r\n    mainContainer.style.backgroundImage = `url(${this.background})`;\r\n    mainContainerParent.style.backgroundImage = `url(${this.blurBackground})`;\r\n  }\r\n\r\n  errorButtonAction(): void {\r\n    this.errorButtonAction$.emit();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GlComponentModule } from '../component/gl-component.module';\r\nimport { GlSharedViewErrorMessageComponent } from './error-message/gl-shared-view-error-message.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GlSharedViewErrorMessageComponent\r\n  ],\r\n  exports: [\r\n    GlSharedViewErrorMessageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    GlComponentModule\r\n  ]\r\n})\r\nexport class GlSharedViewModule { }\r\n"]}